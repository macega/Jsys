package br.rel.filtros;

import br.sql.bean.JsysClientesIds;
import br.sql.util.ManagerData;
import br.sql.util.ReportUtils;
import br.sql.util.timerKeys;
import java.awt.event.ActionEvent;
import java.util.HashMap;
import java.util.Map;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.KeyStroke;
import br.sql.util.Retorna;
import br.sql.util.Validar;

/**
 *
 * @author Juliano Alves Medina
 */
public class FiltroVendedor extends javax.swing.JDialog {

    private final timerKeys tk = new timerKeys();

    /**
     * Creates new form FiltroVendedor
     *
     * @param parent
     * @param modal
     */
    public FiltroVendedor(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        registrarAcoesDoTeclado(jPanel1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        idVendedorField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Filtro Relatório");
        setResizable(false);

        jPanel1.setFocusable(false);

        jButton1.setText("Cancelar");
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Passe o Cartão");
        jLabel1.setToolTipText("");
        jLabel1.setFocusable(false);

        idVendedorField.setToolTipText("");
        idVendedorField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                idVendedorFieldKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                    .addComponent(idVendedorField))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(idVendedorField, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void idVendedorFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idVendedorFieldKeyPressed
        tk.ativar();
    }//GEN-LAST:event_idVendedorFieldKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(final String args[]) {
        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            FiltroVendedor dialog = new FiltroVendedor(new javax.swing.JFrame(), false);
            dialog.setRelatorio(args);
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField idVendedorField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    // inicia implementa funcao para pegar a tecla apertado pelo usuario 
    private final BotaoAction acaoBotaoEnter = new BotaoAction();

    //Ações para o botão numérico. Ela simplesmente concatena o número ao final 
    //do texto do visor.
    private class BotaoAction extends AbstractAction {

        @Override
        public void actionPerformed(ActionEvent e) {
            abreRelatorio();
        }
    }

    private void registrarAcoesDoTeclado(JPanel painel) {
        //Damos um nome para cada ação. Esse nome é útil pois mais de 
        //uma tecla pode ser associada a cada ação, como veremos abaixo
        ActionMap actionMap = painel.getActionMap();
        actionMap.put("botaoENTER", acaoBotaoEnter);

        painel.setActionMap(actionMap);

        //Pegamos o input map que ocorre sempre que a janela atual está em foco
        InputMap imap = painel.getInputMap(JPanel.WHEN_IN_FOCUSED_WINDOW);

        //Associamos o pressionar das teclas (keystroke) aos eventos.
        //O nome do KeyStroke pode ser obtido através da classe KeyEvent.
        //Lá está cheio de constantes como KeyEvent.VK_NUMPAD1. 
        //Essa string é o nome sem o VK_
        //Teclas da parte de cima do teclado.
        imap.put(KeyStroke.getKeyStroke("ENTER"), "botaoENTER");
        //imap.put(KeyStroke.getKeyStroke("F2"), "botao1");
    }
    // finaliza implementa funcao para pegar a tecla apertado pelo usuario 

    private void abreRelatorio() {
        if (tk.isCartao()) {
            if (Validar.isNotNullOrWhite(idVendedorField.getText())) {
                Map<Object, Object> filtro = new HashMap<>();
                filtro.put("id", idVendedorField.getText());
                JsysClientesIds vend = (JsysClientesIds) Retorna.findOneResult("JsysClientesIds.findById", filtro);
                if (vend != null) {
                    Map<Object, Object> parametros = new HashMap<>();
                    parametros.put("dataInicial", ManagerData.setHoraInicioDia(ManagerData.getDate()));
                    parametros.put("dataFinal", ManagerData.setHoraFimDia(ManagerData.getDate()));
                    parametros.put("idVendedor", vend.getJsysClientes().getIdCliente());
                    ReportUtils.openReport("Relatorio", getRelatorio()[0], parametros);
                } else {
                    JOptionPane.showMessageDialog(null, "Vendedor não encontrado", "ERRO", JOptionPane.ERROR_MESSAGE);
                }
            }
            this.dispose();
        } else {
            idVendedorField.setText("");
            tk.desativar();
            JOptionPane.showMessageDialog(null, "Falar com A Gerência.");
        }
    }

    private String[] relatorio;

    public String[] getRelatorio() {
        return relatorio;
    }

    public void setRelatorio(String[] relatorio) {
        this.relatorio = relatorio;
    }
}
