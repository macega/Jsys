package br.sql.nfe.Janelas;

import br.com.samuelweb.nfe.util.ConstantesUtil;
import br.sql.acesso.SQLDatabaseConnection;
import br.sql.bean.JsysNFe;
import br.sql.bean.JsysNFeReferencias;
import br.sql.bean.JsysNFeTransportadoras;
import br.sql.bean.JsysNFeVolumes;
import br.sql.bean.JsysOrcamento;
import br.sql.bean.JsysOrcamentoItens;
import br.sql.bean.JsysParametros;
import br.sql.nfe.danfe.ImprimirDanfe;
import br.sql.nfe.links.ConstantesFiscal;
import br.sql.nfe.xml.GerandoNFeJAXB;
import br.sql.log.Log;
import br.sql.defaultTableCellRenderer.ZebradoLocation;
import br.sql.nfe.util.XmlUtil;
import br.sql.util.GravaNoArquivo;
import br.sql.util.Mail;
import br.sql.util.ManagerData;
import br.sql.util.ManagerDecimal;
import br.sql.util.ManagerSQL;
import br.sql.util.ManagerString;
import br.sql.util.Retorna;
import br.sql.util.Validar;
import java.awt.Cursor;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.UnsupportedEncodingException;
import java.math.BigDecimal;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.mail.MessagingException;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Juliano Alves Medina
 */
public class NfeEmissao extends javax.swing.JDialog implements
        PropertyChangeListener {

    private static final JsysParametros par = Retorna.JsysParametros();
    private GerandoNFeJAXB xmlNfe;
    private JsysOrcamento venda;
    private java.util.Collection<JsysOrcamentoItens> itens;
    private static final SQLDatabaseConnection DADOS = new SQLDatabaseConnection();

    /**
     * A return status code - returned if Cancel button has been pressed
     */
    public static final int RET_CANCEL = 0;

    /**
     * A return status code - returned if OK button has been pressed
     */
    public static final int RET_OK = 1;

    /**
     * Creates new form NfeEmissao
     *
     * @param parent
     * @param modal
     * @param nVenda
     */
    public NfeEmissao(java.awt.Frame parent, boolean modal, Integer nVenda) {
        super(parent, modal);
        initComponents();
        setDisabled();
        setValoresIniciais();
        caregaVenda.setEnabled(false);
        assinar.setEnabled(false);
        validar.setEnabled(false);
        transmitir.setEnabled(false);

        // Close the dialog when Esc is pressed
        String cancelName = "cancel";
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
        ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                doClose(RET_CANCEL);
            }
        });
        actionConsulta();

        uJComboBoxTransportadora.addItem("", new JsysNFeTransportadoras());
        List<Object> O = Retorna.findList("JsysNFeTransportadoras.findAll");
        for (Object o : O) {
            JsysNFeTransportadoras t = (JsysNFeTransportadoras) o;
            uJComboBoxTransportadora.addItem(t.getXNome() + " " + t.getId(), t);
        }

        jTableVol.setDefaultRenderer(Object.class, new ZebradoLocation());
        jTableVol.setDefaultRenderer(Long.class, new ZebradoLocation());
        jTableVol.setDefaultRenderer(BigDecimal.class, new ZebradoLocation());

        if (Validar.isNotNull(nVenda) & nVenda > 0) {
            novaNfe();
            jTextFieldVenda.setText(nVenda.toString());
            consultaVenda();
        }
        jTableItens.getInputMap(JTable.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false), "selectNextColumnCell");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        registroAtual = new br.sql.bean.JsysNFe();
        queryVol = java.beans.Beans.isDesignTime() ? null : br.sql.acesso.ConnectionFactory.getEntityManagerNew().createQuery("SELECT j FROM JsysNFeVolumes j WHERE j.id = 0");
        listVol = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(queryVol.getResultList());
        queryItens = java.beans.Beans.isDesignTime() ? null : br.sql.acesso.ConnectionFactory.getEntityManagerNew().createQuery("SELECT j FROM JsysOrcamentoItens j WHERE j.jsysOrcamentoItensPK.idOrcamento = 0");
        listItens = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(queryItens.getResultList());
        queryNotasReferenciadas = java.beans.Beans.isDesignTime() ? null : br.sql.acesso.ConnectionFactory.getEntityManagerNew().createQuery("SELECT j FROM JsysNFeReferencias j WHERE j.id = 0");
        listNotasReferenciadas = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(queryNotasReferenciadas.getResultList());
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabelIdJsysNfe = new javax.swing.JLabel();
        jTabbedPaneGeral = new javax.swing.JTabbedPane();
        jPanelLista = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableNfe = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        dataInicialDateChooser = new com.toedter.calendar.JDateChooser();
        jTextFieldFiltro = new javax.swing.JTextField();
        dataFinalDateChooser = new com.toedter.calendar.JDateChooser();
        jButton4 = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jTabbedPaneNota = new javax.swing.JTabbedPane();
        jPanelNfe = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        uJComboBoxTpImp = new componentes.UJComboBox();
        jLabel4 = new javax.swing.JLabel();
        uJComboBoxIdDest = new componentes.UJComboBox();
        uJComboBoxIndPres = new componentes.UJComboBox();
        jLabel14 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldModelo = new javax.swing.JTextField();
        jTextFieldDV = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        uJComboBoxFinalidade = new componentes.UJComboBox();
        jLabel13 = new javax.swing.JLabel();
        uJComboBoxIndFinal = new componentes.UJComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        uJComboBoxFormaPagamento = new componentes.UJComboBox();
        jTextFieldnumeroNFe = new javax.swing.JTextField();
        jTextFieldCodigoNumerico = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldSerie = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldData = new javax.swing.JTextField();
        jTextFieldNaturazaOperacao = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        uJComboBoxTpEmis = new componentes.UJComboBox();
        jLabel21 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        uJComboBoxModFrete = new componentes.UJComboBox();
        uJComboBoxTransportadora = new componentes.UJComboBox();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jTextFieldinfCpl = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jTextFieldValorIcmsSt = new javax.swing.JTextField();
        jTextFieldValorIcms = new javax.swing.JTextField();
        jTextFieldvalorNfe = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        taskOutput = new javax.swing.JTextArea();
        jLabel22 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldVenda = new javax.swing.JTextField();
        jTextFieldDetalhesVenda = new javax.swing.JTextField();
        caregaVenda = new javax.swing.JButton();
        assinar = new javax.swing.JButton();
        validar = new javax.swing.JButton();
        transmitir = new javax.swing.JButton();
        imprimir = new javax.swing.JButton();
        email = new javax.swing.JButton();
        jProgressBarEmail = new javax.swing.JProgressBar();
        jPanelItens = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableItens = new javax.swing.JTable();
        jPanelVolumes = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableVol = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        jTextFieldQVol = new javax.swing.JTextField();
        jTextFieldEsp = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jTextFieldMarca = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jTextFieldNVol = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jTextFieldPesoL = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jTextFieldPesoB = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jButtonAddVol = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPaneRefs = new javax.swing.JTabbedPane();
        jPanelRef1 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableRefs1 = new javax.swing.JTable();
        jButtonIncluirRef1 = new javax.swing.JButton();
        jButtonEditarRef1 = new javax.swing.JButton();
        jButtonDeleteRef1 = new javax.swing.JButton();
        jPanelRef2 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTableRefs2 = new javax.swing.JTable();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jPanelRef3 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTableRefs3 = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Emissão de NF-e");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Emissão de NF-e");
        jLabel1.setToolTipText("");

        jLabelIdJsysNfe.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelIdJsysNfe)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabelIdJsysNfe, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPaneGeral.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPaneGeralStateChanged(evt);
            }
        });

        jTableNfe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableNfe.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableNfe.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableNfe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableNfeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableNfe);

        jButton1.setText("Fechar");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Editar");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTableNfe, org.jdesktop.beansbinding.ELProperty.create("${selectedElement!=null}"), jButton2, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Nova");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setText("Cancelar NF-e");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTableNfe, org.jdesktop.beansbinding.ELProperty.create("${selectedElement!=null}"), jButton5, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtro"));

        dataInicialDateChooser.setDate(ManagerData.getPrimeiroDiaDoMes()
        );

        jTextFieldFiltro.setToolTipText("");

        dataFinalDateChooser.setDate(ManagerData.getUltimoDiaDoMes()
        );

        jButton4.setText("Filtrar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel23.setText("Data Inicial");

        jLabel24.setText("Data Final");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jTextFieldFiltro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dataInicialDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dataFinalDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(dataInicialDateChooser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dataFinalDateChooser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelListaLayout = new javax.swing.GroupLayout(jPanelLista);
        jPanelLista.setLayout(jPanelListaLayout);
        jPanelListaLayout.setHorizontalGroup(
            jPanelListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelListaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 940, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelListaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelListaLayout.setVerticalGroup(
            jPanelListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelListaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton5))
                .addContainerGap())
        );

        jTabbedPaneGeral.addTab("Lista NF-e", null, jPanelLista, "");

        jTabbedPaneNota.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPaneNotaStateChanged(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        uJComboBoxTpImp.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0 - Sem geração de DANFE", "1 - DANFE normal, Retrato", "2 - DANFE normal, Paisagem", "3 - DANFE Simplificado", "4 - DANFE NFC-e", "5 - DANFE NFC-e em mensagem eletrônica" }));
        uJComboBoxTpImp.setSelectedIndex(1);
        uJComboBoxTpImp.setToolTipText("");
        uJComboBoxTpImp.setAutocompletar(true);

        jLabel4.setText("Modelo");

        uJComboBoxIdDest.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1 - Operação Interna", "2 - Operação Interestadual", "3 - Operação com Exterior" }));
        uJComboBoxIdDest.setAutocompletar(true);

        uJComboBoxIndPres.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0 - Não se aplica", "1 - Operação Presencial", "2 - Operaçao Não Presencial, pela Internet", "3 - Operação Não Presencial, pelo Teleatendimento", "4 - Operação Não Presencial, Outros" }));
        uJComboBoxIndPres.setSelectedIndex(1);
        uJComboBoxIndPres.setToolTipText("");
        uJComboBoxIndPres.setAutocompletar(true);

        jLabel14.setText("Tipo de Atendimento");
        jLabel14.setToolTipText("");

        jLabel9.setText("Forma de Pagamento");
        jLabel9.setToolTipText("");

        jTextFieldModelo.setEditable(false);
        jTextFieldModelo.setBackground(new java.awt.Color(255, 255, 204));

        jTextFieldDV.setEditable(false);
        jTextFieldDV.setBackground(new java.awt.Color(255, 255, 204));
        jTextFieldDV.setToolTipText("");

        jLabel12.setText("Consumidor Final ");
        jLabel12.setToolTipText("");

        uJComboBoxFinalidade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1 - NF-e Normal", "2 - NF-e Complementar", "3 - NF-e de Ajuste", "4 - NF-e Devolução de Mercadoria" }));
        uJComboBoxFinalidade.setAutocompletar(true);

        jLabel13.setText("Destino da Operação");
        jLabel13.setToolTipText("");

        uJComboBoxIndFinal.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0 - Normal ", "1 - Consumidor final" }));

        jLabel3.setText("Codigo Numerico");
        jLabel3.setToolTipText("");

        jLabel11.setText("Tipo Impressão DANFE");
        jLabel11.setToolTipText("");

        jLabel5.setText("Série");
        jLabel5.setToolTipText("");

        jLabel15.setText("Naturaza da Operação");
        jLabel15.setToolTipText("");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo Documento"));

        jRadioButton2.setSelected(true);
        jRadioButton2.setText("Saida");

        jRadioButton1.setText("Entrada");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton2)
                .addGap(0, 12, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jRadioButton1)
                .addComponent(jRadioButton2))
        );

        jLabel8.setText("DV");

        uJComboBoxFormaPagamento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0 - Pagamento a vista", "1 - Pagamento a prazo ", "2 - Outros" }));
        uJComboBoxFormaPagamento.setAutocompletar(true);

        jTextFieldnumeroNFe.setEditable(false);
        jTextFieldnumeroNFe.setBackground(new java.awt.Color(255, 255, 204));
        jTextFieldnumeroNFe.setToolTipText("Para editar a sequencia do numero da NF-e, Clique duas vezes no campo Numero. Só executar esse procedimento caso o sistema tenha perdido a sequencia da NF-e.");
        jTextFieldnumeroNFe.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldnumeroNFeFocusLost(evt);
            }
        });
        jTextFieldnumeroNFe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldnumeroNFeMouseClicked(evt);
            }
        });

        jTextFieldCodigoNumerico.setEditable(false);
        jTextFieldCodigoNumerico.setBackground(new java.awt.Color(255, 255, 204));

        jLabel10.setText("Finalidade de Emissão");
        jLabel10.setToolTipText("");

        jTextFieldSerie.setEditable(false);
        jTextFieldSerie.setBackground(new java.awt.Color(255, 255, 204));
        jTextFieldSerie.setToolTipText("");

        jLabel7.setText("Data e Hora da Emissão");
        jLabel7.setToolTipText("");

        jTextFieldData.setEditable(false);
        jTextFieldData.setBackground(new java.awt.Color(255, 255, 204));
        jTextFieldData.setToolTipText("");

        jTextFieldNaturazaOperacao.setDocument(new br.sql.plainDocument.JTextFieldTamanhoMaxDocument(59)
        );

        jLabel6.setText("Numero");
        jLabel6.setToolTipText("");

        uJComboBoxTpEmis.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1 - Emissão normal", "2 - Contingência FS-IA, com impressão do DANFE em formulário de segurança", "3 - Contingência SCAN (Sistema de Contingência do Ambiente Nacional)", "4 - Contingência DPEC (Declaração Prévia da Emissão em Contingência)", "5 - Contingência FS-DA, com impressão do DANFE em formulário de segurança", "6 - Contingência SVC-AN (SEFAZ Virtual de Contingência do AN)", "7 - Contingência SVC-RS (SEFAZ Virtual de Contingência do RS)", "9 - Contingência off-line da NFC-e" }));
        uJComboBoxTpEmis.setToolTipText("");
        uJComboBoxTpEmis.setAutocompletar(true);

        jLabel21.setText("Forma de Emissão");
        jLabel21.setToolTipText("");

        jLabel25.setText("Modalidade do Frete");
        jLabel25.setToolTipText("");

        uJComboBoxModFrete.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0 - Por conta do emitente", "1 - Por conta do destinatário/remetente", "2 - Por conta de terceiros", "9 - Sem frete" }));
        uJComboBoxModFrete.setSelectedIndex(3);
        uJComboBoxModFrete.setToolTipText("");
        uJComboBoxModFrete.setAutocompletar(true);
        uJComboBoxModFrete.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                uJComboBoxModFreteItemStateChanged(evt);
            }
        });

        uJComboBoxTransportadora.setAutocompletar(true);

        jLabel26.setText("Transportadora");
        jLabel26.setToolTipText("");

        jLabel27.setText("Informações Complementares");
        jLabel27.setToolTipText("");

        jTextFieldinfCpl.setDocument(new br.sql.plainDocument.JTextFieldTamanhoMaxDocument(4999)
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(uJComboBoxIdDest, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(uJComboBoxIndPres, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jTextFieldNaturazaOperacao)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4)
                            .addComponent(jTextFieldModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jTextFieldSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jTextFieldnumeroNFe, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldData, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldCodigoNumerico, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jTextFieldDV, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 268, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(uJComboBoxFormaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(uJComboBoxFinalidade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(uJComboBoxTpImp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(uJComboBoxTpEmis, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(uJComboBoxIndFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(uJComboBoxModFrete, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel26)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(uJComboBoxTransportadora, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTextFieldinfCpl))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextFieldModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFieldSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFieldnumeroNFe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7)
                                .addComponent(jLabel3)
                                .addComponent(jLabel8))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextFieldData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFieldCodigoNumerico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFieldDV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(uJComboBoxFormaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(uJComboBoxFinalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(uJComboBoxTpImp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel15))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(uJComboBoxIdDest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(uJComboBoxIndPres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldNaturazaOperacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel21)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(uJComboBoxTpEmis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel25)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(uJComboBoxModFrete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(uJComboBoxTransportadora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(uJComboBoxIndFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldinfCpl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextFieldValorIcmsSt.setEditable(false);
        jTextFieldValorIcmsSt.setBackground(new java.awt.Color(255, 255, 204));
        jTextFieldValorIcmsSt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldValorIcmsSt.setToolTipText("");

        jTextFieldValorIcms.setEditable(false);
        jTextFieldValorIcms.setBackground(new java.awt.Color(255, 255, 204));
        jTextFieldValorIcms.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jTextFieldvalorNfe.setEditable(false);
        jTextFieldvalorNfe.setBackground(new java.awt.Color(255, 255, 204));
        jTextFieldvalorNfe.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldvalorNfe.setToolTipText("");

        jLabel18.setText("Valor ICMS ST da nota");
        jLabel18.setToolTipText("");

        jLabel19.setText("Valor ICMS da nota");

        jLabel20.setText("Valor Total da NF-e");

        taskOutput.setEditable(false);
        taskOutput.setBackground(new java.awt.Color(255, 255, 204));
        taskOutput.setColumns(20);
        taskOutput.setRows(5);
        jScrollPane2.setViewportView(taskOutput);

        jLabel22.setForeground(new java.awt.Color(255, 51, 51));
        jLabel22.setText("Para editar a sequencia do numero da NF-e, Clique duas vezes no campo Numero.\nSó executar esse procedimento caso o sistema tenha perdido a sequencia da NF-e.");

        jLabel2.setText("Venda ");
        jLabel2.setToolTipText("");

        jTextFieldVenda.setDocument(new br.sql.plainDocument.IntegerDocument());
        jTextFieldVenda.setToolTipText("");
        jTextFieldVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldVendaKeyReleased(evt);
            }
        });

        jTextFieldDetalhesVenda.setEditable(false);
        jTextFieldDetalhesVenda.setBackground(new java.awt.Color(255, 255, 204));

        caregaVenda.setText("Carregar Venda");
        caregaVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caregaVendaActionPerformed(evt);
            }
        });

        assinar.setText("Assinar");
        assinar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assinarActionPerformed(evt);
            }
        });

        validar.setText("Validar");
        validar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validarActionPerformed(evt);
            }
        });

        transmitir.setText("Transmitir");
        transmitir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transmitirActionPerformed(evt);
            }
        });

        imprimir.setText("Imprimir");
        imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirActionPerformed(evt);
            }
        });

        email.setText("E-Mail");
        email.setToolTipText("");
        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jTextFieldVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldDetalhesVenda))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldvalorNfe, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel20))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldValorIcms, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel19))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18)
                                    .addComponent(jTextFieldValorIcmsSt, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel22)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(caregaVenda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(assinar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(validar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(transmitir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(imprimir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(email)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jProgressBarEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldValorIcmsSt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldValorIcms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldvalorNfe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldDetalhesVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(caregaVenda)
                            .addComponent(assinar)
                            .addComponent(validar)
                            .addComponent(transmitir)
                            .addComponent(imprimir)
                            .addComponent(email)))
                    .addComponent(jProgressBarEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelNfeLayout = new javax.swing.GroupLayout(jPanelNfe);
        jPanelNfe.setLayout(jPanelNfeLayout);
        jPanelNfeLayout.setHorizontalGroup(
            jPanelNfeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNfeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelNfeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelNfeLayout.setVerticalGroup(
            jPanelNfeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNfeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPaneNota.addTab("NF-e", jPanelNfe);

        jTableItens.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listItens, jTableItens);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${jsysProdutosT.idProduto}"));
        columnBinding.setColumnName("Codigo");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${jsysProdutosT.nomeProduto}"));
        columnBinding.setColumnName("Descriçao");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${quantidade}"));
        columnBinding.setColumnName("Quantidade");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${precoVenda}"));
        columnBinding.setColumnName("Preço Venda");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${totalProduto}"));
        columnBinding.setColumnName("Total Venda");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cfop}"));
        columnBinding.setColumnName("CFOP");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idProdutoNfe}"));
        columnBinding.setColumnName("Código 2");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane4.setViewportView(jTableItens);
        if (jTableItens.getColumnModel().getColumnCount() > 0) {
            jTableItens.getColumnModel().getColumn(0).setPreferredWidth(66);
            jTableItens.getColumnModel().getColumn(1).setPreferredWidth(380);
            jTableItens.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTableItens.getColumnModel().getColumn(3).setPreferredWidth(134);
            jTableItens.getColumnModel().getColumn(4).setPreferredWidth(119);
            jTableItens.getColumnModel().getColumn(5).setPreferredWidth(60);
            jTableItens.getColumnModel().getColumn(6).setPreferredWidth(55);
        }

        javax.swing.GroupLayout jPanelItensLayout = new javax.swing.GroupLayout(jPanelItens);
        jPanelItens.setLayout(jPanelItensLayout);
        jPanelItensLayout.setHorizontalGroup(
            jPanelItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelItensLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 935, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelItensLayout.setVerticalGroup(
            jPanelItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelItensLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 489, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPaneNota.addTab("Produtos", null, jPanelItens, "");

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Volumes"));

        jTableVol.setFocusable(false);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listVol, jTableVol);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${QVol}"));
        columnBinding.setColumnName("Quantidade");
        columnBinding.setColumnClass(Long.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${esp}"));
        columnBinding.setColumnName("Espécie");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${marca}"));
        columnBinding.setColumnName("Marca");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${NVol}"));
        columnBinding.setColumnName("Numeração");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${pesoL}"));
        columnBinding.setColumnName("Peso Líquido");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${pesoB}"));
        columnBinding.setColumnName("Peso Bruto");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane3.setViewportView(jTableVol);

        jLabel16.setText("Quantidade");
        jLabel16.setToolTipText("");

        jTextFieldQVol.setDocument(new br.sql.plainDocument.IntegerDocument());
        jTextFieldQVol.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldQVol.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldQVolKeyPressed(evt);
            }
        });

        jTextFieldEsp.setToolTipText("");
        jTextFieldEsp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldEspKeyPressed(evt);
            }
        });

        jLabel17.setText("Espécie");
        jLabel17.setToolTipText("");

        jTextFieldMarca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldMarcaKeyPressed(evt);
            }
        });

        jLabel28.setText("Marca");
        jLabel28.setToolTipText("");

        jTextFieldNVol.setToolTipText("");
        jTextFieldNVol.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldNVolKeyPressed(evt);
            }
        });

        jLabel29.setText("Numeração");
        jLabel29.setToolTipText("");

        jTextFieldPesoL.setDocument(new br.sql.plainDocument.MoedaDocument(14));
        jTextFieldPesoL.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldPesoL.setToolTipText("");
        jTextFieldPesoL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldPesoLKeyPressed(evt);
            }
        });

        jLabel30.setText("Peso Líquido (KG)");
        jLabel30.setToolTipText("");

        jTextFieldPesoB.setDocument(new br.sql.plainDocument.MoedaDocument(14));
        jTextFieldPesoB.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldPesoB.setToolTipText("");
        jTextFieldPesoB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldPesoBKeyPressed(evt);
            }
        });

        jLabel31.setText("Peso Bruto (KG)");
        jLabel31.setToolTipText("");

        jButtonAddVol.setText("Adicionar");
        jButtonAddVol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddVolActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 903, Short.MAX_VALUE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldQVol, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jTextFieldEsp))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel29)
                            .addComponent(jTextFieldNVol, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldPesoL, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel31)
                            .addComponent(jTextFieldPesoB, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAddVol)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel28)
                    .addComponent(jLabel29)
                    .addComponent(jLabel30)
                    .addComponent(jLabel31))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldQVol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldEsp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNVol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPesoL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPesoB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAddVol))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelVolumesLayout = new javax.swing.GroupLayout(jPanelVolumes);
        jPanelVolumes.setLayout(jPanelVolumesLayout);
        jPanelVolumesLayout.setHorizontalGroup(
            jPanelVolumesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelVolumesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelVolumesLayout.setVerticalGroup(
            jPanelVolumesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelVolumesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(276, Short.MAX_VALUE))
        );

        jTabbedPaneNota.addTab("Volumes", null, jPanelVolumes, "");

        jTableRefs1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listNotasReferenciadas, jTableRefs1);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${refNFe}"));
        columnBinding.setColumnName("NF-e");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${refCTe}"));
        columnBinding.setColumnName("CT-e");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${CUF}"));
        columnBinding.setColumnName("UF");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${aamm}"));
        columnBinding.setColumnName("AAMM");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cnpj}"));
        columnBinding.setColumnName("CNPJ");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${modelo}"));
        columnBinding.setColumnName("MOD");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${serie}"));
        columnBinding.setColumnName("Serie");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${NNF}"));
        columnBinding.setColumnName("Numero NF");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane6.setViewportView(jTableRefs1);

        jButtonIncluirRef1.setText("Incluir");
        jButtonIncluirRef1.setToolTipText("");
        jButtonIncluirRef1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIncluirRef1ActionPerformed(evt);
            }
        });

        jButtonEditarRef1.setText("Editar");
        jButtonEditarRef1.setEnabled(false);

        jButtonDeleteRef1.setText("Deletar");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTableRefs1, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jButtonDeleteRef1, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jButtonDeleteRef1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteRef1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelRef1Layout = new javax.swing.GroupLayout(jPanelRef1);
        jPanelRef1.setLayout(jPanelRef1Layout);
        jPanelRef1Layout.setHorizontalGroup(
            jPanelRef1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRef1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRef1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 930, Short.MAX_VALUE)
                    .addGroup(jPanelRef1Layout.createSequentialGroup()
                        .addComponent(jButtonIncluirRef1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonEditarRef1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDeleteRef1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelRef1Layout.setVerticalGroup(
            jPanelRef1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRef1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelRef1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonIncluirRef1)
                    .addComponent(jButtonEditarRef1)
                    .addComponent(jButtonDeleteRef1))
                .addContainerGap())
        );

        jTabbedPaneRefs.addTab("Notas e Conhecimentos Fiscais Referenciados", null, jPanelRef1, "");

        jTableRefs2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableRefs2.setEnabled(false);
        jScrollPane7.setViewportView(jTableRefs2);

        jButton9.setText("Incluir");
        jButton9.setEnabled(false);

        jButton10.setText("Editar");
        jButton10.setEnabled(false);

        jButton11.setText("Deletar");
        jButton11.setEnabled(false);

        javax.swing.GroupLayout jPanelRef2Layout = new javax.swing.GroupLayout(jPanelRef2);
        jPanelRef2.setLayout(jPanelRef2Layout);
        jPanelRef2Layout.setHorizontalGroup(
            jPanelRef2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRef2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRef2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 930, Short.MAX_VALUE)
                    .addGroup(jPanelRef2Layout.createSequentialGroup()
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelRef2Layout.setVerticalGroup(
            jPanelRef2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRef2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelRef2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton9)
                    .addComponent(jButton10)
                    .addComponent(jButton11))
                .addContainerGap())
        );

        jTabbedPaneRefs.addTab("Notas Referenciadas de Produtor", null, jPanelRef2, "");

        jTableRefs3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableRefs3.setEnabled(false);
        jScrollPane8.setViewportView(jTableRefs3);

        jButton6.setText("Incluir");
        jButton6.setEnabled(false);

        jButton7.setText("Editar");
        jButton7.setEnabled(false);

        jButton8.setText("Deletar");
        jButton8.setEnabled(false);

        javax.swing.GroupLayout jPanelRef3Layout = new javax.swing.GroupLayout(jPanelRef3);
        jPanelRef3.setLayout(jPanelRef3Layout);
        jPanelRef3Layout.setHorizontalGroup(
            jPanelRef3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRef3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRef3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 930, Short.MAX_VALUE)
                    .addGroup(jPanelRef3Layout.createSequentialGroup()
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelRef3Layout.setVerticalGroup(
            jPanelRef3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRef3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelRef3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton7)
                    .addComponent(jButton8))
                .addContainerGap())
        );

        jTabbedPaneRefs.addTab("Cupons Fiscais Vinculados à NF-e", null, jPanelRef3, "");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneRefs)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneRefs)
        );

        jTabbedPaneNota.addTab("Documento Fiscal Referenciado", null, jPanel2, "");

        jTabbedPaneGeral.addTab("NF-e", null, jTabbedPaneNota, "");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPaneGeral)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPaneGeral)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        novaNfe();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void caregaVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caregaVendaActionPerformed
        setRegistroAtual();
        if (listItens.isEmpty()) {
            loadItens(registroAtual.getVenda());
        }
        itens.forEach((iten) -> {
            br.sql.acesso.ConnectionFactory.update(iten);
        });
        if (validarVenda()) {
            if (registroAtual != null
                    && !registroAtual.getEmitida()) {
                Map<Object, Object> filtro = new HashMap<>();
                filtro.clear();
                filtro.put("nfeId", registroAtual.getNfeId());
                JsysNFe jsysNfe = (JsysNFe) Retorna.findOneResult("JsysNFe.findByNfeId", filtro);
                xmlNfe = new GerandoNFeJAXB(jsysNfe, "", jTextFieldnumeroNFe.getText().trim());
                try {
                    // vai gerar o XML
                    if (xmlNfe.gerar()) {
                        JOptionPane.showMessageDialog(this, "NF-e Criada com Sucesso", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                        taskOutput.append(String.format("NF-e Criada com Sucesso" + System.getProperty("line.separator")));
                        setDisabled();
                        //venda = xmlNfe.getVenda();
                        registroAtual = xmlNfe.getJsysNfe();
                        caregarDados();
                        caregaVenda.setEnabled(false);
                        transmitir.setEnabled(true);
                    } else {
                        Log.registraErro(this.getClass().getName(), "Erro ao Criar NF-e", new Exception("Erro ao Criar NF-e"));
                        JOptionPane.showMessageDialog(this, "Erro ao Criar NF-e", "Erro", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (Exception e) {
                    Log.registraErro("NfeEmissao", "caregaVendaActionPerformed", e);
                }
            } else {
                setDisabled();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Verifique o Cadastro do Cliente", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_caregaVendaActionPerformed

    private void assinarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assinarActionPerformed
//        AssinarXMLsCertfificadoA1 assinador = new AssinarXMLsCertfificadoA1();
//        if (assinador.assinar(xmlNfe.getChaveAcesso(), "Lote")) {
//            aviso("NF-e Assinada com Sucesso");
//            assinar.setEnabled(false);
//            validar.setEnabled(true);
//        } else {
//            erro("Erro ao Assinar NF-e");
//        }
    }//GEN-LAST:event_assinarActionPerformed

    private void validarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validarActionPerformed
//        ValidacaoNFeXML validador = new ValidacaoNFeXML();
//        if (validador.Validar(xmlNfe.getChaveAcesso(), "Lote")) {
//            aviso("NF-e Validada com Sucesso");
//            validar.setEnabled(false);
//            transmitir.setEnabled(true);
//        } else {
//            erro(validador.getMensagenErro());
//        }
    }//GEN-LAST:event_validarActionPerformed

    private void transmitirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transmitirActionPerformed
        transmitir.setEnabled(false);
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        //Instances of javax.swing.SwingWorker are not reusuable, so
        //we create new instances as needed.
        TaskTransmitir taskTransmitir = new TaskTransmitir();
        taskTransmitir.addPropertyChangeListener(this);
        taskTransmitir.execute();
    }//GEN-LAST:event_transmitirActionPerformed

    private void jTabbedPaneGeralStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPaneGeralStateChanged
        if (jTabbedPaneGeral.getSelectedComponent() == jTabbedPaneNota) {
            changedTabbed();
        } else {
            setDisabled();
            //setValoresIniciais();
            caregaVenda.setEnabled(false);
            assinar.setEnabled(false);
            validar.setEnabled(false);
            transmitir.setEnabled(false);
            imprimir.setEnabled(false);
            email.setEnabled(false);
        }
    }//GEN-LAST:event_jTabbedPaneGeralStateChanged

    private void jTextFieldnumeroNFeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldnumeroNFeMouseClicked
        if (evt.getClickCount() == 2) {
            jTextFieldnumeroNFe.setEditable(true);
            jTextFieldnumeroNFe.setBackground(new java.awt.Color(255, 255, 255));
        }
    }//GEN-LAST:event_jTextFieldnumeroNFeMouseClicked

    private void jTextFieldnumeroNFeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldnumeroNFeFocusLost
        jTextFieldnumeroNFe.setEditable(false);
        jTextFieldnumeroNFe.setBackground(new java.awt.Color(255, 255, 204));
    }//GEN-LAST:event_jTextFieldnumeroNFeFocusLost

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        editar();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        actionConsulta();
        setCursor(null);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        doClose(RET_CANCEL);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextFieldVendaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldVendaKeyReleased
        consultaVenda();
    }//GEN-LAST:event_jTextFieldVendaKeyReleased

    private void imprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirActionPerformed
        ImprimirDanfe.nfe(registroAtual.getChaveAcesso());
    }//GEN-LAST:event_imprimirActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        email.setEnabled(false);
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        //Instances of javax.swing.SwingWorker are not reusuable, so
        //we create new instances as needed.
        TaskEmail taskEmail = new TaskEmail();
        taskEmail.addPropertyChangeListener(this);
        taskEmail.execute();
    }//GEN-LAST:event_emailActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            int[] selected = jTableNfe.getSelectedRows();
            for (int i = 0; i < selected.length; i++) {
                java.util.Map<Object, Object> filtro = new HashMap<>();
                filtro.put("nfeId", jTableNfe.getValueAt(jTableNfe.convertRowIndexToModel(selected[i]), 0));
                JsysNFe nf = (JsysNFe) Retorna.findOneResult("JsysNFe.findByNfeId", filtro);
                NfceCancelamento cancelar = new NfceCancelamento(null, true, nf);
                cancelar.setVisible(true);
                actionConsulta();
            }
        } catch (NumberFormatException e) {
            Log.registraErro(this.getClass().getName(), "emitirCupom", e);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void uJComboBoxModFreteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_uJComboBoxModFreteItemStateChanged
        setEnableCompTrasportadora();
    }//GEN-LAST:event_uJComboBoxModFreteItemStateChanged

    private void jButtonAddVolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddVolActionPerformed
        insertVol();
    }//GEN-LAST:event_jButtonAddVolActionPerformed

    private void jTableNfeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableNfeMouseClicked
        if (evt.getClickCount() > 1) {
            editar();
        }
    }//GEN-LAST:event_jTableNfeMouseClicked

    private void jTextFieldQVolKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldQVolKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jTextFieldEsp.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldQVolKeyPressed

    private void jTextFieldEspKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldEspKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jTextFieldMarca.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldEspKeyPressed

    private void jTextFieldMarcaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMarcaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jTextFieldNVol.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldMarcaKeyPressed

    private void jTextFieldNVolKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNVolKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jTextFieldPesoL.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldNVolKeyPressed

    private void jTextFieldPesoLKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPesoLKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jTextFieldPesoB.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldPesoLKeyPressed

    private void jTextFieldPesoBKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPesoBKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButtonAddVol.doClick();

        }
    }//GEN-LAST:event_jTextFieldPesoBKeyPressed

    private void jTabbedPaneNotaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPaneNotaStateChanged
        if (jTabbedPaneNota.getSelectedComponent() == jPanelItens) {
            setRegistroAtual();
            if (registroAtual != null && listItens.isEmpty()) {
                loadItens(registroAtual.getVenda());
            }
        } else if (jTabbedPaneNota.getSelectedComponent() == jPanelVolumes) {
            setRegistroAtual();
            if (registroAtual != null && listVol.isEmpty()) {
                loadVolumes(registroAtual.getNfeId());
            }
        } else if (jTabbedPaneNota.getSelectedComponent() == jPanelRef1
                | jTabbedPaneNota.getSelectedComponent() == jPanelRef2
                | jTabbedPaneNota.getSelectedComponent() == jPanelRef3) {
            setRegistroAtual();
            if (registroAtual != null) {
                loadReferencia(registroAtual.getNfeId());
            }
        }
    }//GEN-LAST:event_jTabbedPaneNotaStateChanged

    private void jButtonIncluirRef1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIncluirRef1ActionPerformed
        NfeEmissaoAddRefNfe dialog = new NfeEmissaoAddRefNfe(new javax.swing.JFrame(), true, registroAtual);
        dialog.setVisible(true);
        JsysNFeReferencias ref = dialog.getRef();
        setRegistroAtual();
        if (ref.getNfeId() != null && br.sql.acesso.ConnectionFactory.insert(ref) instanceof JsysNFeReferencias) {
            loadReferencia(ref.getNfeId().getNfeId());
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao Cadastras os Referencia!", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonIncluirRef1ActionPerformed

    private void jButtonDeleteRef1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteRef1ActionPerformed
        int[] selected = jTableRefs1.getSelectedRows();
        List<JsysNFeReferencias> toRemove = new ArrayList<>(selected.length);
        for (int idx = 0; idx < selected.length; idx++) {
            JsysNFeReferencias R = listNotasReferenciadas.get(jTableRefs1.convertRowIndexToModel(selected[idx]));
            toRemove.add(R);
            br.sql.acesso.ConnectionFactory.delete(R);
        }
        listNotasReferenciadas.removeAll(toRemove);
    }//GEN-LAST:event_jButtonDeleteRef1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assinar;
    private javax.swing.JButton caregaVenda;
    private com.toedter.calendar.JDateChooser dataFinalDateChooser;
    private com.toedter.calendar.JDateChooser dataInicialDateChooser;
    private javax.swing.JButton email;
    private javax.swing.JButton imprimir;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButtonAddVol;
    private javax.swing.JButton jButtonDeleteRef1;
    private javax.swing.JButton jButtonEditarRef1;
    private javax.swing.JButton jButtonIncluirRef1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelIdJsysNfe;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanelItens;
    private javax.swing.JPanel jPanelLista;
    private javax.swing.JPanel jPanelNfe;
    private javax.swing.JPanel jPanelRef1;
    private javax.swing.JPanel jPanelRef2;
    private javax.swing.JPanel jPanelRef3;
    private javax.swing.JPanel jPanelVolumes;
    private javax.swing.JProgressBar jProgressBarEmail;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPaneGeral;
    private javax.swing.JTabbedPane jTabbedPaneNota;
    private javax.swing.JTabbedPane jTabbedPaneRefs;
    private javax.swing.JTable jTableItens;
    private javax.swing.JTable jTableNfe;
    private javax.swing.JTable jTableRefs1;
    private javax.swing.JTable jTableRefs2;
    private javax.swing.JTable jTableRefs3;
    private javax.swing.JTable jTableVol;
    private javax.swing.JTextField jTextFieldCodigoNumerico;
    private javax.swing.JTextField jTextFieldDV;
    private javax.swing.JTextField jTextFieldData;
    private javax.swing.JTextField jTextFieldDetalhesVenda;
    private javax.swing.JTextField jTextFieldEsp;
    private javax.swing.JTextField jTextFieldFiltro;
    private javax.swing.JTextField jTextFieldMarca;
    private javax.swing.JTextField jTextFieldModelo;
    private javax.swing.JTextField jTextFieldNVol;
    private javax.swing.JTextField jTextFieldNaturazaOperacao;
    private javax.swing.JTextField jTextFieldPesoB;
    private javax.swing.JTextField jTextFieldPesoL;
    private javax.swing.JTextField jTextFieldQVol;
    private javax.swing.JTextField jTextFieldSerie;
    private javax.swing.JTextField jTextFieldValorIcms;
    private javax.swing.JTextField jTextFieldValorIcmsSt;
    private javax.swing.JTextField jTextFieldVenda;
    private javax.swing.JTextField jTextFieldinfCpl;
    private javax.swing.JTextField jTextFieldnumeroNFe;
    private javax.swing.JTextField jTextFieldvalorNfe;
    private java.util.List<JsysOrcamentoItens> listItens;
    private java.util.List<JsysNFeReferencias> listNotasReferenciadas;
    private java.util.List<JsysNFeVolumes> listVol;
    private javax.persistence.Query queryItens;
    private javax.persistence.Query queryNotasReferenciadas;
    private javax.persistence.Query queryVol;
    private br.sql.bean.JsysNFe registroAtual;
    private javax.swing.JTextArea taskOutput;
    private javax.swing.JButton transmitir;
    private componentes.UJComboBox uJComboBoxFinalidade;
    private componentes.UJComboBox uJComboBoxFormaPagamento;
    private componentes.UJComboBox uJComboBoxIdDest;
    private componentes.UJComboBox uJComboBoxIndFinal;
    private componentes.UJComboBox uJComboBoxIndPres;
    private componentes.UJComboBox uJComboBoxModFrete;
    private componentes.UJComboBox uJComboBoxTpEmis;
    private componentes.UJComboBox uJComboBoxTpImp;
    private componentes.UJComboBox uJComboBoxTransportadora;
    private javax.swing.JButton validar;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private int returnStatus = RET_CANCEL;

    private void actionConsulta() {
        try {
            String campos[] = {"jsysNFe.nfe_id",
                "jsysNFe.venda",
                "cast(jsysNFe.nNF AS INT)",
                "cast(jsysNFe.serie AS INT)",
                "jsysClientes.nomeCorentista",
                "jsysOrcamento.valorLiquido",
                "jsysNFe.emitida",
                "jsysNFe.cancelada",
                "jsysNFe.dhEmi",
                "jsysNFe.chaveAcesso"};
            String order[] = {"4", "3"};
            ManagerSQL sql = new ManagerSQL();
            sql.setWith("WITH XMLNAMESPACES (DEFAULT 'http://www.portalfiscal.inf.br/nfe')");
            sql.setTabela("jsysNFe "
                    + "LEFT JOIN jsysOrcamento ON jsysOrcamento.idOrcamento = jsysNFe.venda "
                    + "LEFT JOIN jsysClientes ON dbo.formataCnpjCpf(jsysClientes.cnpjCpf, 0) = "
                    + "Coalesce(jsysnfe.enviNFe.value('(/enviNFe/NFe/infNFe/dest/idEstrangeiro)[1]', 'varchar(20)') "
                    + ",jsysnfe.enviNFe.value('(/enviNFe/NFe/infNFe/dest/CPF)[1]', 'varchar(11)') "
                    + ",jsysnfe.enviNFe.value('(/enviNFe/NFe/infNFe/dest/CNPJ)[1]', 'varchar(14)'))");
            sql.setCampos(campos);
            java.util.Map<Object, Object> filtro = new HashMap<>();
            filtro.put("jsysNFe.mod", "= 55");
            filtro.put("chaveAcesso", "<> ''");
            filtro.put("dbo.setTimeNull(dhEmi)", new Date[]{dataInicialDateChooser.getDate(), dataFinalDateChooser.getDate()});
            sql.setOnde(filtro);
            sql.setOrder(order);
            ResultSet x = DADOS.execSQL(sql.getSQL(jTextFieldFiltro.getText()));
            // Definição do TableModel
            String camp[] = {"Id",
                "Venda",
                "Numero NF-e",
                "Serie",
                "Cliente",
                "Valor Liquido",
                "Emitida",
                "Cancelada",
                "Data",
                "Chave Acesso"
            };
            DefaultTableModel aModel = new DefaultTableModel(new Object[][]{}, camp) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };
            ResultSetMetaData rsmd = x.getMetaData();
            int colNo = rsmd.getColumnCount();
            while (x.next()) {
                Object[] objects = new Object[colNo];
                for (int i = 0; i < colNo; i++) {
                    objects[i] = x.getObject(i + 1);
                }
                aModel.addRow(objects);
            }
            jTableNfe.setModel(aModel);
            jTableNfe.getColumnModel().getColumn(0).setPreferredWidth(60);
            jTableNfe.getColumnModel().getColumn(1).setPreferredWidth(57);
            jTableNfe.getColumnModel().getColumn(2).setPreferredWidth(81);
            jTableNfe.getColumnModel().getColumn(3).setPreferredWidth(40);
            jTableNfe.getColumnModel().getColumn(4).setPreferredWidth(262);
            jTableNfe.getColumnModel().getColumn(5).setPreferredWidth(79);
            jTableNfe.getColumnModel().getColumn(6).setPreferredWidth(48);
            jTableNfe.getColumnModel().getColumn(7).setPreferredWidth(66);
            jTableNfe.getColumnModel().getColumn(8).setPreferredWidth(66);
            jTableNfe.getColumnModel().getColumn(9).setPreferredWidth(290);
            jTableNfe.setDefaultRenderer(Object.class, new ZebradoLocation());
        } catch (SQLException e) {
            Log.registraErro(this.getClass().getName(), "actionConsulta", e);
        }
    }

    private void setValoresIniciais() {
        jTextFieldDetalhesVenda.setText("");
        jLabelIdJsysNfe.setText("");
        jTextFieldVenda.setText("");
        jRadioButton2.setSelected(true);
        jRadioButton1.setSelected(false);
        uJComboBoxFormaPagamento.setSelectedIndex(0);
        uJComboBoxFinalidade.setSelectedIndex(0);
        uJComboBoxTpImp.setSelectedIndex(1);
        uJComboBoxIdDest.setSelectedIndex(0);
        uJComboBoxIndPres.setSelectedIndex(1);
        uJComboBoxTpEmis.setSelectedIndex(0);
        uJComboBoxIndFinal.setSelectedIndex(0);
        jTextFieldvalorNfe.setText("");
        jTextFieldValorIcms.setText("");
        jTextFieldValorIcmsSt.setText("");
        jTextFieldModelo.setText("55");
        jTextFieldSerie.setText(par.getnNFeserie());
        jTextFieldnumeroNFe.setText("0");
        jTextFieldData.setText(ManagerData.convertDate(ManagerData.getDate(), "yyyy-MM-dd'T'HH:mm:ssXXX"));
        jTextFieldCodigoNumerico.setText("");
        jTextFieldDV.setText("");
        jTextFieldNaturazaOperacao.setText("Venda");
        uJComboBoxModFrete.setSelectedIndex(3);
        jTextFieldinfCpl.setText(par.getInfCpl());
    }

    private JsysNFe getJsysNFe() {
        Map<Object, Object> filtro = new HashMap<>();
        filtro.put("venda", Integer.parseInt(jTextFieldVenda.getText()));
        JsysNFe nfe = (JsysNFe) Retorna.findOneResult("JsysNFe.findNFeByVendaEmitida", filtro);
        if (nfe != null && nfe.getMod() == ConstantesFiscal.NF_E) {
            if (nfe.getEmitida()) {
                JOptionPane.showMessageDialog(this, "NF-e já emitida com Número " + nfe.getNNF(), "Erro", JOptionPane.ERROR_MESSAGE);
                taskOutput.append(String.format("NF-e já emitida com Número " + nfe.getNNF() + System.getProperty("line.separator")));
                return null;
            } else {
                return nfe;
            }
        } else if (nfe != null && nfe.getMod() == ConstantesFiscal.NFC_E) {
            JOptionPane.showMessageDialog(this, "NF-e já emitida em Modelo do Documento Fiscal 65", "Erro", JOptionPane.ERROR_MESSAGE);
            taskOutput.append(String.format("NF-e já emitida em Modelo do Documento Fiscal 65" + System.getProperty("line.separator")));
            return null;
        } else if (nfe == null) {
            return new JsysNFe();
        }
        return null;
    }

    private void setRegistroAtual() {
        if (registroAtual == null) {
            registroAtual = getJsysNFe();
        }
        if (registroAtual != null
                //&& registroAtual.getNfeId() == null
                && venda != null) {
            if (par.getUf().equals(venda.getIdCliente().getEstado())) {
                uJComboBoxIdDest.setSelectedIndex(0);
            } else if (venda.getIdCliente().getEstado().equals("EX")) {
                uJComboBoxIdDest.setSelectedIndex(2);
            } else {
                uJComboBoxIdDest.setSelectedIndex(1);
            }
            if (Validar.isNotNull(uJComboBoxFormaPagamento.getSelectedObject().toString(),
                    uJComboBoxFinalidade.getSelectedObject(),
                    uJComboBoxIdDest.getSelectedObject(),
                    uJComboBoxIndFinal.getSelectedObject(),
                    uJComboBoxIndPres.getSelectedObject(),
                    uJComboBoxTpEmis.getSelectedObject(),
                    uJComboBoxTpImp.getSelectedObject(),
                    uJComboBoxTransportadora.getSelectedObject(),
                    uJComboBoxModFrete.getSelectedObject())) {
                registroAtual.setVenda(venda.getIdOrcamento());
                registroAtual.setMod(ConstantesFiscal.NF_E);
                registroAtual.setSerie(par.getnNFeserie());
                registroAtual.setTpNF(jRadioButton2.isSelected());
                //registroAtual.setCDV("0");
                //registroAtual.setCNF(jTextFieldCodigoNumerico.getText());
                registroAtual.setCMunFG(String.valueOf(par.getCodMunicipio()));
                registroAtual.setCUF(String.valueOf(par.getCodMunicipio()).substring(0, 2));
                //registroAtual.setDhEmi(null);
                //registroAtual.setDhSaiEnt(null);
                registroAtual.setEmitida(false);
                registroAtual.setCancelada(false);
                registroAtual.setFinNFe(uJComboBoxFinalidade.getSelectedObject().toString().substring(0, 1));
                registroAtual.setIdDest(uJComboBoxIdDest.getSelectedObject().toString().substring(0, 1));
                registroAtual.setIndFinal(uJComboBoxIndFinal.getSelectedObject().toString().substring(0, 1));
                registroAtual.setIndPag(uJComboBoxFormaPagamento.getSelectedObject().toString().substring(0, 1));
                registroAtual.setIndPres(uJComboBoxIndPres.getSelectedObject().toString().substring(0, 1));
                registroAtual.setIndSinc(true);
                registroAtual.setNatOp(jTextFieldNaturazaOperacao.getText());
                registroAtual.setTpAmb(ConstantesFiscal.AMBIENTE.TP_AMB);
                registroAtual.setTpEmis(uJComboBoxTpEmis.getSelectedObject().toString().substring(0, 1));
                registroAtual.setTpImp(uJComboBoxTpImp.getSelectedObject().toString().substring(0, 1));
                registroAtual.setInfCpl(jTextFieldinfCpl.getText());
                String modFrete = ManagerString.Left(uJComboBoxModFrete.getSelectedObject().toString(), 1);
                registroAtual.setModFrete(modFrete);
                registroAtual.setIdTrasportadora(
                        "9".equals(modFrete) ? null : ((JsysNFeTransportadoras) uJComboBoxTransportadora.getSelectedObject()).getId());
                registroAtual = registroAtual.getNfeId() == null ? (JsysNFe) br.sql.acesso.ConnectionFactory.insert(registroAtual)
                        : (JsysNFe) br.sql.acesso.ConnectionFactory.update(registroAtual);
            } else {
                JOptionPane.showMessageDialog(this, "Verificar Campos!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void setDisabled() {
        jRadioButton1.setEnabled(false);
        jRadioButton2.setEnabled(false);
        uJComboBoxFormaPagamento.setEnabled(false);
        uJComboBoxFinalidade.setEnabled(false);
        uJComboBoxTpImp.setEnabled(false);
        uJComboBoxIdDest.setEnabled(false);
        uJComboBoxIndPres.setEnabled(false);
        jTextFieldNaturazaOperacao.setEnabled(false);
        uJComboBoxTpEmis.setEnabled(false);
        uJComboBoxIndFinal.setEnabled(false);
        jTextFieldVenda.setEnabled(false);
        caregaVenda.setEnabled(false);
        assinar.setEnabled(false);
        validar.setEnabled(false);
        transmitir.setEnabled(false);
        imprimir.setEnabled(false);
        email.setEnabled(false);
        uJComboBoxModFrete.setEnabled(false);
        uJComboBoxTransportadora.setEnabled(false);
        jTextFieldinfCpl.setEnabled(false);

        jTableItens.setEnabled(false);
        jTextFieldQVol.setEnabled(false);
        jTextFieldEsp.setEnabled(false);
        jTextFieldMarca.setEnabled(false);
        jTextFieldNVol.setEnabled(false);
        jTextFieldPesoL.setEnabled(false);
        jTextFieldPesoB.setEnabled(false);
        jButtonAddVol.setEnabled(false);
        jTableVol.setEnabled(false);
        jButtonIncluirRef1.setEnabled(false);
        jButtonEditarRef1.setEnabled(false);
        jButtonDeleteRef1.setEnabled(false);
        jTableRefs1.setEnabled(false);
        jTableRefs2.setEnabled(false);
        jTableRefs3.setEnabled(false);
    }

    private void setEnabled() {
        if ((registroAtual != null && !registroAtual.getEmitida())
                | registroAtual == null) {
            jRadioButton1.setEnabled(true);
            jRadioButton2.setEnabled(true);
            uJComboBoxFormaPagamento.setEnabled(true);
            uJComboBoxFinalidade.setEnabled(true);
            uJComboBoxTpImp.setEnabled(true);
            uJComboBoxIdDest.setEnabled(true);
            uJComboBoxIndPres.setEnabled(true);
            jTextFieldNaturazaOperacao.setEnabled(true);
            uJComboBoxTpEmis.setEnabled(true);
            uJComboBoxIndFinal.setEnabled(true);
            jTextFieldVenda.setEnabled(true);
            uJComboBoxModFrete.setEnabled(true);
            jTextFieldinfCpl.setEnabled(true);
            setEnableCompTrasportadora();
            jTableItens.setEnabled(true);
            jButtonIncluirRef1.setEnabled(true);
            jButtonEditarRef1.setEnabled(true);
            jButtonDeleteRef1.setEnabled(true);
            jTableRefs1.setEnabled(true);
            jTableRefs2.setEnabled(true);
            jTableRefs3.setEnabled(true);
        } else if (registroAtual != null && registroAtual.getEmitida()) {
            setDisabled();
            imprimir.setEnabled(true);
            email.setEnabled(true);
        }
    }

    private void caregarDados() {
        if (registroAtual != null) {
            jLabelIdJsysNfe.setText(registroAtual.getNfeId().toString());
            jTextFieldnumeroNFe.setText(registroAtual.getNNF());
            jTextFieldVenda.setText(String.valueOf(registroAtual.getVenda()));
            jTextFieldModelo.setText(String.valueOf(registroAtual.getMod()));
            jTextFieldSerie.setText(registroAtual.getSerie());
            jTextFieldData.setText(ManagerData.convertDate(registroAtual.getDhEmi(), "yyyy-MM-dd'T'HH:mm:ssXXX"));
            jRadioButton2.setSelected(registroAtual.getTpNF());
            jRadioButton1.setSelected(!registroAtual.getTpNF());
            jTextFieldDV.setText(registroAtual.getCDV());
            jTextFieldCodigoNumerico.setText(registroAtual.getCNF());
            uJComboBoxFormaPagamento.setSelectedIndex(Integer.parseInt(registroAtual.getIndPag()));
            uJComboBoxFinalidade.setSelectedIndex(Integer.parseInt(registroAtual.getFinNFe()) - 1);
            uJComboBoxTpImp.setSelectedIndex(Integer.parseInt(registroAtual.getTpImp()));
            uJComboBoxIdDest.setSelectedIndex(Integer.parseInt(registroAtual.getIdDest()) - 1);
            uJComboBoxIndPres.setSelectedIndex(Integer.parseInt(registroAtual.getIndPres()));
            jTextFieldNaturazaOperacao.setText(registroAtual.getNatOp());
            uJComboBoxTpEmis.setSelectedIndex(Integer.parseInt(registroAtual.getTpEmis()) - 1);
            uJComboBoxIndFinal.setSelectedIndex(Integer.parseInt(registroAtual.getIndFinal()));
            jTextFieldinfCpl.setText(registroAtual.getInfCpl());
            Double valorNfe = 0.0;
            Double valorIcms = 0.0;
            Double valorIcmsSt = 0.0;
            if (xmlNfe != null) {
                valorNfe = new Double(xmlNfe.getnFe().getInfNFe().getTotal().getICMSTot().getVNF());
                valorIcms = new Double(xmlNfe.getnFe().getInfNFe().getTotal().getICMSTot().getVICMS());
                valorIcmsSt = new Double(xmlNfe.getnFe().getInfNFe().getTotal().getICMSTot().getVST());
            } else {
                StringBuilder sql = new StringBuilder();
                sql.append("WITH XMLNAMESPACES ( DEFAULT 'http://www.portalfiscal.inf.br/nfe') ");
                sql.append("SELECT enviNFe.value('(/enviNFe/NFe/infNFe/total/ICMSTot/vNF)[1]', 'Decimal(22,2)') as vNF ");
                sql.append(",enviNFe.value('(/enviNFe/NFe/infNFe/total/ICMSTot/vICMS)[1]', 'Decimal(22,2)') as vICMS ");
                sql.append(",enviNFe.value('(/enviNFe/NFe/infNFe/total/ICMSTot/vST)[1]', 'Decimal(22,2)') as vST ");
                sql.append("FROM jsysNFe ");
                sql.append("WHERE nfe_id = ").append(registroAtual.getNfeId());
                try {
                    ResultSet rs = DADOS.execSQL(sql);
                    while (rs.next()) {
                        valorNfe = rs.getDouble("vNF");
                        valorIcms = rs.getDouble("vICMS");
                        valorIcmsSt = rs.getDouble("vST");
                    }
                } catch (SQLException e) {
                    Log.registraErro(this.getClass().getName(), "caregarDados", e);
                }
            }
            jTextFieldvalorNfe.setText(ManagerDecimal.converter(valorNfe, "R$ #,##0.00"));
            jTextFieldValorIcms.setText(ManagerDecimal.converter(valorIcms, "R$ #,##0.00"));
            jTextFieldValorIcmsSt.setText(ManagerDecimal.converter(valorIcmsSt, "R$ #,##0.00"));
            loadVolumes(registroAtual.getNfeId());
            loadItens(registroAtual.getVenda());
            loadReferencia(registroAtual.getNfeId());
        }
    }

    private void novaNfe() {
        jTableNfe.clearSelection();
        setValoresIniciais();
        registroAtual = null;
        jTabbedPaneGeral.setSelectedComponent(jTabbedPaneNota);
        jTabbedPaneNota.setSelectedComponent(jPanelNfe);
        setEnabled();
        jTextFieldVenda.requestFocus();
    }

    private void consultaVenda() {
        try {
            setVenda();
            if (venda != null) {
                StringBuilder str = new StringBuilder();
                str.append("Cliente: ").append(venda.getIdCliente().getNomeCorentista()).append("; ");
                str.append("Data: ").append(ManagerData.convertBrDate(venda.getData())).append("; ");
                str.append("Valor: ").append(venda.getValorLiquido().setScale(2)).append("; ");
                str.append("Vendedor: ").append(venda.getIdFuncionario().getNomeCorentista()).append(".");
                jTextFieldDetalhesVenda.setText(str.toString());
                caregaVenda.setEnabled(true);
            } else {
                jTextFieldDetalhesVenda.setText("Venda não encontrada");
                caregaVenda.setEnabled(false);
            }
        } catch (Exception e) {
            Log.registraErro(this.getClass().getName(), "consultaVenda", e);
        }
    }

    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    /**
     * @return the return status of this dialog - one of RET_OK or RET_CANCEL
     */
    public int getReturnStatus() {
        return returnStatus;
    }

    private boolean validarVenda() {
        return venda != null
                && Validar.isNotNullOrWhite(venda.getIdCliente().getNomeCorentista(),
                        venda.getIdCliente().getEndereco(),
                        venda.getIdCliente().getBairro(),
                        venda.getIdCliente().getCidade(),
                        venda.getIdCliente().getCodMunicipio(),
                        venda.getIdCliente().getEstado(),
                        venda.getIdCliente().getNumero(),
                        venda.getIdCliente().getCnpjCpf());
    }

    private void setVenda() {
        Map<Object, Object> filtro = new HashMap<>();
        filtro.put("idOrcamento", Integer.parseInt(jTextFieldVenda.getText().trim()));
        venda = (JsysOrcamento) Retorna.findOneResult("JsysOrcamento.findByFechado", filtro);
        itens = null;
        listItens.clear();
        listVol.clear();
        listNotasReferenciadas.clear();
    }

    //private TaskEmail taskEmail;
    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        if ("progress".equals(evt.getPropertyName())) {
            jProgressBarEmail.setValue((Integer) evt.getNewValue());
            jProgressBarEmail.setString(evt.getNewValue().toString() + "%");
        }
    }

    private void insertVol() {
        setRegistroAtual();
        JsysNFeVolumes volume = new JsysNFeVolumes();
        volume.setNfeId(registroAtual);
        volume.setQVol(Long.parseLong(jTextFieldQVol.getText()));
        volume.setEsp(jTextFieldEsp.getText());
        volume.setMarca(jTextFieldMarca.getText());
        volume.setNVol(jTextFieldNVol.getText());
        volume.setPesoL(ManagerDecimal.StringToBigDecimal(jTextFieldPesoL.getText()));
        volume.setPesoB(ManagerDecimal.StringToBigDecimal(jTextFieldPesoB.getText()));
        if (br.sql.acesso.ConnectionFactory.insert(volume) instanceof JsysNFeVolumes) {
            jTextFieldQVol.setText("");
            jTextFieldEsp.setText("");
            jTextFieldMarca.setText("");
            jTextFieldNVol.setText("");
            jTextFieldPesoL.setText("");
            jTextFieldPesoB.setText("");
            loadVolumes(volume.getNfeId().getNfeId());
            jTextFieldQVol.requestFocus();
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao Cadastras os Volumes!", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void loadVolumes(Long nfeId) {
        listVol.clear();
        if (nfeId != null) {
            Map<Object, Object> filtro = new HashMap<>();
            filtro.put("nfeId", nfeId);
            JsysNFe jsysNFe = (JsysNFe) Retorna.findOneResult("JsysNFe.findByNfeId", filtro);
            listVol.addAll(jsysNFe.getJsysNFeVolumesCollection());
        }
    }

    @SuppressWarnings("unchecked")
    private void loadItens(int orcamento) {
        listItens.clear();
        if (orcamento > 0) {
            Map<Object, Object> filtro = new HashMap<>();
            filtro.put("idOrcamento", orcamento);
            itens = Retorna.findCollection("JsysOrcamentoItens.findByIdOrcamento", filtro);
            for (JsysOrcamentoItens iten : itens) {
                if (Validar.isNullOrWhite(iten.getCfop())) {
                    iten.setCfop(iten.getJsysOrcamento().getIdCliente().getEstado().equals(par.getUf())
                            ? par.getCfop()
                            : par.getCfopInterestadual());
                    br.sql.acesso.ConnectionFactory.update(iten);
                }
                listItens.add(iten);
            }
        }
    }

    private void loadReferencia(Long nfeId) {
        listNotasReferenciadas.clear();
        if (nfeId != null) {
            Map<Object, Object> filtro = new HashMap<>();
            filtro.put("nfeId", nfeId);
            JsysNFe jsysNFe = (JsysNFe) Retorna.findOneResult("JsysNFe.findByNfeId", filtro);
            for (JsysNFeReferencias r : jsysNFe.getJsysNFeReferenciasCollection()) {
                if (r.getNFeRef() || r.getCTeRef() || r.getNfRef()) {
                    listNotasReferenciadas.add(r);
                }
            }
        }
    }

    private class TaskEmail extends SwingWorker<Void, String> {

        @Override
        protected Void doInBackground() throws Exception {
            setProgress(0);
            publish("Iniciando processo");
            if (Validar.isNotNullOrWhite(venda.getIdCliente().getEmail())) {
                try {
                    StringBuilder html = new StringBuilder();
                    html.append("<html><head><title>NF-e ").append(par.getFantasia()).append("</title></head><body>");
                    html.append("<div>Segue em anexo o arquivo XML e PDF da NF-e.</div>");
                    html.append("<br><br><br><div>___________________________________________</div>");
                    html.append("<div><H2><b><u>")
                            .append(par.getFantasia())
                            .append("</u></b></H2></div>");
                    html.append("<div>Endereço: ")
                            .append(par.getEndereco())
                            .append("</div>");
                    html.append("<div>Fone: ")
                            .append(par.getFone())
                            .append("</div></body></html>");
                    setProgress(25);
                    publish("Montanto E-mail");
                    GravaNoArquivo gravador = new GravaNoArquivo();
                    List<File> files = new ArrayList<>();
                    Map<Object, Object> filtro = new HashMap<>();
                    filtro.put("chaveAcesso", registroAtual.getChaveAcesso());
                    JsysNFe nfe = (JsysNFe) Retorna.findOneResult("JsysNFe.findByChaveAcesso", filtro);
                    if (nfe != null) {
                        files.add(gravador.salvarArquivo(XmlUtil.criaNfeProc(nfe.getEnviNFe(), nfe.getRetConsReciNFe()),
                                br.JavaApplicationJsys.PASTA_XML_PROC_NFE,
                                nfe.getChaveAcesso(),
                                "xml"));
                        files.add(gravador.salvarArquivo(ImprimirDanfe.nfePdf(nfe.getChaveAcesso()),
                                br.JavaApplicationJsys.PASTA_XML_PROC_NFE,
                                nfe.getChaveAcesso(),
                                "pdf"));
                        List<String> localFiles = new ArrayList<>();
                        files.stream().forEach((file) -> {
                            localFiles.add(file.toString());
                        });
                        setProgress(50);
                        publish("Enviando E-mail");
                        Mail correio = new Mail();
                        correio.setDestinatario(venda.getIdCliente().getNomeCorentista().toUpperCase(), venda.getIdCliente().getEmail().toLowerCase());
                        correio.senderMail("NF-e - " + par.getFantasia(), html.toString(), localFiles);
                        setProgress(100);
                        publish("E-mail Enviado");
                    } else {
                        setProgress(100);
                        publish("NF-e não Encontrada");
                        publish("E-mail não enviado");
                    }
                } catch (UnsupportedEncodingException | MessagingException e) {
                    setProgress(100);
                    publish("Erro ao Enviar E-mail");
                    Log.registraErro(this.getClass().getName(), "envioEmail", e);
                }
            }
            return null;
        }

        @Override
        protected void process(List<String> chunks) {
            super.process(chunks);
            chunks.stream().forEach((s) -> {
                taskOutput.append(String.format(s + System.getProperty("line.separator")));
            });
        }

        @Override
        protected void done() {
            super.done();
            Toolkit.getDefaultToolkit().beep();
            email.setEnabled(true);
            setCursor(null);
        }
    }

    private void setEnableCompTrasportadora() {
        if (uJComboBoxModFrete.getSelectedObject() != null) {
            String modFrete = ManagerString.Left(uJComboBoxModFrete.getSelectedObject().toString(), 1);
            boolean set = !"9".equals(modFrete);
            uJComboBoxTransportadora.setEnabled(set);
            jTextFieldQVol.setEnabled(set);
            jTextFieldEsp.setEnabled(set);
            jTextFieldMarca.setEnabled(set);
            jTextFieldNVol.setEnabled(set);
            jTextFieldPesoL.setEnabled(set);
            jTextFieldPesoB.setEnabled(set);
            jButtonAddVol.setEnabled(set);
            jTableVol.setEnabled(set);
            if (!set) {
                uJComboBoxTransportadora.setSelectedIndex(0);
            }
        }
    }

    private class TaskTransmitir extends SwingWorker<Void, String> {

        @Override
        protected Void doInBackground() throws Exception {
            setProgress(0);
            //NFeTransmitir transm = new NFeTransmitir();
            publish(xmlNfe.getMensagem());
            setProgress(50);
            //String tpAmb = Constantes.INI.getString("FISCAL", "TP_AMB").substring(0, 1);
            if (xmlNfe.enviarNfe(ConstantesUtil.NFE)) {
                setProgress(60);
                transmitir.setEnabled(false);
                imprimir.setEnabled(true);
                email.setEnabled(true);
                publish(xmlNfe.getMensagem());
                setProgress(70);

                email.setEnabled(false);
                //setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                //Instances of javax.swing.SwingWorker are not reusuable, so
                //we create new instances as needed.
                TaskEmail taskEmail = new TaskEmail();
                setProgress(80);
                taskEmail.execute();
                setProgress(100);
            } else {
                setProgress(100);
                transmitir.setEnabled(true);
                publish(xmlNfe.getMensagem());
            }
            return null;
        }

        @Override
        protected void process(List<String> chunks) {
            super.process(chunks);
            chunks.stream().forEach((s) -> {
                taskOutput.append(String.format(s + System.getProperty("line.separator")));
            });
        }

        @Override
        protected void done() {
            super.done();
            Toolkit.getDefaultToolkit().beep();
            setCursor(null);
        }
    }

    private void changedTabbed() {
        int[] selected = jTableNfe.getSelectedRows();
        for (int i = 0; i < selected.length; i++) {
            java.util.Map<Object, Object> filtro = new HashMap<>();
            filtro.put("nfeId", jTableNfe.getValueAt(jTableNfe.convertRowIndexToModel(selected[i]), 0));
            JsysNFe nf = (JsysNFe) Retorna.findOneResult("JsysNFe.findByNfeId", filtro);
            registroAtual = nf;
            caregarDados();
            setVenda();
            setEnabled();
            jTextFieldVenda.requestFocus();
        }
    }

    private void editar() {
        int[] selectd = jTableNfe.getSelectedRows();
        for (int i = 0; i < selectd.length; i++) {
            jTabbedPaneGeral.setSelectedComponent(jTabbedPaneNota);
            jTabbedPaneNota.setSelectedComponent(jPanelNfe);
            changedTabbed();
        }
    }
}
