package br.sql.nfe.Janelas;

import br.sql.acesso.SQLDatabaseConnection;
import br.sql.nfe.links.ConstantesFiscal;
import br.sql.nfe.transmisor.InutilizacaoNFeTransmitir;
import br.sql.nfe.xml.AssinarXMLsCertfificadoA1;
import br.sql.nfe.xml.GerandoNFeInutilizacaoJAXB;
import br.sql.nfe.xml.ValidacaoNFeXML;
import java.awt.EventQueue;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Juliano Alves Medina
 */
public class NfeInutilizacaoJanela extends javax.swing.JPanel {

    private final String serie;
    private static final JFrame frame = new JFrame();
    private static final SQLDatabaseConnection DADOS = new SQLDatabaseConnection();
    //private final JsysParametros par = Retorna.JsysParametros();

    /**
     * Creates new form nfeInutilizacaoJanela
     */
    public NfeInutilizacaoJanela() {
        serie = br.JavaApplicationJsys.INI.getString("FISCAL", "SERIE");

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        inutilizacaojTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        xJustificativajTextArea = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("NF-e Inutilização");
        jLabel1.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        inutilizacaojTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Inicio", "Fim", "mod", "Serie"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        inutilizacaojTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        inutilizacaojTable.getTableHeader().setResizingAllowed(false);
        inutilizacaojTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(inutilizacaojTable);

        jButton1.setText("Lista NF-e");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Inutilizar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Intervalo NF-e");

        jButton3.setText("Lista NFC-e");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        xJustificativajTextArea.setColumns(20);
        xJustificativajTextArea.setDocument(new br.sql.plainDocument.JTextFieldTamanhoMaxDocument(255)
        );
        xJustificativajTextArea.setRows(5);
        jScrollPane2.setViewportView(xJustificativajTextArea);

        jButton4.setText("Fechar");
        jButton4.setToolTipText("");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel3.setText("Justificativa");
        jLabel3.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButton4)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        listaIntervaloNfe(ConstantesFiscal.NF_E);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (validar()) {
            for (int i : inutilizacaojTable.getSelectedRows()) {
                String NNFIni = String.valueOf(inutilizacaojTable.getValueAt(i, 0));
                String NNFFin = String.valueOf(inutilizacaojTable.getValueAt(i, 1));
                String mod = String.valueOf(inutilizacaojTable.getValueAt(i, 2));
                String ser = String.valueOf(inutilizacaojTable.getValueAt(i, 3));
                String xJust = xJustificativajTextArea.getText().trim();
                GerandoNFeInutilizacaoJAXB inut
                        = new GerandoNFeInutilizacaoJAXB(mod, ser, NNFIni, NNFFin, xJust);
                if (inut.gerar()) {
                    AssinarXMLsCertfificadoA1 assinador = new AssinarXMLsCertfificadoA1();
                    if (assinador.assinar(inut.getIdInut(), "Inutilizacao")) {
                        ValidacaoNFeXML validador = new ValidacaoNFeXML();
                        if (validador.Validar(inut.getIdInut(), "Inutilizacao")) {
                            InutilizacaoNFeTransmitir transmisor = new InutilizacaoNFeTransmitir();
                            if (transmisor.transmitir(inut.getIdInut(), ConstantesFiscal.AMBIENTE.TP_AMB, Integer.parseInt(mod))) {
                                xJustificativajTextArea.setText("");
                                JOptionPane.showMessageDialog(this, "Operaçao realizada com Sucesso!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                            } else {
                                JOptionPane.showMessageDialog(this, "Erro na execução da Operação!", "Erro", JOptionPane.ERROR_MESSAGE);
                            }
                        } else {
                            br.sql.log.Log.registraErro(this.getClass().getName(), "jButton2ActionPerformed", new Exception(validador.getMensagenErro()));
                        }
                    }
                }
                listaIntervaloNfe(0);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        listaIntervaloNfe(ConstantesFiscal.NFC_E);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        frame.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable inutilizacaojTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea xJustificativajTextArea;
    // End of variables declaration//GEN-END:variables

    public static void main(final String[] args) {
        EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                frame.setContentPane(new NfeInutilizacaoJanela());
                frame.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
                frame.pack();
                frame.setTitle("NF-e Inutilização");
                frame.setLocationRelativeTo(null);
                frame.setVisible(true);
            }
        });
    }

    public void listaIntervaloNfe(int mod) {
        try {
            StringBuilder sql = new StringBuilder();
            sql.append("SELECT inicio, fim, mod, serie FROM intervaloNFeIDs ")
                    .append("WHERE (serie = '").append(serie).append("') and (")
                    .append("mod = '").append(mod).append("')");
            ResultSet x = DADOS.execSQL(sql.toString());
            String[] tableColumnsName = {"Inicio", "Fim", "mod", "Serie"};
            DefaultTableModel aModel = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };
            aModel.setColumnIdentifiers(tableColumnsName);
            java.sql.ResultSetMetaData rsmd = x.getMetaData();
            int colNo = rsmd.getColumnCount();
            while (x.next()) {
                Object[] objects = new Object[colNo];
                for (int i = 0; i < colNo; i++) {
                    objects[i] = x.getObject(i + 1);
                }
                aModel.addRow(objects);
            }
            inutilizacaojTable.setModel(aModel);
            inutilizacaojTable.setDefaultRenderer(Object.class, new br.sql.defaultTableCellRenderer.ZebradoLocation());
        } catch (SQLException e) {
            br.sql.log.Log.registraErro(this.getClass().getName(), "listaIntervaloNfe", e);
        }
    }

    private boolean validar() {
        if (xJustificativajTextArea.getText().trim().length() < 15) {
            JOptionPane.showMessageDialog(this, "Informar a justificativa do pedido de inutilização com no mínimo 15 dígitos.");
            xJustificativajTextArea.requestFocus();
            return false;
        }
        return true;
    }
}
