package br.sql.cadastros.produtos;

import br.sql.acesso.SQLDatabaseConnection;
import br.sql.bean.JsysProdutosTTributacao;
import br.sql.util.ManagerDecimal;
import br.sql.util.Validar;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.RollbackException;
import javax.swing.JPanel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Juliano Alves Medina
 */
public class TributosJanela extends JPanel {

    private static final SQLDatabaseConnection DADOS = new SQLDatabaseConnection();

//                JFrame frame = new JFrame();
//                frame.setContentPane(new TributosJanela(tThis));
//                frame.pack();
//                frame.setTitle("Cadastros de Tributos");
//                frame.setLocationRelativeTo(null);
//                frame.setVisible(true);
    public TributosJanela() {
        initComponents();
        jTabbedPaneTributos.setEnabledAt(0, true);
        jTabbedPaneTributos.setEnabledAt(1, false);
        masterTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (e.getValueIsAdjusting()) {
                    selectRow();
                }
            }
        }
        );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        query = java.beans.Beans.isDesignTime() ? null : br.sql.acesso.ConnectionFactory.getEntityManagerNew().createQuery("SELECT j FROM JsysProdutosTTributacao j");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        saveButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        newButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxRegime = new javax.swing.JComboBox<>();
        jTabbedPaneTributos = new javax.swing.JTabbedPane();
        jPanelNormal = new javax.swing.JPanel();
        jPanelSimples = new javax.swing.JPanel();
        nomeLabel = new javax.swing.JLabel();
        jTextFieldNomeSimples = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxCSOSN = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldDentroSimples = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldForaSimples = new javax.swing.JTextField();
        jPanelICMSSimples = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jComboBoxmodBC = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldpRedBC = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldpICMS = new javax.swing.JTextField();
        jPanelICMSSTSimples = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jComboBoxmodBCST = new javax.swing.JComboBox<>();
        jTextFieldpRedBCST = new javax.swing.JTextField();
        jTextFieldpMVAST = new javax.swing.JTextField();
        jTextFieldpICMSST = new javax.swing.JTextField();
        jTextFieldDecreto = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextFieldCFOP = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();

        FormListener formListener = new FormListener();

        masterTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idTributacao}"));
        columnBinding.setColumnName("Id Tributacao");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nome}"));
        columnBinding.setColumnName("Nome");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cst}"));
        columnBinding.setColumnName("CST");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cson}"));
        columnBinding.setColumnName("CSOSN");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cfop}"));
        columnBinding.setColumnName("CFOP");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterScrollPane.setViewportView(masterTable);

        saveButton.setText("Salvar");
        saveButton.addActionListener(formListener);

        refreshButton.setText("Cancelar");
        refreshButton.addActionListener(formListener);

        newButton.setText("Novo");
        newButton.setToolTipText("");
        newButton.addActionListener(formListener);

        deleteButton.setText("Apagar");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), deleteButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        deleteButton.addActionListener(formListener);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Tributos");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        jLabel2.setText("Regime");
        jLabel2.setToolTipText("");

        jComboBoxRegime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tributação Normal", "Simples Nacional" }));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement!=null}"), jComboBoxRegime, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jComboBoxRegime.addItemListener(formListener);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement!=null}"), jTabbedPaneTributos, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout jPanelNormalLayout = new javax.swing.GroupLayout(jPanelNormal);
        jPanelNormal.setLayout(jPanelNormalLayout);
        jPanelNormalLayout.setHorizontalGroup(
            jPanelNormalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 905, Short.MAX_VALUE)
        );
        jPanelNormalLayout.setVerticalGroup(
            jPanelNormalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 243, Short.MAX_VALUE)
        );

        jTabbedPaneTributos.addTab("Tributação Normal", null, jPanelNormal, "");

        nomeLabel.setText("Nome:");

        jTextFieldNomeSimples.setDocument(new br.sql.plainDocument.JTextFieldTamanhoMaxDocument(100)
        );
        jTextFieldNomeSimples.setToolTipText("");

        jLabel3.setText("Situação Tributaria");
        jLabel3.setToolTipText("");

        jComboBoxCSOSN.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "101 – Tributada pelo Simples Nacional com permissão de crédito", "102 – Tributada pelo Simples Nacional sem permissão de crédito", "103 – Isenção do ICMS no Simples Nacional para faixa de receita bruta", "201 – Tributada pelo Simples Nacional com permissão de crédito e com cobrança do ICMS por substituição tributária", "202 – Tributada pelo Simples Nacional sem permissão de crédito e com cobrança do ICMS por substituição tributária", "203 – Isenção do ICMS no Simples Nacional para faixa de receita bruta e com cobrança do ICMS por substituição tributária", "300 – Imune", "400 – Não tributada pelo Simples Nacional", "500 – ICMS cobrado anteriormente por substituição tributária (substituído) ou por antecipação", "900 – Outros" }));
        jComboBoxCSOSN.addItemListener(formListener);

        jLabel5.setText("Aliquota aplicável de cálculo do crédito:");
        jLabel5.setToolTipText("");

        jTextFieldDentroSimples.setDocument(new br.sql.plainDocument.MoedaDocument(6)
        );
        jTextFieldDentroSimples.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldDentroSimples.setToolTipText("");

        jLabel6.setText("Dentro - ");
        jLabel6.setToolTipText("");

        jLabel7.setText("Fora - ");

        jTextFieldForaSimples.setDocument(new br.sql.plainDocument.MoedaDocument(6));
        jTextFieldForaSimples.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldForaSimples.setToolTipText("");

        jPanelICMSSimples.setBorder(javax.swing.BorderFactory.createTitledBorder("ICMS"));

        jLabel8.setText("Modalid. de determ. da BC ICMS");

        jComboBoxmodBC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Margem Valor Agregado", "Pauta (Valor)", "Preço Tabelado Máx. (Valor)", "Valor da Operação" }));

        jLabel9.setText("% redução da BC ICMS");

        jTextFieldpRedBC.setDocument(new br.sql.plainDocument.MoedaDocument(6)
        );
        jTextFieldpRedBC.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldpRedBC.setToolTipText("");

        jLabel10.setText("Aliquota do ICMS");
        jLabel10.setToolTipText("");

        jTextFieldpICMS.setDocument(new br.sql.plainDocument.MoedaDocument(6));
        jTextFieldpICMS.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout jPanelICMSSimplesLayout = new javax.swing.GroupLayout(jPanelICMSSimples);
        jPanelICMSSimples.setLayout(jPanelICMSSimplesLayout);
        jPanelICMSSimplesLayout.setHorizontalGroup(
            jPanelICMSSimplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelICMSSimplesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelICMSSimplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelICMSSimplesLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxmodBC, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelICMSSimplesLayout.createSequentialGroup()
                        .addGroup(jPanelICMSSimplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelICMSSimplesLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldpICMS, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelICMSSimplesLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldpRedBC, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelICMSSimplesLayout.setVerticalGroup(
            jPanelICMSSimplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelICMSSimplesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelICMSSimplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jComboBoxmodBC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelICMSSimplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextFieldpRedBC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelICMSSimplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextFieldpICMS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelICMSSTSimples.setBorder(javax.swing.BorderFactory.createTitledBorder("ICMS ST"));

        jLabel11.setText("Modalid. de determ. da BC ICMS ST");
        jLabel11.setToolTipText("");

        jLabel12.setText("% redução da BC ICMS ST");
        jLabel12.setToolTipText("");

        jLabel13.setText("% margem de valor adic. ICMS ST");
        jLabel13.setToolTipText("");

        jLabel14.setText("Aliquota do ICMS ST");
        jLabel14.setToolTipText("");

        jComboBoxmodBCST.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Preço Tabelado ou Máximo Sugerido", "Lista Negativa (Valor)", "Lista Positiva (Valor)", "Lista Neutra (Valor)", "Margem Valor Agregado (%)", "Pauta (Valor)" }));

        jTextFieldpRedBCST.setDocument(new br.sql.plainDocument.MoedaDocument(6));
        jTextFieldpRedBCST.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jTextFieldpMVAST.setDocument(new br.sql.plainDocument.MoedaDocument(6));
        jTextFieldpMVAST.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jTextFieldpICMSST.setDocument(new br.sql.plainDocument.MoedaDocument(6));
        jTextFieldpICMSST.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout jPanelICMSSTSimplesLayout = new javax.swing.GroupLayout(jPanelICMSSTSimples);
        jPanelICMSSTSimples.setLayout(jPanelICMSSTSimplesLayout);
        jPanelICMSSTSimplesLayout.setHorizontalGroup(
            jPanelICMSSTSimplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelICMSSTSimplesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelICMSSTSimplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelICMSSTSimplesLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxmodBCST, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelICMSSTSimplesLayout.createSequentialGroup()
                        .addGroup(jPanelICMSSTSimplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelICMSSTSimplesLayout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldpRedBCST, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelICMSSTSimplesLayout.createSequentialGroup()
                                .addGroup(jPanelICMSSTSimplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelICMSSTSimplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldpICMSST, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                    .addComponent(jTextFieldpMVAST, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelICMSSTSimplesLayout.setVerticalGroup(
            jPanelICMSSTSimplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelICMSSTSimplesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelICMSSTSimplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jComboBoxmodBCST, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelICMSSTSimplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTextFieldpRedBCST, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelICMSSTSimplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTextFieldpMVAST, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelICMSSTSimplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jTextFieldpICMSST, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTextFieldDecreto.setDocument(new br.sql.plainDocument.JTextFieldTamanhoMaxDocument(1000)
        );
        jTextFieldDecreto.setToolTipText("");

        jLabel15.setText("Decreto");

        jTextFieldCFOP.setDocument(new br.sql.plainDocument.IntegerDocument(4)
        );

        jLabel16.setText("CFOP");
        jLabel16.setToolTipText("");

        javax.swing.GroupLayout jPanelSimplesLayout = new javax.swing.GroupLayout(jPanelSimples);
        jPanelSimples.setLayout(jPanelSimplesLayout);
        jPanelSimplesLayout.setHorizontalGroup(
            jPanelSimplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSimplesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSimplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSimplesLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxCSOSN, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelSimplesLayout.createSequentialGroup()
                        .addComponent(jPanelICMSSimples, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelICMSSTSimples, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelSimplesLayout.createSequentialGroup()
                        .addGroup(jPanelSimplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelSimplesLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldDentroSimples, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldForaSimples, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelSimplesLayout.createSequentialGroup()
                                .addComponent(nomeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldNomeSimples, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldCFOP, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel15)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldDecreto, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelSimplesLayout.setVerticalGroup(
            jPanelSimplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSimplesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSimplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBoxCSOSN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelSimplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomeLabel)
                    .addComponent(jTextFieldNomeSimples, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDecreto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(jTextFieldCFOP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelSimplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldDentroSimples, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldForaSimples, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelSimplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelICMSSTSimples, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelICMSSimples, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPaneTributos.addTab("Simples Nacional", null, jPanelSimples, "");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(newButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(refreshButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(masterScrollPane)
                            .addComponent(jTabbedPaneTributos)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxRegime, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {deleteButton, newButton, refreshButton, saveButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(masterScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBoxRegime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPaneTributos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(refreshButton)
                    .addComponent(deleteButton)
                    .addComponent(newButton))
                .addContainerGap())
        );

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.ItemListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == saveButton) {
                TributosJanela.this.saveButtonActionPerformed(evt);
            }
            else if (evt.getSource() == refreshButton) {
                TributosJanela.this.refreshButtonActionPerformed(evt);
            }
            else if (evt.getSource() == newButton) {
                TributosJanela.this.newButtonActionPerformed(evt);
            }
            else if (evt.getSource() == deleteButton) {
                TributosJanela.this.deleteButtonActionPerformed(evt);
            }
        }

        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            if (evt.getSource() == jComboBoxRegime) {
                TributosJanela.this.jComboBoxRegimeItemStateChanged(evt);
            }
            else if (evt.getSource() == jComboBoxCSOSN) {
                TributosJanela.this.jComboBoxCSOSNItemStateChanged(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    @SuppressWarnings("unchecked")
    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        br.sql.acesso.ConnectionFactory.cancelar();
        java.util.Collection data = query.getResultList();
        for (Object entity : data) {
            br.sql.acesso.ConnectionFactory.getEntityManagerNew().refresh(entity);
        }
        list.clear();
        list.addAll(data);
        jComboBoxRegime.setSelectedIndex(0);
        jComboBoxCSOSN.setSelectedIndex(0);
        jTextFieldNomeSimples.setText("");
        jTextFieldCFOP.setText("");
        jTextFieldDecreto.setText("");
        jTextFieldDentroSimples.setText("");
        jTextFieldForaSimples.setText("");
        jComboBoxmodBC.setSelectedIndex(0);
        jTextFieldpRedBC.setText("");
        jTextFieldpICMS.setText("");
        jComboBoxmodBCST.setSelectedIndex(0);
        jTextFieldpRedBCST.setText("");
        jTextFieldpMVAST.setText("");
        jTextFieldpICMSST.setText("");
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int[] selected = masterTable.getSelectedRows();
        List<JsysProdutosTTributacao> toRemove = new ArrayList<>(selected.length);
        for (int idx = 0; idx < selected.length; idx++) {
            JsysProdutosTTributacao j = list.get(masterTable.convertRowIndexToModel(selected[idx]));
            toRemove.add(j);
            br.sql.acesso.ConnectionFactory.delete(j);
        }
        list.removeAll(toRemove);
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        JsysProdutosTTributacao j = new JsysProdutosTTributacao();
        list.add(j);
        int row = list.size() - 1;
        masterTable.setRowSelectionInterval(row, row);
        masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
    }//GEN-LAST:event_newButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        int[] selected = masterTable.getSelectedRows();
        for (int idx = 0; idx < selected.length; idx++) {
            JsysProdutosTTributacao j = list.get(masterTable.convertRowIndexToModel(selected[idx]));
            if (j.getIdTributacao() == null) {
                j.setIdTributacao(DADOS.sequenciaTabela("jsysProdutosTTributacao", "idTributacao"));
            }
            j.setCfop(Integer.valueOf(jTextFieldCFOP.getText()));
            j.setCson(getCSOSN());
            j.setCst(getCST());
            j.setDecreto(jTextFieldDecreto.getText());
            j.setModBC(getModBC());
            j.setModBCST(getModBCST());
            j.setNome(jTextFieldNomeSimples.getText());
            j.setPCredSNDentro(ManagerDecimal.StringToBigDecimal(jTextFieldDentroSimples.getText()));
            j.setPCredSNFora(ManagerDecimal.StringToBigDecimal(jTextFieldForaSimples.getText()));
            j.setPICMS(ManagerDecimal.StringToBigDecimal(jTextFieldpICMS.getText()));
            j.setPICMSST(ManagerDecimal.StringToBigDecimal(jTextFieldpICMSST.getText()));
            j.setPMVAST(ManagerDecimal.StringToBigDecimal(jTextFieldpMVAST.getText()));
            j.setPRedBC(ManagerDecimal.StringToBigDecimal(jTextFieldpRedBC.getText()));
            j.setPRedBCST(ManagerDecimal.StringToBigDecimal(jTextFieldpRedBCST.getText()));
            list.set(masterTable.convertRowIndexToModel(selected[idx]), j);
            br.sql.acesso.ConnectionFactory.update(j);
            refreshButtonActionPerformed(null);
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void jComboBoxRegimeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxRegimeItemStateChanged
        if (jComboBoxRegime.getSelectedIndex() == 0) {
            jTabbedPaneTributos.setEnabledAt(0, true);
            jTabbedPaneTributos.setEnabledAt(1, false);
            jTabbedPaneTributos.setSelectedComponent(jPanelNormal);
        } else {
            jTabbedPaneTributos.setEnabledAt(0, false);
            jTabbedPaneTributos.setEnabledAt(1, true);
            jTabbedPaneTributos.setSelectedComponent(jPanelSimples);
            setCSOSN();
        }
    }//GEN-LAST:event_jComboBoxRegimeItemStateChanged

    private void jComboBoxCSOSNItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxCSOSNItemStateChanged
        setCSOSN();
    }//GEN-LAST:event_jComboBoxCSOSNItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JComboBox<String> jComboBoxCSOSN;
    private javax.swing.JComboBox<String> jComboBoxRegime;
    private javax.swing.JComboBox<String> jComboBoxmodBC;
    private javax.swing.JComboBox<String> jComboBoxmodBCST;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelICMSSTSimples;
    private javax.swing.JPanel jPanelICMSSimples;
    private javax.swing.JPanel jPanelNormal;
    private javax.swing.JPanel jPanelSimples;
    private javax.swing.JTabbedPane jTabbedPaneTributos;
    private javax.swing.JTextField jTextFieldCFOP;
    private javax.swing.JTextField jTextFieldDecreto;
    private javax.swing.JTextField jTextFieldDentroSimples;
    private javax.swing.JTextField jTextFieldForaSimples;
    private javax.swing.JTextField jTextFieldNomeSimples;
    private javax.swing.JTextField jTextFieldpICMS;
    private javax.swing.JTextField jTextFieldpICMSST;
    private javax.swing.JTextField jTextFieldpMVAST;
    private javax.swing.JTextField jTextFieldpRedBC;
    private javax.swing.JTextField jTextFieldpRedBCST;
    private java.util.List<JsysProdutosTTributacao> list;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private javax.swing.JButton newButton;
    private javax.swing.JLabel nomeLabel;
    private javax.persistence.Query query;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton saveButton;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private int getCSOSN(String value) {
        switch (value) {
            case "101":
                return 0;
            case "102":
                return 1;
            case "103":
                return 2;
            case "201":
                return 3;
            case "202":
                return 4;
            case "203":
                return 5;
            case "300":
                return 6;
            case "400":
                return 7;
            case "500":
                return 8;
            case "900":
                return 9;
            default:
                return 0;
        }
    }

    private void setCSOSN() {

        switch (getCSOSN()) {
            case "101":
                jLabel5.setVisible(true);
                jLabel6.setVisible(true);
                jLabel7.setVisible(true);
                jTextFieldDentroSimples.setVisible(true);
                jTextFieldForaSimples.setVisible(true);
                jPanelICMSSimples.setVisible(false);
                jPanelICMSSTSimples.setVisible(false);
                break;
            case "102":
                jLabel5.setVisible(false);
                jLabel6.setVisible(false);
                jLabel7.setVisible(false);
                jTextFieldDentroSimples.setVisible(false);
                jTextFieldForaSimples.setVisible(false);
                jPanelICMSSimples.setVisible(false);
                jPanelICMSSTSimples.setVisible(false);
                break;
            case "103":
                jLabel5.setVisible(false);
                jLabel6.setVisible(false);
                jLabel7.setVisible(false);
                jTextFieldDentroSimples.setVisible(false);
                jTextFieldForaSimples.setVisible(false);
                jPanelICMSSimples.setVisible(false);
                jPanelICMSSTSimples.setVisible(false);
                break;
            case "201":
                jLabel5.setVisible(true);
                jLabel6.setVisible(true);
                jLabel7.setVisible(true);
                jTextFieldDentroSimples.setVisible(true);
                jTextFieldForaSimples.setVisible(true);
                jPanelICMSSimples.setVisible(false);
                jPanelICMSSTSimples.setVisible(true);
                break;
            case "202":
                jLabel5.setVisible(false);
                jLabel6.setVisible(false);
                jLabel7.setVisible(false);
                jTextFieldDentroSimples.setVisible(false);
                jTextFieldForaSimples.setVisible(false);
                jPanelICMSSimples.setVisible(false);
                jPanelICMSSTSimples.setVisible(true);
                break;
            case "203":
                jLabel5.setVisible(false);
                jLabel6.setVisible(false);
                jLabel7.setVisible(false);
                jTextFieldDentroSimples.setVisible(false);
                jTextFieldForaSimples.setVisible(false);
                jPanelICMSSimples.setVisible(false);
                jPanelICMSSTSimples.setVisible(true);
                break;
            case "300":
                jLabel5.setVisible(false);
                jLabel6.setVisible(false);
                jLabel7.setVisible(false);
                jTextFieldDentroSimples.setVisible(false);
                jTextFieldForaSimples.setVisible(false);
                jPanelICMSSimples.setVisible(false);
                jPanelICMSSTSimples.setVisible(false);
                break;
            case "400":
                jLabel5.setVisible(false);
                jLabel6.setVisible(false);
                jLabel7.setVisible(false);
                jTextFieldDentroSimples.setVisible(false);
                jTextFieldForaSimples.setVisible(false);
                jPanelICMSSimples.setVisible(false);
                jPanelICMSSTSimples.setVisible(false);
                break;
            case "500":
                jLabel5.setVisible(false);
                jLabel6.setVisible(false);
                jLabel7.setVisible(false);
                jTextFieldDentroSimples.setVisible(false);
                jTextFieldForaSimples.setVisible(false);
                jPanelICMSSimples.setVisible(false);
                jPanelICMSSTSimples.setVisible(false);
                break;
            case "900":
                jLabel5.setVisible(true);
                jLabel6.setVisible(true);
                jLabel7.setVisible(true);
                jTextFieldDentroSimples.setVisible(true);
                jTextFieldForaSimples.setVisible(true);
                jPanelICMSSimples.setVisible(true);
                jPanelICMSSTSimples.setVisible(true);
                break;
        }
    }

    private String getCSOSN() {
        return jComboBoxCSOSN.getSelectedItem().toString().substring(0, 3);
    }

    private String getCST() {
        return "";
    }

    private String getModBC() {
        return String.valueOf(jComboBoxmodBC.getSelectedIndex());
    }

    private String getModBCST() {
        return String.valueOf(jComboBoxmodBCST.getSelectedIndex());
    }

    private void selectRow() {
        String formato = "#,##0.00";
        int[] selected = masterTable.getSelectedRows();
        for (int idx = 0; idx < selected.length; idx++) {
            JsysProdutosTTributacao j = list.get(masterTable.convertRowIndexToModel(selected[idx]));
            if (!"".equals(j.getCst())) {
                jComboBoxRegime.setSelectedIndex(0);
            } else {
                jComboBoxRegime.setSelectedIndex(1);
            }
            //j.setIdTributacao(ExecutaQuery.sequenciaTabela("jsysProdutosTTributacao", "idTributacao"));
            jTextFieldCFOP.setText(j.getCfop().toString());//j.setCfop(Integer.valueOf(jTextFieldCFOP.getText()));
            jComboBoxCSOSN.setSelectedIndex(getCSOSN(j.getCson()));//j.setCson(getCSOSN());
            jTextFieldDecreto.setText(j.getDecreto());//j.setDecreto(getText());

            String x = Validar.isNotNullOrWhite(j.getModBC()) ? "0" : j.getModBC();
            jComboBoxmodBC.setSelectedIndex(Integer.parseInt(x));//j.setModBC(getModBC());
            jComboBoxmodBCST.setSelectedIndex(Integer.parseInt(j.getModBCST()));//j.setModBCST(getModBCST());
            jTextFieldNomeSimples.setText(j.getNome());//j.setNome(jTextFieldNomeSimples.getText());
            jTextFieldDentroSimples.setText(ManagerDecimal.converter(j.getPCredSNDentro(), formato));//j.setPCredSNDentro(ManagerDecimal.StringToBigDecimal(jTextFieldDentroSimples.getText()));
            jTextFieldForaSimples.setText(ManagerDecimal.converter(j.getPCredSNFora(), formato));//j.setPCredSNFora(ManagerDecimal.StringToBigDecimal(jTextFieldForaSimples.getText()));
            jTextFieldpICMS.setText(ManagerDecimal.converter(j.getPICMS(), formato));//j.setPICMS(ManagerDecimal.StringToBigDecimal(jTextFieldpICMS.getText()));
            jTextFieldpICMSST.setText(ManagerDecimal.converter(j.getPICMSST(), formato));//j.setPICMSST(ManagerDecimal.StringToBigDecimal(jTextFieldpICMSST.getText()));
            jTextFieldpMVAST.setText(ManagerDecimal.converter(j.getPMVAST(), formato));//j.setPMVAST(ManagerDecimal.StringToBigDecimal(jTextFieldpMVAST.getText()));
            jTextFieldpRedBC.setText(ManagerDecimal.converter(j.getPRedBC(), formato));//j.setPRedBC(ManagerDecimal.StringToBigDecimal(jTextFieldpRedBC.getText()));
            jTextFieldpRedBCST.setText(ManagerDecimal.converter(j.getPRedBCST(), formato));//j.setPRedBCST(ManagerDecimal.StringToBigDecimal(jTextFieldpRedBCST.getText()));
        }
    }
}
