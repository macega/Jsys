package br.sql.cadastros;

import br.sql.acesso.SQLDatabaseConnection;
import br.sql.bean.JsysClientes;
import br.sql.log.Log;
import br.sql.defaultTableCellRenderer.Zebrado;
import br.sql.util.ManagerSQL;
import br.sql.util.ReportUtils;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import br.sql.util.ManagerData;
import br.sql.util.Retorna;
import br.sql.util.Validar;

/**
 *
 * @author Juliano Alves Medina
 */
public class ClientesJanela extends JPanel {

    private final String consulta;
    private static final SQLDatabaseConnection DADOS = new SQLDatabaseConnection();

    public ClientesJanela(String args) {
        this.consulta = args;
        initComponents();
        actionConsulta();
        consultaTF.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        consultaTF = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        newButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        FormListener formListener = new FormListener();

        consultaTF.setToolTipText("");
        consultaTF.addKeyListener(formListener);

        jLabel1.setText("Procura:");
        jLabel1.setFocusable(false);

        newButton.setText("Novo");
        newButton.setFocusable(false);
        newButton.addActionListener(formListener);

        jButton1.setText("Editar");
        jButton1.setFocusable(false);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable1, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jButton1, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jButton1.addActionListener(formListener);

        jButton2.setText("Imprimir Ficha de Colaborador");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable1, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jButton2, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jButton2.addActionListener(formListener);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(71, 71, 71)
                .addComponent(newButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newButton)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setFocusable(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Lista de Correntistas");
        jLabel2.setToolTipText("");
        jLabel2.setFocusable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setRowHeight(25);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.addMouseListener(formListener);
        jTable1.addKeyListener(formListener);
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 858, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(consultaTF)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(consultaTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.KeyListener, java.awt.event.MouseListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == newButton) {
                ClientesJanela.this.newButtonActionPerformed(evt);
            }
            else if (evt.getSource() == jButton1) {
                ClientesJanela.this.jButton1ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton2) {
                ClientesJanela.this.jButton2ActionPerformed(evt);
            }
        }

        public void keyPressed(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == consultaTF) {
                ClientesJanela.this.consultaTFKeyPressed(evt);
            }
            else if (evt.getSource() == jTable1) {
                ClientesJanela.this.jTable1KeyPressed(evt);
            }
        }

        public void keyReleased(java.awt.event.KeyEvent evt) {
        }

        public void keyTyped(java.awt.event.KeyEvent evt) {
        }

        public void mouseClicked(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == jTable1) {
                ClientesJanela.this.jTable1MouseClicked(evt);
            }
        }

        public void mouseEntered(java.awt.event.MouseEvent evt) {
        }

        public void mouseExited(java.awt.event.MouseEvent evt) {
        }

        public void mousePressed(java.awt.event.MouseEvent evt) {
        }

        public void mouseReleased(java.awt.event.MouseEvent evt) {
        }
    }// </editor-fold>//GEN-END:initComponents

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        JsysClientes C = new JsysClientes();
        C.setAdmissao(ManagerData.getDataAtualTypeDate(ManagerData.INICIO));
        ClientesJanelaEdit cje = new ClientesJanelaEdit(new javax.swing.JFrame(), true, C, false);
        cje.setVisible(true);
        if (cje.isConfirmaClientes()) {
            consultaTF.setText(cje.RegistroJsysClientes.getNomeCorentista());
            actionConsulta();
            cje.dispose();
        } else {
            actionConsulta();
            cje.dispose();
        }
    }//GEN-LAST:event_newButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        editar();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void consultaTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_consultaTFKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            actionConsulta();
        }
    }//GEN-LAST:event_consultaTFKeyPressed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            editar();
        }
    }//GEN-LAST:event_jTable1KeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int[] selected = jTable1.getSelectedRows();
        for (int idx = 0; idx < selected.length; idx++) {
            Map<Object, Object> par = new HashMap<>();
            par.put("idFuncionario", jTable1.getValueAt(jTable1.getSelectedRow(), 0));
            ReportUtils.openReport("Ficha de Registro de Colaborador", "/br/rel/clientes/FichaCorrentista.jasper", par);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (evt.getClickCount() > 1) {
            editar();
        }
    }//GEN-LAST:event_jTable1MouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField consultaTF;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton newButton;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

//    public static void main(final String[] args) {
//        /* Create and display the form */
//        EventQueue.invokeLater(() -> {
//            JFrame frame = new JFrame();
//            frame.setContentPane(new ClientesJanela(args[0]));
//            frame.pack();
//            frame.setExtendedState(4);
//            frame.setLocationRelativeTo(null);
//            frame.setTitle("Cadastro de Correntistas");
//            frame.setVisible(true);
//        });
//    }
    private void actionConsulta() {
        try {
            ManagerSQL sql = new ManagerSQL();
            String[] campos;
            String[] nomeCampos;
            if (Validar.isNotNullOrWhite(consulta)) {
                nomeCampos = new String[]{"CODIGO",
                    "NOME CLIENTE",
                    "MEDIA COMPRAS",
                    "ULTIMA COMPRA",
                    "DIAS",
                    "FONE",
                    "CELULAR",
                    "FAX",
                    "ENDEREÇO",
                    "BAIRRO",
                    "CIDADE",
                    "CPF / CNPJ"};
                campos = new String[]{"jsysClientes.idCliente",
                    "jsysClientes.nomeCorentista",
                    "CONVERT(DECIMAL(16, 2), ROUND(AVG(JSYSORCAMENTO.VALORLIQUIDO), 2))",
                    "CONVERT(VARCHAR, MAX(JSYSORCAMENTO.DATA), 103)",
                    "DATEDIFF(DAY, ISNULL(MAX(JSYSORCAMENTO.DATA), GETDATE()), GETDATE())",
                    "jsysClientes.fone",
                    "jsysClientes.celular",
                    "jsysClientes.fax",
                    "jsysClientes.endereco",
                    "jsysClientes.bairro",
                    "jsysClientes.cidade",
                    "jsysClientes.cnpjCpf"};
                sql.setTabela("JSYSCLIENTES LEFT JOIN JSYSORCAMENTO ON JSYSORCAMENTO.IDCLIENTE = JSYSCLIENTES.IDCLIENTE LEFT JOIN JSYSCLIENTES AS VENDEDOR ON VENDEDOR.IDCLIENTE = JSYSORCAMENTO.IDFUNCIONARIO");
                Map<Object, Object> onde = new HashMap<>();
                onde.put("VENDEDOR.idCliente", "= " + consulta);
                sql.setOnde(onde);
                sql.setAgrupar(new String[]{"JSYSCLIENTES.IDCLIENTE",
                    "JSYSCLIENTES.NOMECORENTISTA",
                    "JSYSCLIENTES.ENDERECO",
                    "JSYSCLIENTES.BAIRRO",
                    "JSYSCLIENTES.CIDADE",
                    "JSYSCLIENTES.FONE",
                    "JSYSCLIENTES.CELULAR",
                    "JSYSCLIENTES.FAX",
                    "JSYSCLIENTES.CNPJCPF"});
            } else {
                nomeCampos = new String[]{"CODIGO",
                    "NOME CLIENTE",
                    "ENDEREÇO",
                    "BAIRRO",
                    "CIDADE",
                    "FONE",
                    "CELULAR",
                    "FAX",
                    "CPF / CNPJ"};
                campos = new String[]{"jsysClientes.idCliente",
                    "jsysClientes.nomeCorentista",
                    "jsysClientes.endereco",
                    "jsysClientes.bairro",
                    "jsysClientes.cidade",
                    "jsysClientes.fone",
                    "jsysClientes.celular",
                    "jsysClientes.fax",
                    "jsysClientes.cnpjCpf"};
                sql.setTabela("jsysClientes");
            }
            sql.setCampos(campos);
            sql.setOrder(new String[]{"jsysClientes.nomeCorentista"});
            ResultSet x = DADOS.execSQL(sql.getSQL(consultaTF.getText()));
            // Definição do TableModel
            DefaultTableModel aModel = new DefaultTableModel(new Object[][]{}, nomeCampos) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };
            java.sql.ResultSetMetaData rsmd = x.getMetaData();
            int colNo = rsmd.getColumnCount();
            while (x.next()) {
                Object[] objects = new Object[colNo];
                for (int i = 0; i < colNo; i++) {
                    objects[i] = x.getObject(i + 1);
                }
                aModel.addRow(objects);
            }
            jTable1.setModel(aModel);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(70);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(400);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(170);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(170);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(170);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(180);
            jTable1.setDefaultRenderer(Object.class, new Zebrado());
        } catch (SQLException e) {
            Log.registraErro(this, "falha ao acionar a consulta", e);
        }
    }

    private void editar() {
        Map<Object, Object> filtro = new HashMap<>();
        filtro.put("idCliente", Integer.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString()));
        JsysClientes C = (JsysClientes) Retorna.findOneResult("JsysClientes.findByIdCliente", filtro);
        ClientesJanelaEdit cje = new ClientesJanelaEdit(null, true, C, false);
        cje.setVisible(true);
        if (cje.isConfirmaClientes()) {
            consultaTF.setText(cje.RegistroJsysClientes.getNomeCorentista());
            actionConsulta();
            cje.dispose();
        } else {
            actionConsulta();
            cje.dispose();
        }
    }
}
