package br.sql.cadastros;

import br.sql.bean.JsysClientes;
import br.sql.bean.Usuarios;
import br.sql.bean.UsuariosGrupo;
import br.sql.log.Log;
import br.sql.util.Criptografia.Security;
import br.sql.util.Retorna;
import java.awt.event.KeyEvent;
import java.io.UnsupportedEncodingException;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import jsys.sql.Menu;

/**
 *
 * @author Juliano Alves Medina
 */
public class UsuarioJanela extends JPanel {

    private Usuarios selectedUsuario;
    private UsuariosGrupo selectedUsuarioGrupo;

    private void setUsuarioGrupo() {
        int index = masterTable.getSelectedRow();
        if (index >= 0) {
            selectedUsuarioGrupo = list.get(masterTable.convertRowIndexToModel(index));
        } else {
            selectedUsuarioGrupo = null;
        }
    }

    private void setUsuario() {
        int index = masterTable.getSelectedRow();
        if (index >= 0) {
            UsuariosGrupo U = list.get(masterTable.convertRowIndexToModel(index));
            selectedUsuarioGrupo = U;
            Collection<Usuarios> us = U.getUsuariosList();
            int[] selected = detailTable.getSelectedRows();
            for (int idx = 0; idx < selected.length; idx++) {
                selected[idx] = detailTable.convertRowIndexToModel(selected[idx]);
                int count = 0;
                Iterator<Usuarios> iter = us.iterator();
                while (count++ < selected[idx]) {
                    iter.next();
                }
                selectedUsuario = iter.next();
            }
        } else {
            selectedUsuarioGrupo = null;
            selectedUsuario = null;
        }
    }

    public UsuarioJanela() {
        initComponents();
        loadDate();
        setEnabledCheckBoxs();
        setEnableButtonsMaster();
        setEnableButtonsDetail();
        masterTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                setUsuarioGrupo();
                setEnabledCheckBoxs();
                setEnableButtonsMaster();
                setEnableButtonsDetail();
            }
        });
        detailTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                setUsuario();
                if (e.getValueIsAdjusting() & selectedUsuario != null) {
                    jPasswordField2.setText(selectedUsuario.getPassword());
                    if (selectedUsuario.getIdCliente() != null) {
                        uJComboBoxFuncinarios.setSelectedItem(new StringBuilder()
                                .append(selectedUsuario.getIdCliente().getNomeCorentista())
                                .append(" ")
                                .append(selectedUsuario.getIdCliente().getIdCliente()));
                    }
                }
                setEnableButtonsDetail();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        query = java.beans.Beans.isDesignTime() ? null : br.sql.acesso.ConnectionFactory.getEntityManagerNew().createQuery("SELECT U FROM UsuariosGrupo U");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        usuario = Menu.getUser();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        deleteDetailButton = new javax.swing.JButton();
        saveDetailButton = new javax.swing.JButton();
        newDetailButton = new javax.swing.JButton();
        detailScrollPane = new javax.swing.JScrollPane();
        detailTable = new javax.swing.JTable();
        jTextFieldUsuario = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        uJComboBoxFuncinarios = new componentes.UJComboBox();
        jLabel8 = new javax.swing.JLabel();
        jPasswordField2 = new javax.swing.JPasswordField();
        jLabel9 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        newButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        cancelarButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanelEspeciais = new javax.swing.JPanel();
        jCheckBoxPonto = new javax.swing.JCheckBox();
        jCheckBoxVendas = new javax.swing.JCheckBox();
        jCheckBoxCaixa = new javax.swing.JCheckBox();
        jCheckBoxFinanceiro = new javax.swing.JCheckBox();
        jCheckBoxEspRelatorios = new javax.swing.JCheckBox();
        jCheckBoxLojas = new javax.swing.JCheckBox();
        jCheckBoxGerencia = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jCheckBoxFecha = new javax.swing.JCheckBox();
        jCheckBoxCancelamento = new javax.swing.JCheckBox();
        jCheckBoxAdminstracao = new javax.swing.JCheckBox();
        jCheckBoxAjusteEstoque = new javax.swing.JCheckBox();
        jPanelMenus = new javax.swing.JPanel();
        jCheckBox11 = new javax.swing.JCheckBox();
        jCheckBox16 = new javax.swing.JCheckBox();
        jCheckBoxMenuCaixa = new javax.swing.JCheckBox();
        jCheckBox18 = new javax.swing.JCheckBox();
        jCheckBox19 = new javax.swing.JCheckBox();
        jCheckBox13 = new javax.swing.JCheckBox();
        jCheckBoxCadastro = new javax.swing.JCheckBox();
        jCheckBox12 = new javax.swing.JCheckBox();
        jCheckBox10 = new javax.swing.JCheckBox();
        jCheckBox14 = new javax.swing.JCheckBox();
        jCheckBox15 = new javax.swing.JCheckBox();
        jCheckBox17 = new javax.swing.JCheckBox();
        jPanelRelatorios = new javax.swing.JPanel();
        jCheckBoxRelVendas = new javax.swing.JCheckBox();
        jCheckBoxRelCaixa = new javax.swing.JCheckBox();
        jCheckBoxRelGerencia = new javax.swing.JCheckBox();
        deleteButton = new javax.swing.JButton();

        FormListener formListener = new FormListener();

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro de Usuarios"));

        deleteDetailButton.setText("Apagar Usuario");
        deleteDetailButton.setEnabled(false);
        deleteDetailButton.addActionListener(formListener);

        saveDetailButton.setText("Salvar Usuario");
        saveDetailButton.setToolTipText("");
        saveDetailButton.setEnabled(false);
        saveDetailButton.addActionListener(formListener);

        newDetailButton.setText("Novo Usuario");
        newDetailButton.setEnabled(false);
        newDetailButton.addActionListener(formListener);

        detailTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        detailTable.setColumnSelectionAllowed(true);
        detailTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        detailTable.getTableHeader().setReorderingAllowed(false);

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${selectedElement.usuariosList}");
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, eLProperty, detailTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${usuario}"));
        columnBinding.setColumnName("Usuario");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${bloqueado}"));
        columnBinding.setColumnName("Bloqueado");
        columnBinding.setColumnClass(Boolean.class);
        jTableBinding.setSourceUnreadableValue(java.util.Collections.emptyList());
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        detailTable.addMouseListener(formListener);
        detailScrollPane.setViewportView(detailTable);
        detailTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (detailTable.getColumnModel().getColumnCount() > 0) {
            detailTable.getColumnModel().getColumn(0).setResizable(false);
            detailTable.getColumnModel().getColumn(0).setPreferredWidth(300);
            detailTable.getColumnModel().getColumn(1).setResizable(false);
            detailTable.getColumnModel().getColumn(1).setPreferredWidth(60);
        }

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, detailTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.usuario}"), jTextFieldUsuario, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, detailTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jTextFieldUsuario, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jTextFieldUsuario.addFocusListener(formListener);
        jTextFieldUsuario.addKeyListener(formListener);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, detailTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.password}"), jPasswordField1, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, detailTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jPasswordField1, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jPasswordField1.addFocusListener(formListener);
        jPasswordField1.addKeyListener(formListener);

        jLabel2.setText("Usuario");

        jLabel3.setText("Senha");
        jLabel3.setToolTipText("");

        jTextField3.setToolTipText("");
        jTextField3.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.grupo}"), jTextField3, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        uJComboBoxFuncinarios.setAutocompletar(true);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, detailTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), uJComboBoxFuncinarios, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        uJComboBoxFuncinarios.addKeyListener(formListener);

        jLabel8.setText("Funcionario");
        jLabel8.setToolTipText("");

        jPasswordField2.setToolTipText("");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, detailTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jPasswordField2, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jPasswordField2.addFocusListener(formListener);
        jPasswordField2.addKeyListener(formListener);

        jLabel9.setText("Repetir Senha");
        jLabel9.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldUsuario))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(uJComboBoxFuncinarios, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPasswordField2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPasswordField1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(detailScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jTextField3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(newDetailButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteDetailButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(saveDetailButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newDetailButton)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(deleteDetailButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveDetailButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(detailScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uJComboBoxFuncinarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro de Grupo"));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.grupo}"), jTextField1, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jTextField1, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jTextField1.addFocusListener(formListener);
        jTextField1.addKeyListener(formListener);

        newButton.setText("Novo Grupo");
        newButton.setEnabled(false);
        newButton.addActionListener(formListener);

        jLabel1.setText("Grupo");
        jLabel1.setToolTipText("");

        saveButton.setText("Salvar Grupo");
        saveButton.setEnabled(false);
        saveButton.addActionListener(formListener);

        masterTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        masterTable.setColumnSelectionAllowed(true);
        masterTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${grupo}"));
        columnBinding.setColumnName("Grupo");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterScrollPane.setViewportView(masterTable);
        masterTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (masterTable.getColumnModel().getColumnCount() > 0) {
            masterTable.getColumnModel().getColumn(0).setPreferredWidth(370);
        }

        cancelarButton.setText("Cancelar");
        cancelarButton.addActionListener(formListener);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Acessos ao Sistema"));

        jPanelEspeciais.setBorder(javax.swing.BorderFactory.createTitledBorder("Especiais"));

        jCheckBoxPonto.setText("Ponto");
        jCheckBoxPonto.setToolTipText("");
        jCheckBoxPonto.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.ponto}"), jCheckBoxPonto, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBoxVendas.setText("Vendas");
        jCheckBoxVendas.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.vendas}"), jCheckBoxVendas, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBoxCaixa.setText("Caixa");
        jCheckBoxCaixa.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.caixa}"), jCheckBoxCaixa, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBoxFinanceiro.setText("Financeiro");
        jCheckBoxFinanceiro.setToolTipText("");
        jCheckBoxFinanceiro.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.financeiro}"), jCheckBoxFinanceiro, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBoxEspRelatorios.setText("Relatorios");
        jCheckBoxEspRelatorios.setToolTipText("");
        jCheckBoxEspRelatorios.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.relatorios}"), jCheckBoxEspRelatorios, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBoxLojas.setText("Lojas");
        jCheckBoxLojas.setToolTipText("");
        jCheckBoxLojas.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.lojas}"), jCheckBoxLojas, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBoxGerencia.setText("Gerencia");
        jCheckBoxGerencia.setToolTipText("");
        jCheckBoxGerencia.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.gerencia}"), jCheckBoxGerencia, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setText("Liberador");
        jLabel6.setToolTipText("");

        jLabel7.setForeground(new java.awt.Color(255, 0, 0));
        jLabel7.setText("Recebe no Caixa");
        jLabel7.setToolTipText("");

        jCheckBoxFecha.setText("Fecha AUTO");
        jCheckBoxFecha.setToolTipText("");
        jCheckBoxFecha.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.fechaAuto}"), jCheckBoxFecha, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBoxCancelamento.setText("Cancelamento Diario");
        jCheckBoxCancelamento.setToolTipText("");
        jCheckBoxCancelamento.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.cancelarDia}"), jCheckBoxCancelamento, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBoxAdminstracao.setText("Administração");
        jCheckBoxAdminstracao.setToolTipText("");
        jCheckBoxAdminstracao.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.administracao}"), jCheckBoxAdminstracao, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBoxAjusteEstoque.setText("Ajuste Estoque");
        jCheckBoxAjusteEstoque.setToolTipText("Libera para o Grupo selecionado o Ajuste de Estoque.");
        jCheckBoxAjusteEstoque.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.movAjusteEstoque}"), jCheckBoxAjusteEstoque, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout jPanelEspeciaisLayout = new javax.swing.GroupLayout(jPanelEspeciais);
        jPanelEspeciais.setLayout(jPanelEspeciaisLayout);
        jPanelEspeciaisLayout.setHorizontalGroup(
            jPanelEspeciaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEspeciaisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelEspeciaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelEspeciaisLayout.createSequentialGroup()
                        .addComponent(jCheckBoxLojas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBoxAdminstracao))
                    .addGroup(jPanelEspeciaisLayout.createSequentialGroup()
                        .addGroup(jPanelEspeciaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelEspeciaisLayout.createSequentialGroup()
                                .addComponent(jCheckBoxCaixa)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7))
                            .addGroup(jPanelEspeciaisLayout.createSequentialGroup()
                                .addComponent(jCheckBoxVendas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6))
                            .addComponent(jCheckBoxGerencia)
                            .addComponent(jCheckBoxFinanceiro)
                            .addComponent(jCheckBoxEspRelatorios)
                            .addGroup(jPanelEspeciaisLayout.createSequentialGroup()
                                .addComponent(jCheckBoxPonto)
                                .addGap(6, 6, 6)
                                .addComponent(jCheckBoxAjusteEstoque))
                            .addComponent(jCheckBoxFecha)
                            .addComponent(jCheckBoxCancelamento))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelEspeciaisLayout.setVerticalGroup(
            jPanelEspeciaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEspeciaisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelEspeciaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxCaixa)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelEspeciaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxVendas)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxGerencia)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxFinanceiro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxEspRelatorios)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelEspeciaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxLojas)
                    .addComponent(jCheckBoxAdminstracao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelEspeciaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxPonto)
                    .addComponent(jCheckBoxAjusteEstoque))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxFecha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCheckBoxCancelamento)
                .addContainerGap())
        );

        jPanelMenus.setBorder(javax.swing.BorderFactory.createTitledBorder("Menus"));

        jCheckBox11.setText("Pagar");
        jCheckBox11.setToolTipText("");
        jCheckBox11.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.menuPagar}"), jCheckBox11, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBox16.setText("Deposito");
        jCheckBox16.setToolTipText("");
        jCheckBox16.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.menuDeposito}"), jCheckBox16, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBoxMenuCaixa.setText("Caixa");
        jCheckBoxMenuCaixa.setToolTipText("");
        jCheckBoxMenuCaixa.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.menuCaixa}"), jCheckBoxMenuCaixa, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBox18.setText("CRM");
        jCheckBox18.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.menuCRM}"), jCheckBox18, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBox19.setText("Ajuda");
        jCheckBox19.setToolTipText("");
        jCheckBox19.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.menuAjuda}"), jCheckBox19, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBox13.setText("Relatorios");
        jCheckBox13.setToolTipText("");
        jCheckBox13.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.menuRelatorios}"), jCheckBox13, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBoxCadastro.setText("Cadastro");
        jCheckBoxCadastro.setToolTipText("");
        jCheckBoxCadastro.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.menuCadastros}"), jCheckBoxCadastro, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBox12.setText("Ponto");
        jCheckBox12.setToolTipText("");
        jCheckBox12.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.menuPonto}"), jCheckBox12, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBox10.setText("Movimento");
        jCheckBox10.setToolTipText("");
        jCheckBox10.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.menuMovimento}"), jCheckBox10, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBox14.setText("Utilitarios");
        jCheckBox14.setToolTipText("");
        jCheckBox14.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.menuUtilitarios}"), jCheckBox14, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBox15.setText("Fiscal");
        jCheckBox15.setToolTipText("");
        jCheckBox15.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.menuFiscal}"), jCheckBox15, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBox17.setText("Financeiro");
        jCheckBox17.setToolTipText("");
        jCheckBox17.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.menuFinanceiro}"), jCheckBox17, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout jPanelMenusLayout = new javax.swing.GroupLayout(jPanelMenus);
        jPanelMenus.setLayout(jPanelMenusLayout);
        jPanelMenusLayout.setHorizontalGroup(
            jPanelMenusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMenusLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMenusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox16)
                    .addComponent(jCheckBox11)
                    .addComponent(jCheckBox12)
                    .addComponent(jCheckBox13)
                    .addComponent(jCheckBox14)
                    .addComponent(jCheckBox15)
                    .addGroup(jPanelMenusLayout.createSequentialGroup()
                        .addGroup(jPanelMenusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBoxMenuCaixa)
                            .addComponent(jCheckBox10)
                            .addComponent(jCheckBoxCadastro))
                        .addGap(34, 34, 34)
                        .addGroup(jPanelMenusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox19)
                            .addComponent(jCheckBox18)
                            .addComponent(jCheckBox17))))
                .addContainerGap())
        );
        jPanelMenusLayout.setVerticalGroup(
            jPanelMenusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMenusLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMenusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxCadastro)
                    .addComponent(jCheckBox17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelMenusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxMenuCaixa)
                    .addComponent(jCheckBox18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelMenusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox10)
                    .addComponent(jCheckBox19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox16)
                .addContainerGap())
        );

        jPanelRelatorios.setBorder(javax.swing.BorderFactory.createTitledBorder("Relatorios"));

        jCheckBoxRelVendas.setText("Vendas");
        jCheckBoxRelVendas.setToolTipText("");
        jCheckBoxRelVendas.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.relVendas}"), jCheckBoxRelVendas, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBoxRelCaixa.setText("Caixa");
        jCheckBoxRelCaixa.setToolTipText("");
        jCheckBoxRelCaixa.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.relCaixa}"), jCheckBoxRelCaixa, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBoxRelGerencia.setText("Gerencial");
        jCheckBoxRelGerencia.setToolTipText("");
        jCheckBoxRelGerencia.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.relGerencial}"), jCheckBoxRelGerencia, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout jPanelRelatoriosLayout = new javax.swing.GroupLayout(jPanelRelatorios);
        jPanelRelatorios.setLayout(jPanelRelatoriosLayout);
        jPanelRelatoriosLayout.setHorizontalGroup(
            jPanelRelatoriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRelatoriosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRelatoriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxRelVendas)
                    .addComponent(jCheckBoxRelCaixa)
                    .addComponent(jCheckBoxRelGerencia))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelRelatoriosLayout.setVerticalGroup(
            jPanelRelatoriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRelatoriosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCheckBoxRelVendas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxRelCaixa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBoxRelGerencia))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelEspeciais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelRelatorios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelMenus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelMenus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelEspeciais, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelRelatorios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        deleteButton.setText("Apagar Grupo");
        deleteButton.setToolTipText("");
        deleteButton.setEnabled(false);
        deleteButton.addActionListener(formListener);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 500, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(masterScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(newButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cancelarButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField1)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(newButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelarButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveButton))
                    .addComponent(masterScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.FocusListener, java.awt.event.KeyListener, java.awt.event.MouseListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == deleteDetailButton) {
                UsuarioJanela.this.deleteDetailButtonActionPerformed(evt);
            }
            else if (evt.getSource() == saveDetailButton) {
                UsuarioJanela.this.saveDetailButtonActionPerformed(evt);
            }
            else if (evt.getSource() == newDetailButton) {
                UsuarioJanela.this.newDetailButtonActionPerformed(evt);
            }
            else if (evt.getSource() == newButton) {
                UsuarioJanela.this.newButtonActionPerformed(evt);
            }
            else if (evt.getSource() == saveButton) {
                UsuarioJanela.this.saveButtonActionPerformed(evt);
            }
            else if (evt.getSource() == cancelarButton) {
                UsuarioJanela.this.cancelarButtonActionPerformed(evt);
            }
            else if (evt.getSource() == deleteButton) {
                UsuarioJanela.this.deleteButtonActionPerformed(evt);
            }
        }

        public void focusGained(java.awt.event.FocusEvent evt) {
            if (evt.getSource() == jTextFieldUsuario) {
                UsuarioJanela.this.jTextFieldUsuarioFocusGained(evt);
            }
            else if (evt.getSource() == jPasswordField1) {
                UsuarioJanela.this.jPasswordField1FocusGained(evt);
            }
            else if (evt.getSource() == jPasswordField2) {
                UsuarioJanela.this.jPasswordField2FocusGained(evt);
            }
            else if (evt.getSource() == jTextField1) {
                UsuarioJanela.this.jTextField1FocusGained(evt);
            }
        }

        public void focusLost(java.awt.event.FocusEvent evt) {
        }

        public void keyPressed(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == jTextFieldUsuario) {
                UsuarioJanela.this.jTextFieldUsuarioKeyPressed(evt);
            }
            else if (evt.getSource() == jPasswordField1) {
                UsuarioJanela.this.jPasswordField1KeyPressed(evt);
            }
            else if (evt.getSource() == uJComboBoxFuncinarios) {
                UsuarioJanela.this.uJComboBoxFuncinariosKeyPressed(evt);
            }
            else if (evt.getSource() == jPasswordField2) {
                UsuarioJanela.this.jPasswordField2KeyPressed(evt);
            }
            else if (evt.getSource() == jTextField1) {
                UsuarioJanela.this.jTextField1KeyPressed(evt);
            }
        }

        public void keyReleased(java.awt.event.KeyEvent evt) {
        }

        public void keyTyped(java.awt.event.KeyEvent evt) {
        }

        public void mouseClicked(java.awt.event.MouseEvent evt) {
        }

        public void mouseEntered(java.awt.event.MouseEvent evt) {
        }

        public void mouseExited(java.awt.event.MouseEvent evt) {
        }

        public void mousePressed(java.awt.event.MouseEvent evt) {
        }

        public void mouseReleased(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == detailTable) {
                UsuarioJanela.this.detailTableMouseReleased(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    private void deleteDetailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDetailButtonActionPerformed
        int index = masterTable.getSelectedRow();
        UsuariosGrupo U = list.get(masterTable.convertRowIndexToModel(index));
        Collection<Usuarios> us = U.getUsuariosList();
        int[] selected = detailTable.getSelectedRows();
        List<Usuarios> toRemove = new ArrayList<>(selected.length);
        for (int idx = 0; idx < selected.length; idx++) {
            selected[idx] = detailTable.convertRowIndexToModel(selected[idx]);
            int count = 0;
            Iterator<Usuarios> iter = us.iterator();
            while (count++ < selected[idx]) {
                iter.next();
            }
            Usuarios u = iter.next();
            toRemove.add(u);
            br.sql.acesso.ConnectionFactory.delete(u);
        }
        us.removeAll(toRemove);
        masterTable.clearSelection();
        masterTable.setRowSelectionInterval(index, index);
    }//GEN-LAST:event_deleteDetailButtonActionPerformed

    @SuppressWarnings("unchecked")
    private void newDetailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newDetailButtonActionPerformed
        int index = masterTable.getSelectedRow();
        UsuariosGrupo U = list.get(masterTable.convertRowIndexToModel(index));
        Collection<Usuarios> us = U.getUsuariosList();
        if (us == null) {
            us = new LinkedList<>();
            U.setUsuariosList((List) us);
        }
        Usuarios u = new Usuarios();
        u.setIdGrupo(U);
        us.add(u);
        masterTable.clearSelection();
        masterTable.setRowSelectionInterval(index, index);
        int row = us.size() - 1;
        detailTable.setRowSelectionInterval(row, row);
        detailTable.scrollRectToVisible(detailTable.getCellRect(row, 0, true));
        jPasswordField2.setText("");
        uJComboBoxFuncinarios.setSelectedIndex(-1);
        jTextFieldUsuario.requestFocus();
    }//GEN-LAST:event_newDetailButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        UsuariosGrupo U = new UsuariosGrupo();
        list.add(U);
        int row = list.size() - 1;
        masterTable.setRowSelectionInterval(row, row);
        masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
        jTextField1.requestFocus();
    }//GEN-LAST:event_newButtonActionPerformed

    private void saveDetailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveDetailButtonActionPerformed
        jTextFieldUsuario.setText(jTextFieldUsuario.getText().toUpperCase());
        jPasswordField1.setText(String.valueOf(jPasswordField1.getPassword()).toUpperCase());
        jPasswordField2.setText(String.valueOf(jPasswordField2.getPassword()).toUpperCase());
        if (!String.valueOf(jPasswordField1.getPassword()).equals(String.valueOf(jPasswordField2.getPassword()))) {
            JOptionPane.showMessageDialog(this, "Verifique a senha digitada se esta igual nos dois campos", "ERRO", JOptionPane.ERROR_MESSAGE);
        } else if (String.valueOf(jPasswordField1.getPassword()).length() <= 3) {
            JOptionPane.showMessageDialog(this, "Senha deve ter no mínimo quatro dígitos", "ERRO", JOptionPane.ERROR_MESSAGE);
        } else if (jTextFieldUsuario.getText().length() <= 3) {
            JOptionPane.showMessageDialog(this, "Usuário deve ter no mínimo quatro dígitos", "ERRO", JOptionPane.ERROR_MESSAGE);
        } else if (uJComboBoxFuncinarios.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Verifique o usuário selecionado", "ERRO", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                setUsuario();
                JsysClientes colaborador = (JsysClientes) uJComboBoxFuncinarios.getSelectedObject();
                Security s = new Security();
                String password = s.getHexadecimal(String.valueOf(jPasswordField1.getPassword()), "SHA-256", "UTF-8");
                selectedUsuario.setPassword(password);
                selectedUsuario.setIdCliente(colaborador);
                selectedUsuario = (Usuarios) br.sql.acesso.ConnectionFactory.update(selectedUsuario);
                if (selectedUsuario.getIdCliente() != null) {
                    JOptionPane.showMessageDialog(this, "Salvo com Sucesso!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao Tentar Salvar!", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            } catch (NoSuchAlgorithmException | UnsupportedEncodingException e) {
                Log.registraErro(this, "saveDetailButtonActionPerformed", e);
            }
        }
    }//GEN-LAST:event_saveDetailButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        int[] selected = masterTable.getSelectedRows();
        for (int idx = 0; idx < selected.length; idx++) {
            UsuariosGrupo U = list.get(masterTable.convertRowIndexToModel(selected[idx]));
            if (br.sql.acesso.ConnectionFactory.insertOrUpdate(U) != null) {
                JOptionPane.showMessageDialog(this, "Salvo com Sucesso!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao Tentar Salvar!", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    @SuppressWarnings("unchecked")
    private void cancelarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarButtonActionPerformed
        br.sql.acesso.ConnectionFactory.cancelar();
        java.util.Collection data = query.getResultList();
        for (Object entity : data) {
            br.sql.acesso.ConnectionFactory.getEntityManagerNew().refresh(entity);
        }
        list.clear();
        list.addAll(data);
    }//GEN-LAST:event_cancelarButtonActionPerformed

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        jTextField1.selectAll();
    }//GEN-LAST:event_jTextField1FocusGained

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            saveButton.doClick();
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextFieldUsuarioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldUsuarioFocusGained
        jTextFieldUsuario.selectAll();
    }//GEN-LAST:event_jTextFieldUsuarioFocusGained

    private void jTextFieldUsuarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldUsuarioKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jPasswordField1.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldUsuarioKeyPressed

    private void jPasswordField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField1FocusGained
        jPasswordField1.selectAll();
    }//GEN-LAST:event_jPasswordField1FocusGained

    private void jPasswordField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jPasswordField2.requestFocus();
        }
    }//GEN-LAST:event_jPasswordField1KeyPressed

    private void detailTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detailTableMouseReleased
        jTextFieldUsuario.requestFocus();
    }//GEN-LAST:event_detailTableMouseReleased

    private void jPasswordField2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField2FocusGained
        jPasswordField2.selectAll();
    }//GEN-LAST:event_jPasswordField2FocusGained

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int[] selected = masterTable.getSelectedRows();
        List<UsuariosGrupo> toRemove = new ArrayList<>(selected.length);
        for (int idx = 0; idx < selected.length; idx++) {
            UsuariosGrupo U = list.get(masterTable.convertRowIndexToModel(selected[idx]));
            toRemove.add(U);
            br.sql.acesso.ConnectionFactory.delete(U);
        }
        list.removeAll(toRemove);
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void jPasswordField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            uJComboBoxFuncinarios.requestFocus();
        }
    }//GEN-LAST:event_jPasswordField2KeyPressed

    private void uJComboBoxFuncinariosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uJComboBoxFuncinariosKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            saveDetailButton.doClick();
        }
    }//GEN-LAST:event_uJComboBoxFuncinariosKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelarButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton deleteDetailButton;
    private javax.swing.JScrollPane detailScrollPane;
    private javax.swing.JTable detailTable;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox12;
    private javax.swing.JCheckBox jCheckBox13;
    private javax.swing.JCheckBox jCheckBox14;
    private javax.swing.JCheckBox jCheckBox15;
    private javax.swing.JCheckBox jCheckBox16;
    private javax.swing.JCheckBox jCheckBox17;
    private javax.swing.JCheckBox jCheckBox18;
    private javax.swing.JCheckBox jCheckBox19;
    private javax.swing.JCheckBox jCheckBoxAdminstracao;
    private javax.swing.JCheckBox jCheckBoxAjusteEstoque;
    private javax.swing.JCheckBox jCheckBoxCadastro;
    private javax.swing.JCheckBox jCheckBoxCaixa;
    private javax.swing.JCheckBox jCheckBoxCancelamento;
    private javax.swing.JCheckBox jCheckBoxEspRelatorios;
    private javax.swing.JCheckBox jCheckBoxFecha;
    private javax.swing.JCheckBox jCheckBoxFinanceiro;
    private javax.swing.JCheckBox jCheckBoxGerencia;
    private javax.swing.JCheckBox jCheckBoxLojas;
    private javax.swing.JCheckBox jCheckBoxMenuCaixa;
    private javax.swing.JCheckBox jCheckBoxPonto;
    private javax.swing.JCheckBox jCheckBoxRelCaixa;
    private javax.swing.JCheckBox jCheckBoxRelGerencia;
    private javax.swing.JCheckBox jCheckBoxRelVendas;
    private javax.swing.JCheckBox jCheckBoxVendas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanelEspeciais;
    private javax.swing.JPanel jPanelMenus;
    private javax.swing.JPanel jPanelRelatorios;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextFieldUsuario;
    private java.util.List<br.sql.bean.UsuariosGrupo> list;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private javax.swing.JButton newButton;
    private javax.swing.JButton newDetailButton;
    private javax.persistence.Query query;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton saveDetailButton;
    private componentes.UJComboBox uJComboBoxFuncinarios;
    private br.sql.bean.Usuarios usuario;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private void loadDate() {
        java.util.Collection collection = Retorna.findCollection("JsysClientes.findAllColaborador");
        for (Object o : collection) {
            JsysClientes colaborador = (JsysClientes) o;
            uJComboBoxFuncinarios.addItem(new StringBuilder()
                    .append(colaborador.getNomeCorentista())
                    .append(" ")
                    .append(colaborador.getIdCliente()), colaborador);
        }
    }

    private void setEnableButtonsMaster() {
        // grupo
        newButton.setEnabled(usuario.getIdGrupo().isAdministracao());
        deleteButton.setEnabled(masterTable.getSelectedRows().length > 0 & usuario.getIdGrupo().isAdministracao());
        saveButton.setEnabled(usuario.getIdGrupo().isAdministracao());
    }

    private void setEnableButtonsDetail() {
        // usuario 
        newDetailButton.setEnabled(
                masterTable.getSelectedRows().length > 0
                && (usuario.getIdGrupo().isAdministracao()
                || usuario.getIdGrupo().isGerencia() & !selectedUsuarioGrupo.isAdministracao())
        );

        deleteDetailButton.setEnabled(
                masterTable.getSelectedRows().length > 0 & detailTable.getSelectedRows().length > 0
                && (usuario.getIdGrupo().isAdministracao()
                || (usuario.getIdGrupo().isGerencia() & !selectedUsuarioGrupo.isAdministracao()))
        );

        saveDetailButton.setEnabled(
                masterTable.getSelectedRows().length > 0
                && (usuario.getIdGrupo().isAdministracao()
                || (usuario.getIdGrupo().isGerencia() & !selectedUsuarioGrupo.isAdministracao()))
        );
    }

    private void setEnabledCheckBoxs() {
        boolean administracao = masterTable.getSelectedRows().length > 0 && usuario.getIdGrupo().isAdministracao();
        // especial
        jCheckBoxCaixa.setEnabled(administracao);
        jCheckBoxVendas.setEnabled(administracao);
        jCheckBoxGerencia.setEnabled(administracao);
        jCheckBoxFinanceiro.setEnabled(administracao);
        jCheckBoxEspRelatorios.setEnabled(administracao);
        jCheckBoxLojas.setEnabled(administracao);
        jCheckBoxAdminstracao.setEnabled(administracao);
        jCheckBoxPonto.setEnabled(administracao);
        jCheckBoxFecha.setEnabled(administracao);
        jCheckBoxCancelamento.setEnabled(administracao);
        jCheckBoxAjusteEstoque.setEnabled(administracao);
        // reltorios
        jCheckBoxRelVendas.setEnabled(administracao);
        jCheckBoxRelCaixa.setEnabled(administracao);
        jCheckBoxRelGerencia.setEnabled(administracao);
        // menus
        jCheckBoxCadastro.setEnabled(administracao);
        jCheckBoxMenuCaixa.setEnabled(administracao);
        jCheckBox10.setEnabled(administracao);
        jCheckBox11.setEnabled(administracao);
        jCheckBox12.setEnabled(administracao);
        jCheckBox13.setEnabled(administracao);
        jCheckBox14.setEnabled(administracao);
        jCheckBox15.setEnabled(administracao);
        jCheckBox16.setEnabled(administracao);
        jCheckBox17.setEnabled(administracao);
        jCheckBox18.setEnabled(administracao);
        jCheckBox19.setEnabled(administracao);
    }
}
