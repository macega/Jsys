/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.sql.buscas;

import br.sql.acesso.SQLDatabaseConnection;
import br.sql.bean.JsysSubConta;
import br.sql.log.Log;
import br.sql.util.ManagerSQL;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Juliano Alves Medina
 */
public class ConsultaSubContas extends javax.swing.JDialog {
    
    private static final SQLDatabaseConnection DADOS = new SQLDatabaseConnection();

    /**
     * Creates new form ConsultaSubContas
     *
     * @param parent
     * @param modal
     * @param args
     */
    public ConsultaSubContas(java.awt.Frame parent, boolean modal, String args[]) {
        super(parent, modal);
        initComponents();
        jTable1.getInputMap(JTable.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false), 0);
        actionConsulta();
        confirma = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        consultaTF = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        consultaTF.setToolTipText("");
        consultaTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                consultaTFKeyPressed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(consultaTF)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(consultaTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void consultaTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_consultaTFKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            selecionaTabela();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            actionConsulta();
        }
    }//GEN-LAST:event_consultaTFKeyPressed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (this.jTable1.getSelectedRow() != -1) {
                confirma = true;
                Map<Object, Object> filtro = new HashMap<>();
                filtro.put("idGeral", jTable1.getValueAt(jTable1.convertRowIndexToModel(jTable1.getSelectedRow()), 0));
                registroAtual = (JsysSubConta) br.sql.util.Retorna.findOneResult("JsysSubConta.findByIdGeral", filtro);
            }
            dispose();
        }
    }//GEN-LAST:event_jTable1KeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField consultaTF;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void selecionaTabela() {
        try {
            jTable1.requestFocus();
            jTable1.setRowSelectionInterval(0, 0);
        } catch (Exception ignore) {
        }
    }

    private void actionConsulta() {
        try {
            String campos[] = {"jsysSubConta.idGeral", "jsysSubConta.descricao", "jsysSubConta.idConta", "jsysContas.descricao"};
            ManagerSQL sql = new ManagerSQL();
            sql.setTabela("jsysSubConta inner join jsysContas on jsysContas.idConta = jsysSubConta.idConta ");
            sql.setCampos(campos);
            ResultSet x = DADOS.execSQL(sql.getSQL(consultaTF.getText()));
            // Definição do TableModel
            DefaultTableModel aModel = new DefaultTableModel(
                    new Object[][]{},
                    new String[]{"Codigo Sub Conta", "Descrição Sub Conta", "Codigo Conta", "Descrição Conta"}) {
                        @Override
                        public boolean isCellEditable(int row, int column) {
                            return false;
                        }
                    };
            java.sql.ResultSetMetaData rsmd = x.getMetaData();
            int colNo = rsmd.getColumnCount();
            while (x.next()) {
                Object[] objects = new Object[colNo];
                for (int i = 0; i < colNo; i++) {
                    objects[i] = x.getObject(i + 1);
                }
                aModel.addRow(objects);
            }
            jTable1.setModel(aModel);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(250);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(250);
            jTable1.setDefaultRenderer(Object.class, new br.sql.defaultTableCellRenderer.Zebrado());
        } catch (SQLException e) {
            Log.registraErro(this, "falha ao acionar a consulta", e);
        }
    }

    private JsysSubConta registroAtual;

    /**
     * Get the value of registroAtual
     *
     * @return the value of registroAtual
     */
    public JsysSubConta getRegistroAtual() {
        return registroAtual;
    }
    private boolean confirma;

    /**
     * Get the value of confirma
     *
     * @return the value of confirma
     */
    public boolean isConfirma() {
        return confirma;
    }
}
