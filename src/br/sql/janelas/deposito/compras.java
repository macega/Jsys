package br.sql.janelas.deposito;

import br.sql.acesso.ConnectionFactory;
import br.sql.acesso.SQLDatabaseConnection;
import br.sql.bean.JsysClientes;
import br.sql.bean.JsysCompras;
import br.sql.bean.JsysComprasItens;
import br.sql.bean.JsysComprasItensPK;
import br.sql.bean.JsysLojas;
import br.sql.bean.JsysParametros;
import br.sql.bean.JsysProdutosT;
import br.sql.bean.JsysProdutosTPrecos;
import br.sql.bean.Natureza;
import br.sql.bean.Ncm;
import br.sql.bean.views.JsysIdProdutos;
import br.sql.nfe.Janelas.NfeManifestacao;
import br.sql.nfe.links.ConstantesFiscal;
import br.sql.log.Log;
import br.sql.util.ManagerData;
import br.sql.util.ManagerDecimal;
import br.sql.util.Progress;
import br.sql.util.Retorna;
import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.concurrent.ExecutionException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingWorker;

/**
 *
 * @author Juliano Alves Medina
 */
public class compras extends JPanel {

    private JsysProdutosTPrecos produtoAtual;
    private static final SQLDatabaseConnection DADOS = new SQLDatabaseConnection();
    private static final JsysParametros PAR = Retorna.JsysParametros();

    public compras() {
        initComponents();
        for (Object O : Retorna.findList("JsysClientes.findAllFornecedore")) {
            JsysClientes c = (JsysClientes) O;
            fornecedoruJCB.addItem(c.getNomeCorentista() + " - " + c.getIdCliente().toString(), c);
            filtroClienteCB.addItem(c.getNomeCorentista() + " - " + c.getCnpjCpf(), c);
        }
        for (Object O : Retorna.findList("Natureza.findAll")) {
            Natureza n = (Natureza) O;
            cfopProdutouCB.addItem(n.getCfop(), n);
            cfopStuCB.addItem(n.getCfop(), n);
            cfopuCB.addItem(n.getCfop(), n);
        }
        List<Object> N = Retorna.findList("Ncm.findAll");
        for (Object n : N) {
            Ncm ncm = (Ncm) n;
            uJComboBoxNCM.addItem(ncm.getCodigo() + " - " + ncm.getDescricao(), ncm);
        }
        for (Object O : Retorna.findList("JsysLojas.findAll")) {
            JsysLojas l = (JsysLojas) O;
            uJComboBoxLojas.addItem(l.getNomeLoja() + " - " + l.getCnpj(), l);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        query = java.beans.Beans.isDesignTime() ? null : ConnectionFactory.getEntityManagerNew().createQuery("SELECT j FROM JsysCompras j WHERE j.confirmado = false");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        compraAtual = null;
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        codigoCompraTF = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        listaCompras = new javax.swing.JPanel();
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        newButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        filtroTodosCKB = new javax.swing.JCheckBox();
        filtroClienteCB = new componentes.UJComboBox();
        filtroEmAbertoCKB = new javax.swing.JCheckBox();
        dataInicial = new com.toedter.calendar.JDateChooser();
        jLabel33 = new javax.swing.JLabel();
        dataFinal = new com.toedter.calendar.JDateChooser();
        jLabel34 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        compra = new javax.swing.JPanel();
        detailScrollPane = new javax.swing.JScrollPane();
        detailTable = new javax.swing.JTable();
        deleteDetailButton = new javax.swing.JButton();
        jTextFieldchaveAcesso = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        dataTF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        fornecedoruJCB = new componentes.UJComboBox();
        jLabel4 = new javax.swing.JLabel();
        numeroNFeTF = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        modTF = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        serieTF = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cfopuCB = new componentes.UJComboBox();
        jLabel8 = new javax.swing.JLabel();
        cfopStuCB = new componentes.UJComboBox();
        jLabel9 = new javax.swing.JLabel();
        dataChegadajDC = new com.toedter.calendar.JDateChooser();
        jLabel13 = new javax.swing.JLabel();
        baseCalculoIcmsTF = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        valorIcmsTF = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        baseCalculoIcmsStTF = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        valorIcmsStTF = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        valorFrete = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        valorSeguroTF = new javax.swing.JTextField();
        valorDescontoTF = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        valorIITF = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        valorIpiTF = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        valorPisTF = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        valorCofinsTF = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        valorOutrosTF = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        totalProdutosTF = new javax.swing.JTextField();
        totalNFeTF = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        obsTxA = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        codigoProdutoTF = new javax.swing.JTextField();
        nomeProdutoTF = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        quantidadeProdutoTF = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        precoCompraProdutoTF = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        precoVendaProdutosTF = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        cfopProdutouCB = new componentes.UJComboBox();
        uJComboBoxNCM = new componentes.UJComboBox();
        jButton4 = new javax.swing.JButton();
        jLabel32 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        uJComboBoxLojas = new componentes.UJComboBox();
        jLabel31 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();

        FormListener formListener = new FormListener();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Compras");
        jLabel1.setToolTipText("");

        codigoCompraTF.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        codigoCompraTF.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        codigoCompraTF.setToolTipText("");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, compraAtual, org.jdesktop.beansbinding.ELProperty.create("${idCompra}"), codigoCompraTF, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(codigoCompraTF, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(codigoCompraTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addChangeListener(formListener);

        masterTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        masterTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        masterTable.setRowHeight(24);
        masterTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idCompra}"));
        columnBinding.setColumnName("Código");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${data}"));
        columnBinding.setColumnName("Data");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idCorentista.nomeCorentista}"));
        columnBinding.setColumnName("Fornecedor");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nNFe}"));
        columnBinding.setColumnName("Nº NFe");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${modNFe}"));
        columnBinding.setColumnName("Mod");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${serieNFe}"));
        columnBinding.setColumnName("Serie");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cfop}"));
        columnBinding.setColumnName("Cfop");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cfopSub}"));
        columnBinding.setColumnName("Cfop Sub");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dataChegada}"));
        columnBinding.setColumnName("Data Chegada");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valorBC}"));
        columnBinding.setColumnName("Valor BC");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valorICMS}"));
        columnBinding.setColumnName("Valor ICMS");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valorBCST}"));
        columnBinding.setColumnName("Valor BCST");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valorST}"));
        columnBinding.setColumnName("Valor ST");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valorProd}"));
        columnBinding.setColumnName("Valor Prod");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valorFrete}"));
        columnBinding.setColumnName("Valor Frete");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valorSeg}"));
        columnBinding.setColumnName("Valor Seg");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valorDesc}"));
        columnBinding.setColumnName("Valor Desc");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valorII}"));
        columnBinding.setColumnName("Valor II");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valorIPI}"));
        columnBinding.setColumnName("Valor IPI");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valorPIS}"));
        columnBinding.setColumnName("Valor PIS");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valorCOFINS}"));
        columnBinding.setColumnName("Valor COFINS");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valorOutro}"));
        columnBinding.setColumnName("Valor Outro");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valorNF}"));
        columnBinding.setColumnName("Valor NF");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valorTotTrib}"));
        columnBinding.setColumnName("Valor Tot Trib");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${obs}"));
        columnBinding.setColumnName("Obs");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${confirmado}"));
        columnBinding.setColumnName("Confirmado");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cancelado}"));
        columnBinding.setColumnName("Cancelado");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dataCancelado}"));
        columnBinding.setColumnName("Data Cancelado");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dataInclusao}"));
        columnBinding.setColumnName("Data Inclusao");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${usuarioInclusao}"));
        columnBinding.setColumnName("Usuario Inclusao");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dataAlteracao}"));
        columnBinding.setColumnName("Data Alteracao");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${usuarioAlteracao}"));
        columnBinding.setColumnName("Usuario Alteracao");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterScrollPane.setViewportView(masterTable);
        if (masterTable.getColumnModel().getColumnCount() > 0) {
            masterTable.getColumnModel().getColumn(1).setPreferredWidth(100);
            masterTable.getColumnModel().getColumn(2).setPreferredWidth(360);
            masterTable.getColumnModel().getColumn(29).setPreferredWidth(200);
        }

        newButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        newButton.setForeground(new java.awt.Color(0, 153, 0));
        newButton.setText("Nova");
        newButton.addActionListener(formListener);

        deleteButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(204, 0, 0));
        deleteButton.setText("Cancelar");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), deleteButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        deleteButton.addActionListener(formListener);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 153, 0));
        jButton2.setText("Editar");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jButton2, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jButton2.addActionListener(formListener);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtro"));

        jButton3.setText("Filtrar");
        jButton3.addActionListener(formListener);

        filtroTodosCKB.setSelected(true);
        filtroTodosCKB.setText("Todos");
        filtroTodosCKB.setToolTipText("");
        filtroTodosCKB.addItemListener(formListener);

        filtroClienteCB.setToolTipText("");
        filtroClienteCB.setAutocompletar(true);
        filtroClienteCB.setEnabled(false);

        filtroEmAbertoCKB.setSelected(true);
        filtroEmAbertoCKB.setText("Em aberto");

        dataInicial.setDate(ManagerData.sumDays(ManagerData.getDate(), -14)
        );

        jLabel33.setText("Data Inicial");
        jLabel33.setToolTipText("");

        dataFinal.setDate(ManagerData.getDate());

        jLabel34.setText("Data Final");
        jLabel34.setToolTipText("");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(filtroClienteCB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(filtroEmAbertoCKB)
                        .addGap(18, 18, 18)
                        .addComponent(filtroTodosCKB)
                        .addGap(18, 18, 18)
                        .addComponent(dataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel33)
                        .addGap(18, 18, 18)
                        .addComponent(dataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel34)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(filtroTodosCKB)
                        .addComponent(filtroEmAbertoCKB))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel33, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dataInicial, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel34, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dataFinal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filtroClienteCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(204, 0, 0));
        jButton5.setText("Reabrir");
        jButton5.addActionListener(formListener);

        javax.swing.GroupLayout listaComprasLayout = new javax.swing.GroupLayout(listaCompras);
        listaCompras.setLayout(listaComprasLayout);
        listaComprasLayout.setHorizontalGroup(
            listaComprasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listaComprasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(listaComprasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 975, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listaComprasLayout.createSequentialGroup()
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(newButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        listaComprasLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {deleteButton, newButton});

        listaComprasLayout.setVerticalGroup(
            listaComprasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listaComprasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(listaComprasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newButton)
                    .addComponent(deleteButton)
                    .addComponent(jButton2)
                    .addComponent(jButton5))
                .addGap(16, 16, 16))
        );

        newButton.getAccessibleContext().setAccessibleDescription("");
        deleteButton.getAccessibleContext().setAccessibleDescription("");
        jButton2.getAccessibleContext().setAccessibleDescription("");

        jTabbedPane1.addTab("Lista Compras", null, listaCompras, "");

        detailTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        detailTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        detailTable.setRowHeight(24);

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${selectedElement.jsysComprasItensList}");
        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, eLProperty, detailTable);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${jsysComprasItensPK.idProduto}"));
        columnBinding.setColumnName("Código");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${jsysProdutosT.nomeProduto}"));
        columnBinding.setColumnName("Descrição");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${unidadeVenda}"));
        columnBinding.setColumnName("Und Venda");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${unidadeCompra}"));
        columnBinding.setColumnName("Und Compra");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${quantidade}"));
        columnBinding.setColumnName("Quantidade");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${precoCompra}"));
        columnBinding.setColumnName("Preço Compra");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${totalCompra}"));
        columnBinding.setColumnName("Total Compra");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${precoVenda}"));
        columnBinding.setColumnName("Preço Venda");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        jTableBinding.setSourceUnreadableValue(java.util.Collections.emptyList());
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), detailTable, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        detailScrollPane.setViewportView(detailTable);
        if (detailTable.getColumnModel().getColumnCount() > 0) {
            detailTable.getColumnModel().getColumn(1).setPreferredWidth(360);
            detailTable.getColumnModel().getColumn(2).setPreferredWidth(70);
            detailTable.getColumnModel().getColumn(3).setPreferredWidth(70);
            detailTable.getColumnModel().getColumn(4).setPreferredWidth(90);
            detailTable.getColumnModel().getColumn(5).setPreferredWidth(90);
            detailTable.getColumnModel().getColumn(6).setPreferredWidth(100);
            detailTable.getColumnModel().getColumn(7).setPreferredWidth(90);
        }

        deleteDetailButton.setText("Delete Produto");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, detailTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), deleteDetailButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        deleteDetailButton.addActionListener(formListener);

        jTextFieldchaveAcesso.setDocument(new br.sql.plainDocument.IntegerDocument(44)
        );

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), jTextFieldchaveAcesso, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel2.setText("Data:");

        dataTF.setEditable(false);
        dataTF.setBackground(new java.awt.Color(204, 255, 204));
        dataTF.setText(br.sql.util.ManagerData.getDataAtualTypeString());
        dataTF.setToolTipText("");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), dataTF, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel3.setText("Fornecedor:");
        jLabel3.setToolTipText("");

        fornecedoruJCB.setAutocompletar(true);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), fornecedoruJCB, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel4.setText("Nº NF-e:");
        jLabel4.setToolTipText("");

        numeroNFeTF.setDocument(new br.sql.plainDocument.IntegerDocument(9)
        );
        numeroNFeTF.setToolTipText("");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), numeroNFeTF, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel5.setText("Mod:");

        modTF.setDocument(new br.sql.plainDocument.IntegerDocument(2));
        modTF.setText("55");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), modTF, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel6.setText("Serie:");
        jLabel6.setToolTipText("");

        serieTF.setDocument(new br.sql.plainDocument.IntegerDocument(3));
        serieTF.setText("001");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), serieTF, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel7.setText("CFOP:");
        jLabel7.setToolTipText("");

        cfopuCB.setAutocompletar(true);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), cfopuCB, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel8.setText("CFOP sub:");

        cfopStuCB.setAutocompletar(true);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), cfopStuCB, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel9.setText("Data Chegada:");
        jLabel9.setToolTipText("");

        dataChegadajDC.setDate(ManagerData.getDate());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), dataChegadajDC, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel13.setText("Base de Calculo:");

        baseCalculoIcmsTF.setDocument(new br.sql.plainDocument.DoubleDocument());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), baseCalculoIcmsTF, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel14.setText("Valor do ICMS:");
        jLabel14.setToolTipText("");

        valorIcmsTF.setDocument(new br.sql.plainDocument.DoubleDocument());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), valorIcmsTF, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel15.setText("Base de Calculo ST:");
        jLabel15.setToolTipText("");

        baseCalculoIcmsStTF.setDocument(new br.sql.plainDocument.DoubleDocument());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), baseCalculoIcmsStTF, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel16.setText("Valor ICMS ST:");
        jLabel16.setToolTipText("");

        valorIcmsStTF.setDocument(new br.sql.plainDocument.DoubleDocument());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), valorIcmsStTF, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel17.setText("Valor Frete:");

        valorFrete.setDocument(new br.sql.plainDocument.DoubleDocument());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), valorFrete, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel18.setText("Valor Seguro:");
        jLabel18.setToolTipText("");

        valorSeguroTF.setDocument(new br.sql.plainDocument.DoubleDocument());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), valorSeguroTF, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        valorDescontoTF.setDocument(new br.sql.plainDocument.DoubleDocument());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), valorDescontoTF, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel20.setText("Valor II:");
        jLabel20.setToolTipText("");

        valorIITF.setDocument(new br.sql.plainDocument.DoubleDocument());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), valorIITF, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel21.setText("Valor IPI:");
        jLabel21.setToolTipText("");

        valorIpiTF.setDocument(new br.sql.plainDocument.DoubleDocument());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), valorIpiTF, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel22.setText("Valor PIS:");
        jLabel22.setToolTipText("");

        valorPisTF.setDocument(new br.sql.plainDocument.DoubleDocument());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), valorPisTF, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel23.setText("Valor COFINS:");

        valorCofinsTF.setDocument(new br.sql.plainDocument.DoubleDocument());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), valorCofinsTF, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel24.setText("Valor Outros:");
        jLabel24.setToolTipText("");

        valorOutrosTF.setDocument(new br.sql.plainDocument.DoubleDocument());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), valorOutrosTF, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel25.setText("Total dos Produtos:");

        totalProdutosTF.setDocument(new br.sql.plainDocument.DoubleDocument());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), totalProdutosTF, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        totalNFeTF.setDocument(new br.sql.plainDocument.DoubleDocument());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), totalNFeTF, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel26.setText("Total da NF-e:");
        jLabel26.setToolTipText("");

        jLabel10.setText("Obs:");
        jLabel10.setToolTipText("");

        obsTxA.setColumns(20);
        obsTxA.setRows(5);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), obsTxA, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(obsTxA);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Produtos"));

        jLabel11.setText("Codigo:");
        jLabel11.setToolTipText("");

        codigoProdutoTF.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        codigoProdutoTF.setToolTipText("");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), codigoProdutoTF, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        codigoProdutoTF.addKeyListener(formListener);

        nomeProdutoTF.setEditable(false);
        nomeProdutoTF.setBackground(new java.awt.Color(153, 255, 204));
        nomeProdutoTF.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nomeProdutoTF.setFocusable(false);

        jLabel12.setText("Quant:");
        jLabel12.setToolTipText("");

        quantidadeProdutoTF.setDocument(new br.sql.plainDocument.IntegerDocument());
        quantidadeProdutoTF.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        quantidadeProdutoTF.setToolTipText("");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), quantidadeProdutoTF, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        quantidadeProdutoTF.addKeyListener(formListener);

        jLabel27.setText("Preço Compra:");
        jLabel27.setToolTipText("");

        precoCompraProdutoTF.setDocument(new br.sql.plainDocument.DoubleDocument());
        precoCompraProdutoTF.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        precoCompraProdutoTF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        precoCompraProdutoTF.setToolTipText("");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), precoCompraProdutoTF, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel28.setText("Preço Venda:");
        jLabel28.setToolTipText("");

        precoVendaProdutosTF.setEditable(false);
        precoVendaProdutosTF.setBackground(new java.awt.Color(153, 255, 204));
        precoVendaProdutosTF.setDocument(new br.sql.plainDocument.DoubleDocument());
        precoVendaProdutosTF.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        precoVendaProdutosTF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        precoVendaProdutosTF.setToolTipText("");
        precoVendaProdutosTF.setFocusable(false);

        jLabel29.setText("NCM:");
        jLabel29.setToolTipText("");

        jLabel30.setText("CFOP:");
        jLabel30.setToolTipText("");

        cfopProdutouCB.setAutocompletar(true);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), cfopProdutouCB, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        cfopProdutouCB.addKeyListener(formListener);

        uJComboBoxNCM.setAutocompletar(true);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), uJComboBoxNCM, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        uJComboBoxNCM.addKeyListener(formListener);

        jButton4.setText("Incluir Item");
        jButton4.setToolTipText("");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), jButton4, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jButton4.addActionListener(formListener);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel29)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel11)
                        .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addComponent(quantidadeProdutoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(precoCompraProdutoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(precoVendaProdutosTF, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(117, 117, 117)
                        .addComponent(jButton4)
                        .addContainerGap())
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(codigoProdutoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nomeProdutoTF))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addComponent(uJComboBoxNCM, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel30)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cfopProdutouCB, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(codigoProdutoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nomeProdutoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel28)
                        .addComponent(precoVendaProdutosTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(quantidadeProdutoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel27)
                        .addComponent(precoCompraProdutoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jLabel30)
                    .addComponent(cfopProdutouCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(uJComboBoxNCM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 1, Short.MAX_VALUE))
        );

        jLabel32.setText("Valor Desconto:");
        jLabel32.setToolTipText("");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(51, 51, 255));
        jButton1.setText("Fechar");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), jButton1, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jButton1.addActionListener(formListener);

        jLabel19.setText("Loja:");
        jLabel19.setToolTipText("");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.confirmado == false}"), uJComboBoxLojas, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel31.setText("Chave de Acesso");
        jLabel31.setToolTipText("");

        jButton6.setText("Consultar NF-e");
        jButton6.setEnabled(false);
        jButton6.addActionListener(formListener);

        javax.swing.GroupLayout compraLayout = new javax.swing.GroupLayout(compra);
        compra.setLayout(compraLayout);
        compraLayout.setHorizontalGroup(
            compraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(compraLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(compraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, compraLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fornecedoruJCB, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numeroNFeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(modTF, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(serieTF, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dataTF, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(detailScrollPane)
                    .addGroup(compraLayout.createSequentialGroup()
                        .addComponent(deleteDetailButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(compraLayout.createSequentialGroup()
                        .addGroup(compraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(compraLayout.createSequentialGroup()
                                .addGroup(compraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(compraLayout.createSequentialGroup()
                                        .addComponent(jLabel32)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(valorDescontoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(compraLayout.createSequentialGroup()
                                        .addGroup(compraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(compraLayout.createSequentialGroup()
                                                .addComponent(jLabel18)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(valorSeguroTF, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(compraLayout.createSequentialGroup()
                                                .addComponent(jLabel13)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(baseCalculoIcmsTF, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(compraLayout.createSequentialGroup()
                                                .addComponent(jLabel20)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(valorIITF, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(18, 18, 18)
                                        .addGroup(compraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(compraLayout.createSequentialGroup()
                                                .addComponent(jLabel14)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(valorIcmsTF, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, compraLayout.createSequentialGroup()
                                                .addComponent(jLabel22)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(valorPisTF, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(18, 18, 18)
                                .addGroup(compraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(compraLayout.createSequentialGroup()
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(baseCalculoIcmsStTF, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(compraLayout.createSequentialGroup()
                                        .addComponent(jLabel24)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(valorOutrosTF, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(compraLayout.createSequentialGroup()
                                        .addComponent(jLabel23)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(valorCofinsTF, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(compraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(compraLayout.createSequentialGroup()
                                        .addComponent(jLabel16)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(valorIcmsStTF, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(compraLayout.createSequentialGroup()
                                        .addComponent(jLabel21)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(valorIpiTF, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(compraLayout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(valorFrete, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(compraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(compraLayout.createSequentialGroup()
                                .addGroup(compraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addGroup(compraLayout.createSequentialGroup()
                                        .addGroup(compraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel26)
                                            .addComponent(jLabel25))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(compraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(totalProdutosTF, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(totalNFeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(compraLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cfopuCB, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cfopStuCB, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dataChegadajDC, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(uJComboBoxLojas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(compraLayout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldchaveAcesso, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        compraLayout.setVerticalGroup(
            compraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(compraLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(compraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(jTextFieldchaveAcesso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(compraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(dataTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(fornecedoruJCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(numeroNFeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(modTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(serieTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(compraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(compraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(cfopuCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)
                        .addComponent(cfopStuCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9))
                    .addComponent(dataChegadajDC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(compraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(uJComboBoxLojas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel19)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(compraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(baseCalculoIcmsTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(valorIcmsTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(baseCalculoIcmsStTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(valorIcmsStTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(totalProdutosTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(compraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(valorSeguroTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(valorDescontoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valorOutrosTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(valorIpiTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(totalNFeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26)
                    .addComponent(jLabel32))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(compraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(valorIITF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(valorPisTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(valorCofinsTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(valorFrete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(compraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(detailScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(compraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteDetailButton)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Compra", null, compra, "");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("itenstab");
        jTabbedPane1.getAccessibleContext().setAccessibleDescription("");

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.ItemListener, java.awt.event.KeyListener, javax.swing.event.ChangeListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == newButton) {
                compras.this.newButtonActionPerformed(evt);
            }
            else if (evt.getSource() == deleteButton) {
                compras.this.deleteButtonActionPerformed(evt);
            }
            else if (evt.getSource() == jButton2) {
                compras.this.jButton2ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton3) {
                compras.this.jButton3ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton5) {
                compras.this.jButton5ActionPerformed(evt);
            }
            else if (evt.getSource() == deleteDetailButton) {
                compras.this.deleteDetailButtonActionPerformed(evt);
            }
            else if (evt.getSource() == jButton4) {
                compras.this.jButton4ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton1) {
                compras.this.jButton1ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton6) {
                compras.this.jButton6ActionPerformed(evt);
            }
        }

        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            if (evt.getSource() == filtroTodosCKB) {
                compras.this.filtroTodosCKBItemStateChanged(evt);
            }
        }

        public void keyPressed(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == codigoProdutoTF) {
                compras.this.codigoProdutoTFKeyPressed(evt);
            }
            else if (evt.getSource() == quantidadeProdutoTF) {
                compras.this.quantidadeProdutoTFKeyPressed(evt);
            }
            else if (evt.getSource() == cfopProdutouCB) {
                compras.this.cfopProdutouCBKeyPressed(evt);
            }
            else if (evt.getSource() == uJComboBoxNCM) {
                compras.this.uJComboBoxNCMKeyPressed(evt);
            }
        }

        public void keyReleased(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == codigoProdutoTF) {
                compras.this.codigoProdutoTFKeyReleased(evt);
            }
        }

        public void keyTyped(java.awt.event.KeyEvent evt) {
        }

        public void stateChanged(javax.swing.event.ChangeEvent evt) {
            if (evt.getSource() == jTabbedPane1) {
                compras.this.jTabbedPane1StateChanged(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        final Progress p = new Progress();
        SwingWorker work = new SwingWorker() {

            @Override
            protected Integer doInBackground() throws Exception {
                try {
                    if (compraAtual.getIdCompra() == null) {
                        setValues();
                        compraAtual.setCancelado(true);
                        ConnectionFactory.insert(compraAtual);
                        codigoCompraTF.setText(compraAtual.getIdCompra().toString());
                    } else {
                        setValues();
                        compraAtual.setCancelado(true);
                        ConnectionFactory.update(compraAtual);
                    }
                    return DADOS.execProcudureRetInt("recontaEstoque");
                } catch (Exception e) {
                    return 1;
                }
            }

            @Override
            protected void done() {
                super.done();
                p.setVisible(false);
                try {
                    if (Integer.parseInt(get().toString()) == 0) {
                        JOptionPane.showMessageDialog(null, "Compra CANCELADA ", "MENSAGEM", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Erro Inesperado no Programa", "ERRO", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (InterruptedException | ExecutionException e) {
                    Log.registraErro(this.getClass().getName(), "deleteButtonActionPerformed", e);
                }
            }
        };
        work.execute();
        p.setVisible(true);
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        JsysCompras J = new JsysCompras();
        //JsysClientes cliente = ;
        //cliente.setNomeCorentista("Selecione um Fornecedor");
        JsysLojas loja = (JsysLojas) Retorna.findOneResult("JsysLojas.findAll");
        J.setIdCorentista(Retorna.jsysClientes(PAR.getIdForncedor()));
        J.setIdloja(loja);
        J.setData(ManagerData.getDate());
        J.setValorBC(BigDecimal.ZERO);
        J.setValorBCST(BigDecimal.ZERO);
        J.setValorCOFINS(BigDecimal.ZERO);
        J.setValorDesc(BigDecimal.ZERO);
        J.setValorFrete(BigDecimal.ZERO);
        J.setValorICMS(BigDecimal.ZERO);
        J.setValorII(BigDecimal.ZERO);
        J.setValorIPI(BigDecimal.ZERO);
        J.setValorNF(BigDecimal.ZERO);
        J.setValorOutro(BigDecimal.ZERO);
        J.setValorPIS(BigDecimal.ZERO);
        J.setValorProd(BigDecimal.ZERO);
        J.setValorST(BigDecimal.ZERO);
        J.setValorSeg(BigDecimal.ZERO);
        J.setValorTotTrib(BigDecimal.ZERO);
        J.setSerieNFe("001");
        J.setModNFe(String.valueOf(ConstantesFiscal.NF_E));
        J.setCfop("2.102");
        J.setCfopSub("2.102");
        J.setUsuarioInclusao(jsys.sql.Menu.getNomeUsuario());
        J.setDataInclusao(ManagerData.getDate());
        setCompraAtual(J);
        list.add(J);
        int row = list.size() - 1;
        masterTable.setRowSelectionInterval(row, row);
        masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
        jTabbedPane1.setSelectedComponent(this.compra);
        jTextFieldchaveAcesso.requestFocus();
    }//GEN-LAST:event_newButtonActionPerformed

    private void deleteDetailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDetailButtonActionPerformed
        int index = masterTable.getSelectedRow();
        Collection<JsysComprasItens> js = compraAtual.getJsysComprasItensList();
        int[] selected = detailTable.getSelectedRows();
        List<JsysComprasItens> toRemove = new ArrayList<>(selected.length);
        for (int idx = 0; idx < selected.length; idx++) {
            selected[idx] = detailTable.convertRowIndexToModel(selected[idx]);
            int count = 0;
            Iterator<JsysComprasItens> iter = js.iterator();
            while (count++ < selected[idx]) {
                iter.next();
            }
            JsysComprasItens j = iter.next();
            toRemove.add(j);
            JsysComprasItens jcr = (JsysComprasItens) ConnectionFactory.update(j);
            ConnectionFactory.delete(jcr);
        }
        js.removeAll(toRemove);
        masterTable.clearSelection();
        masterTable.setRowSelectionInterval(index, index);
    }//GEN-LAST:event_deleteDetailButtonActionPerformed

    private void quantidadeProdutoTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantidadeProdutoTFKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            insereItem();
        }
    }//GEN-LAST:event_quantidadeProdutoTFKeyPressed

    private void codigoProdutoTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoProdutoTFKeyReleased
        setProduto();
    }//GEN-LAST:event_codigoProdutoTFKeyReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int[] selected = masterTable.getSelectedRows();
        for (int idx = 0; idx < selected.length; idx++) {
            setCompraAtual(list.get(masterTable.convertRowIndexToModel(selected[idx])));
        }
        jTabbedPane1.setSelectedComponent(this.compra);
        jTextFieldchaveAcesso.requestFocus();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        int[] selected = masterTable.getSelectedRows();
        for (int idx = 0; idx < selected.length; idx++) {
            setCompraAtual(list.get(masterTable.convertRowIndexToModel(selected[idx])));
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        list.clear();
        Map<Object, Object> filtro = new HashMap<>();
        filtro.put("dataInicial", dataInicial.getDate());
        filtro.put("dataFinal", dataFinal.getDate());
        filtro.put("confirmado", !filtroEmAbertoCKB.isSelected());
        if (filtroTodosCKB.isSelected()) {
            for (Object O : Retorna.findList("JsysCompras.findByConfirmado", filtro)) {
                JsysCompras c = (JsysCompras) O;
                list.add(c);
            }
        } else {
            filtro.put("idCorentista", getfiltroClienteCB().getIdCliente());
            for (Object O : Retorna.findList("JsysCompras.findByIdCorentistaAndConfirmado", filtro)) {
                JsysCompras c = (JsysCompras) O;
                list.add(c);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void filtroTodosCKBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_filtroTodosCKBItemStateChanged
        if (filtroTodosCKB.isSelected()) {
            filtroClienteCB.setEnabled(false);
            filtroClienteCB.setSelectedIndex(0);
        } else {
            filtroClienteCB.setEnabled(true);
        }
    }//GEN-LAST:event_filtroTodosCKBItemStateChanged

    private void codigoProdutoTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoProdutoTFKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            quantidadeProdutoTF.requestFocus();
        }
    }//GEN-LAST:event_codigoProdutoTFKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        final Progress p = new Progress();
        SwingWorker work = new SwingWorker() {

            @Override
            protected Integer doInBackground() throws Exception {
                try {
                    if (compraAtual.getIdCompra() == null) {
                        setValues();
                        compraAtual.setConfirmado(true);
                        ConnectionFactory.insert(compraAtual);
                        codigoCompraTF.setText(compraAtual.getIdCompra().toString());
                    } else {
                        setValues();
                        compraAtual.setConfirmado(true);
                        ConnectionFactory.update(compraAtual);
                    }
                    return DADOS.execProcudureRetInt("recontaEstoque");
                } catch (Exception ignore) {
                    return 1;
                }
            }

            @Override
            protected void done() {
                super.done();
                p.setVisible(false);
                try {
                    if (Integer.parseInt(get().toString()) == 0) {
                        JOptionPane.showMessageDialog(null, "Compra Fechada com Sucesso", "MENSAGEM", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Erro Inesperado no Programa", "ERRO", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (InterruptedException | ExecutionException e) {
                    Log.registraErro(this.getClass().getName(), "jButton1ActionPerformed", e);
                }
            }
        };
        work.execute();
        p.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        insereItem();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void uJComboBoxNCMKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uJComboBoxNCMKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            insereItem();
        }
    }//GEN-LAST:event_uJComboBoxNCMKeyPressed

    private void cfopProdutouCBKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cfopProdutouCBKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            insereItem();
        }
    }//GEN-LAST:event_cfopProdutouCBKeyPressed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int[] selected = masterTable.getSelectedRows();
        for (int idx = 0; idx < selected.length; idx++) {
            setCompraAtual(list.get(masterTable.convertRowIndexToModel(selected[idx])));
        }
        jTabbedPane1.setSelectedComponent(this.compra);
        jTextFieldchaveAcesso.requestFocus();

        final Progress p = new Progress();
        SwingWorker work = new SwingWorker() {

            @Override
            protected Integer doInBackground() throws Exception {
                try {
                    if (compraAtual.getIdCompra() == null) {
                        setValues();
                        compraAtual.setCancelado(false);
                        compraAtual.setConfirmado(false);
                        ConnectionFactory.insert(compraAtual);
                        codigoCompraTF.setText(compraAtual.getIdCompra().toString());
                    } else {
                        setValues();
                        compraAtual.setCancelado(false);
                        compraAtual.setConfirmado(false);
                        ConnectionFactory.update(compraAtual);
                    }
                    return DADOS.execProcudureRetInt("recontaEstoque");
                } catch (Exception e) {
                    return 1;
                }
            }

            @Override
            protected void done() {
                super.done();
                p.setVisible(false);
                try {
                    if (Integer.parseInt(get().toString()) == 0) {
                        JOptionPane.showMessageDialog(null, "Compra REABERTA", "MENSAGEM", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Erro Inesperado no Programa", "ERRO", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (InterruptedException | ExecutionException e) {
                    Log.registraErro(this.getClass().getName(), "jButton5ActionPerformed", e);
                }
            }
        };
        work.execute();
        p.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        NfeManifestacao man = new NfeManifestacao(new Frame(), true, jTextFieldchaveAcesso.getText());
        man.setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField baseCalculoIcmsStTF;
    private javax.swing.JTextField baseCalculoIcmsTF;
    private componentes.UJComboBox cfopProdutouCB;
    private componentes.UJComboBox cfopStuCB;
    private componentes.UJComboBox cfopuCB;
    private javax.swing.JLabel codigoCompraTF;
    private javax.swing.JTextField codigoProdutoTF;
    private javax.swing.JPanel compra;
    private br.sql.bean.JsysCompras compraAtual;
    private com.toedter.calendar.JDateChooser dataChegadajDC;
    private com.toedter.calendar.JDateChooser dataFinal;
    private com.toedter.calendar.JDateChooser dataInicial;
    private javax.swing.JTextField dataTF;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton deleteDetailButton;
    private javax.swing.JScrollPane detailScrollPane;
    private javax.swing.JTable detailTable;
    private componentes.UJComboBox filtroClienteCB;
    private javax.swing.JCheckBox filtroEmAbertoCKB;
    private javax.swing.JCheckBox filtroTodosCKB;
    private componentes.UJComboBox fornecedoruJCB;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextFieldchaveAcesso;
    private java.util.List<JsysCompras> list;
    private javax.swing.JPanel listaCompras;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private javax.swing.JTextField modTF;
    private javax.swing.JButton newButton;
    private javax.swing.JTextField nomeProdutoTF;
    private javax.swing.JTextField numeroNFeTF;
    private javax.swing.JTextArea obsTxA;
    private javax.swing.JTextField precoCompraProdutoTF;
    private javax.swing.JTextField precoVendaProdutosTF;
    private javax.swing.JTextField quantidadeProdutoTF;
    private javax.persistence.Query query;
    private javax.swing.JTextField serieTF;
    private javax.swing.JTextField totalNFeTF;
    private javax.swing.JTextField totalProdutosTF;
    private componentes.UJComboBox uJComboBoxLojas;
    private componentes.UJComboBox uJComboBoxNCM;
    private javax.swing.JTextField valorCofinsTF;
    private javax.swing.JTextField valorDescontoTF;
    private javax.swing.JTextField valorFrete;
    private javax.swing.JTextField valorIITF;
    private javax.swing.JTextField valorIcmsStTF;
    private javax.swing.JTextField valorIcmsTF;
    private javax.swing.JTextField valorIpiTF;
    private javax.swing.JTextField valorOutrosTF;
    private javax.swing.JTextField valorPisTF;
    private javax.swing.JTextField valorSeguroTF;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private JsysLojas getuJComboBoxLojas() {
        return (JsysLojas) uJComboBoxLojas.getSelectedObject();
    }

    private Natureza getcfopProdutouCB() {
        return (Natureza) cfopProdutouCB.getSelectedObject();
    }

    private void setCampos() {
        //fornecedoruJCB.setSelectedItem(compraAtual.getIdCorentista().getNomeCorentista() + " - " + compraAtual.getIdCorentista().getIdCliente().toString());
        uJComboBoxLojas.setSelectedItem(compraAtual.getIdloja().getNomeLoja() + " - " + compraAtual.getIdloja().getCnpj());
        numeroNFeTF.setText(String.valueOf(compraAtual.getnNFe()));
        cfopuCB.setSelectedItem(compraAtual.getCfop());
        cfopStuCB.setSelectedItem(compraAtual.getCfopSub());
        modTF.setText(compraAtual.getModNFe());
        serieTF.setText(compraAtual.getSerieNFe());
        dataTF.setText(ManagerData.convertDate(compraAtual.getData(), "dd/MM/yyyy"));
        dataChegadajDC.setDate(compraAtual.getDataChegada());
        baseCalculoIcmsTF.setText(ManagerDecimal.converter(compraAtual.getValorBC(), "#,##0.00"));
        valorIcmsTF.setText(ManagerDecimal.converter(compraAtual.getValorICMS(), "#,##0.00").replace(",", "").replace(".", ""));
        baseCalculoIcmsStTF.setText(ManagerDecimal.converter(compraAtual.getValorBCST(), "#,##0.00").replace(",", "").replace(".", ""));
        valorIcmsStTF.setText(ManagerDecimal.converter(compraAtual.getValorST(), "#,##0.00").replace(",", "").replace(".", ""));
        totalProdutosTF.setText(ManagerDecimal.converter(compraAtual.getValorProd(), "#,##0.00").replace(",", "").replace(".", ""));
        valorSeguroTF.setText(ManagerDecimal.converter(compraAtual.getValorSeg(), "#,##0.00").replace(",", "").replace(".", ""));
        valorDescontoTF.setText(ManagerDecimal.converter(compraAtual.getValorDesc(), "#,##0.00").replace(",", "").replace(".", ""));
        valorOutrosTF.setText(ManagerDecimal.converter(compraAtual.getValorOutro(), "#,##0.00").replace(",", "").replace(".", ""));
        valorIpiTF.setText(ManagerDecimal.converter(compraAtual.getValorIPI(), "#,##0.00").replace(",", "").replace(".", ""));
        totalNFeTF.setText(ManagerDecimal.converter(compraAtual.getValorNF(), "#,##0.00").replace(",", "").replace(".", ""));
        valorIITF.setText(ManagerDecimal.converter(compraAtual.getValorII(), "#,##0.00").replace(",", "").replace(".", ""));
        valorPisTF.setText(ManagerDecimal.converter(compraAtual.getValorPIS(), "#,##0.00").replace(",", "").replace(".", ""));
        valorCofinsTF.setText(ManagerDecimal.converter(compraAtual.getValorCOFINS(), "#,##0.00").replace(",", "").replace(".", ""));
        valorFrete.setText(ManagerDecimal.converter(compraAtual.getValorFrete(), "#,##0.00").replace(",", "").replace(".", ""));
        obsTxA.setText(compraAtual.getObs());
        codigoCompraTF.setText(compraAtual.getIdCompra() != null ? compraAtual.getIdCompra().toString() : "0");
        jTextFieldchaveAcesso.setText(compraAtual.getChaveAcesso());
    }

    private void setProduto() {
        produtoAtual = null;
        Map<Object, Object> filtro = new HashMap<>();
        filtro.put("codigoBarra", codigoProdutoTF.getText());
        JsysIdProdutos p = (JsysIdProdutos) Retorna.findOneResult("JsysIdProdutos.findByCodigoBarra", filtro);
        if (p != null) {
            filtro.clear();
            filtro.put("idProduto", p.getIdProduto().getIdProduto());
            filtro.put("idloja", Retorna.getLoja());
            produtoAtual = (JsysProdutosTPrecos) Retorna.findOneResult("JsysProdutosTPrecos.findByIdProdutoAndIdloja", filtro);
            nomeProdutoTF.setText(produtoAtual.getJsysProdutosT().getNomeProduto());
            try {
                filtro.clear();
                filtro.put("codigo", produtoAtual.getJsysProdutosT().getNCM());
                Ncm ncm = (Ncm) Retorna.findOneResult("Ncm.findByCodigo", filtro);
                if (ncm != null) {
                    uJComboBoxNCM.setSelectedItem(ncm.getCodigo() + " - " + ncm.getDescricao());
                } else {
                    uJComboBoxNCM.setSelectedItem("Não Foi Encontrado ...");
                }
            } catch (Exception e) {
                uJComboBoxNCM.setSelectedItem("Não Foi Encontrado ...");
            }
            precoCompraProdutoTF.setText(ManagerDecimal.converter(produtoAtual.getJsysProdutosT().getPrecoCompra(), "#,##0.00"));
            precoVendaProdutosTF.setText(ManagerDecimal.converter(produtoAtual.getPrecoVenda(), "#,##0.00"));
            cfopProdutouCB.setSelectedItem(produtoAtual.getJsysProdutosT().getCfopInterestadualEntrada());
        } else {
            nomeProdutoTF.setText("");
            uJComboBoxNCM.setSelectedIndex(0);
            precoCompraProdutoTF.setText("0,00");
            precoVendaProdutosTF.setText("0,00");
        }
    }

    private void setValues() {
        compraAtual.setIdloja(getuJComboBoxLojas());
        compraAtual.setIdCorentista((JsysClientes) fornecedoruJCB.getSelectedObject());
        compraAtual.setCfop(((Natureza) cfopuCB.getSelectedObject()).getCfop());
        compraAtual.setCfopSub(((Natureza) cfopStuCB.getSelectedObject()).getCfop());
        compraAtual.setnNFe(Integer.valueOf(numeroNFeTF.getText()));
        compraAtual.setModNFe(modTF.getText());
        compraAtual.setSerieNFe(serieTF.getText());
        compraAtual.setDataChegada(dataChegadajDC.getDate());
        compraAtual.setValorBC(ManagerDecimal.StringToBigDecimal(baseCalculoIcmsTF.getText()));
        compraAtual.setValorICMS(ManagerDecimal.StringToBigDecimal(valorIcmsTF.getText()));
        compraAtual.setValorBCST(ManagerDecimal.StringToBigDecimal(baseCalculoIcmsStTF.getText()));
        compraAtual.setValorST(ManagerDecimal.StringToBigDecimal(valorIcmsStTF.getText()));
        compraAtual.setValorProd(ManagerDecimal.StringToBigDecimal(totalProdutosTF.getText()));
        compraAtual.setValorSeg(ManagerDecimal.StringToBigDecimal(valorSeguroTF.getText()));
        compraAtual.setValorDesc(ManagerDecimal.StringToBigDecimal(valorDescontoTF.getText()));
        compraAtual.setValorOutro(ManagerDecimal.StringToBigDecimal(valorOutrosTF.getText()));
        compraAtual.setValorIPI(ManagerDecimal.StringToBigDecimal(valorIpiTF.getText()));
        compraAtual.setValorNF(ManagerDecimal.StringToBigDecimal(totalNFeTF.getText()));
        compraAtual.setValorII(ManagerDecimal.StringToBigDecimal(valorIITF.getText()));
        compraAtual.setValorPIS(ManagerDecimal.StringToBigDecimal(valorPisTF.getText()));
        compraAtual.setValorCOFINS(ManagerDecimal.StringToBigDecimal(valorCofinsTF.getText()));
        compraAtual.setValorFrete(ManagerDecimal.StringToBigDecimal(valorFrete.getText()));
        compraAtual.setObs(obsTxA.getText());
        compraAtual.setChaveAcesso(jTextFieldchaveAcesso.getText());
    }

    private JsysClientes getfiltroClienteCB() {
        try {
            return (JsysClientes) filtroClienteCB.getSelectedObject();
        } catch (Exception e) {
            return null;
        }
    }

    private Ncm getuJComboBoxNCM() {
        try {
            return (Ncm) uJComboBoxNCM.getSelectedObject();
        } catch (Exception e) {
            return null;
        }
    }

    private void limpaCampos() {
        quantidadeProdutoTF.setText("");
        codigoProdutoTF.setText("");
        setProduto();
    }

    private boolean validarCampos() {
        if (produtoAtual == null) {
            JOptionPane.showMessageDialog(null, "Código do Produto Inválido", "ERRO", JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (getuJComboBoxNCM() == null) {
            JOptionPane.showMessageDialog(null, "Ncm do Produto Inválido", "ERRO", JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (quantidadeProdutoTF.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Quantidade do Produto Inválida", "ERRO", JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (getcfopProdutouCB() == null) {
            JOptionPane.showMessageDialog(null, "CFOP do Produto Inválido", "ERRO", JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (getuJComboBoxLojas() == null) {
            JOptionPane.showMessageDialog(null, "Loja Inválido", "ERRO", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }

    private void setCompraAtual(JsysCompras compraAtual) {
        this.compraAtual = compraAtual;
        if (this.compraAtual != null) {
            setCampos();
        }
    }

    private void insereItem() {
        if (validarCampos()) {
            final Progress p = new Progress();
            SwingWorker work = new SwingWorker() {

                @Override
                protected Void doInBackground() throws Exception {
                    JsysProdutosT p = produtoAtual.getJsysProdutosT();
                    p.setIdNCM(getuJComboBoxNCM().getCodigo());
                    p.setPrecoCompra(ManagerDecimal.StringToBigDecimal(precoCompraProdutoTF.getText()));
                    p.setCfopEstadualEntrada(getcfopProdutouCB().getCfop());
                    p.setCfopInterestadualEntrada(getcfopProdutouCB().getCfop());
                    ConnectionFactory.update(p);
//                    try {
                    int index = masterTable.getSelectedRow();
                    setValues();
                    if (compraAtual.getIdCompra() == null) {
                        compraAtual = (JsysCompras) ConnectionFactory.insert(compraAtual);
                        codigoCompraTF.setText(compraAtual.getIdCompra().toString());
                    } else {
                        compraAtual = (JsysCompras) ConnectionFactory.update(compraAtual);
                    }
                    JsysComprasItens j = new JsysComprasItens();
                    JsysComprasItensPK pkj = new JsysComprasItensPK(compraAtual.getIdCompra(),
                            produtoAtual.getJsysProdutosT().getIdProduto());
                    j.setJsysComprasItensPK(pkj);
                    j.setJsysProdutosT(produtoAtual.getJsysProdutosT());
                    j.setNcm(getuJComboBoxNCM().getCodigo());
                    j.setUnidadeCompra(produtoAtual.getJsysProdutosT().getUnidadeCompra());
                    j.setUnidadeVenda(produtoAtual.getJsysProdutosT().getUnidadeVenda());
                    j.setCfop(getcfopProdutouCB().getCfop());
                    j.setPrecoCompra(produtoAtual.getJsysProdutosT().getPrecoCompra());
                    j.setPrecoVenda(produtoAtual.getPrecoVenda());
                    j.setPrecoFrete(BigDecimal.ZERO);
                    j.setQuantidade(ManagerDecimal.StringToBigDecimal(quantidadeProdutoTF.getText()));
                    j.setTotalCompra(j.getQuantidade().multiply(j.getPrecoCompra()));
                    if (!compraAtual.getJsysComprasItensList().contains(j)) {
                        ConnectionFactory.insert(j);
                        compraAtual.getJsysComprasItensList().add(j);
                    } else {
                        ConnectionFactory.update(j);
                    }
                    masterTable.clearSelection();
                    masterTable.setRowSelectionInterval(index, index);
                    int row = compraAtual.getJsysComprasItensList().size() - 1;
                    detailTable.setRowSelectionInterval(row, row);
                    detailTable.scrollRectToVisible(detailTable.getCellRect(row, 0, true));
//                    } catch (Exception e) {
//                        Log.registraErro(this.getClass().getName(), "incluirProdutos", e);
//                    }
//                    try {
                    BigDecimal produtos = BigDecimal.ZERO;
                    for (JsysComprasItens c : compraAtual.getJsysComprasItensList()) {
                        produtos = produtos.add(c.getQuantidade().multiply(c.getPrecoCompra()));
                    }
                    totalProdutosTF.setText(ManagerDecimal.converter(produtos));
                    totalNFeTF.setText(ManagerDecimal.converter(produtos));
                    compraAtual.setValorProd(produtos);
                    compraAtual.setValorNF(produtos);
                    ConnectionFactory.update(compraAtual);
//                    } catch (Exception e) {
//                        Log.registraErro(this.getClass().getName(), "calculaCompra", e);
//                    }
                    limpaCampos();
                    return null;
                }

                @Override
                protected void done() {
                    super.done();
                    p.setVisible(false);
                    codigoProdutoTF.requestFocus();
                }
            };
            work.execute();
            p.setVisible(true);
        }
    }
}
