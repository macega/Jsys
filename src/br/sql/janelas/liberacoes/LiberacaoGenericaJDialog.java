package br.sql.janelas.liberacoes;

import br.sql.bean.Liberacao;
import br.sql.bean.Usuarios;
import br.sql.plainDocument.UppercaseDocument;
import br.sql.util.ManagerData;
import br.sql.util.Validar;
import java.awt.event.KeyEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import java.util.ArrayList;
import java.util.List;
import jsys.sql.Menu;

/**
 *
 * @author Juliano Alves Medina
 */
public class LiberacaoGenericaJDialog extends javax.swing.JDialog {

    public static final int ADMINISTRACAO = 0;
    public static final int GERENCIA = 1;
    public static final int VENDAS = 2;
    public static final int CAIXA = 3;
    public static final int FINANCEIRO = 4;

    public static final int PERMISSAO = 0;
    public static final int CANCELAMENTO = 1;
    public static final int CAIXA_REABERTURA = 2;
    public static final int LIBERACAO = 3;
    public static final int EXCLUSAO = 4;
    public static final int ESTORNO = 5;
    public static final int REIMPRESSAO = 6;
    public static final int REABERTURA = 7;
    public static final int DEVOLUCAO = 8;

    private boolean confirma;
    private String motivo;
    private final int nivel;
    private final List<Liberacao> liberacao;

    
    public String getMotivo() {
        return motivo;
    }
    /**
     * Get the value of Confirma
     *
     * @return the value of Confirma
     */
    public boolean isConfirma() {
        return confirma;
    }

    private transient final PropertyChangeSupport propertyChangeSupport = new PropertyChangeSupport(this);

    /**
     * Add PropertyChangeListener.
     *
     * @param listener
     */
    @Override
    public void addPropertyChangeListener(PropertyChangeListener listener) {
        propertyChangeSupport.addPropertyChangeListener(listener);
    }

    /**
     * Remove PropertyChangeListener.
     *
     * @param listener
     */
    @Override
    public void removePropertyChangeListener(PropertyChangeListener listener) {
        propertyChangeSupport.removePropertyChangeListener(listener);
    }

    /**
     * Creates new form LigeraçaoGenericaJDialog
     *
     * @param nivel nivel de acesso
     * ADMINISTRACAO,GERENCIA,VENDAS,CAIXA,FINANCEIRO
     * @param tabelaOrigem tabela que vai ter o registro liberado
     * @param idOrigem codigo so registro que vai ser liberado
     * @param tipo tipo de liberaçao PERMISSAO, CANCELAMENTO, CAIXA_REABERTURA,
     * LIBERACAO, EXCLUSAO, ESTORNO, REIMPRESSAO, REABERTURA, DEVOLUCAO
     * @param motivo para a liberaçao
     */
    public LiberacaoGenericaJDialog(int nivel, String tabelaOrigem, String idOrigem, int tipo, String motivo) {
        super(new javax.swing.JFrame(), true);
        initComponents();
        this.nivel = nivel;
        this.liberacao = new ArrayList<>();
        this.motivo = motivo;
        Liberacao l = new Liberacao();
        l.setTabelaOrigem(tabelaOrigem);
        l.setIdOrigem(idOrigem);
        l.setTipo(tipo);
        l.setMotivo(this.motivo);
        this.liberacao.add(l);
        setVisible(true);
    }

    /**
     * Creates new form LigeraçaoGenericaJDialog
     *
     * @param nivel nivel de acesso
     * ADMINISTRACAO,GERENCIA,VENDAS,CAIXA,FINANCEIRO
     * @param tabelaOrigem tabela que vai ter o registro liberado
     * @param idsOrigem codigos dos registros liberados
     * @param tipo tipo de liberaçao PERMISSAO, CANCELAMENTO, CAIXA_REABERTURA,
     * LIBERACAO, EXCLUSAO, ESTORNO, REIMPRESSAO, REABERTURA, DEVOLUCAO
     * @param motivo para a liberaçao
     */
    public LiberacaoGenericaJDialog(int nivel, String tabelaOrigem, List<String> idsOrigem, int tipo, String motivo) {
        super(new javax.swing.JFrame(), true);
        initComponents();
        this.nivel = nivel;
        this.liberacao = new ArrayList<>();
        this.motivo = motivo;
        for (String idOrigem : idsOrigem) {
            Liberacao l = new Liberacao();
            l.setTabelaOrigem(tabelaOrigem);
            l.setIdOrigem(idOrigem);
            l.setTipo(tipo);
            l.setMotivo(this.motivo);
            this.liberacao.add(l);
        }
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        usuariojTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        senhajPasswordField = new javax.swing.JPasswordField();
        jScrollPane1 = new javax.swing.JScrollPane();
        motivojTextArea = new javax.swing.JTextArea();
        jButtonConfirmar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Liberação");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Liberação");
        jLabel1.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        jLabel2.setText("Usuario");
        jLabel2.setToolTipText("");

        usuariojTextField.setDocument(new UppercaseDocument());
        usuariojTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                usuariojTextFieldKeyPressed(evt);
            }
        });

        jLabel3.setText("Senha");

        senhajPasswordField.setDocument(new UppercaseDocument());
        senhajPasswordField.setName(""); // NOI18N
        senhajPasswordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                senhajPasswordFieldKeyPressed(evt);
            }
        });

        motivojTextArea.setColumns(20);
        motivojTextArea.setRows(5);
        jScrollPane1.setViewportView(motivojTextArea);

        jButtonConfirmar.setText("Confirmar");
        jButtonConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmarActionPerformed(evt);
            }
        });

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(usuariojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(0, 150, Short.MAX_VALUE))
                            .addComponent(senhajPasswordField)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonConfirmar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCancelar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usuariojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(senhajPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCancelar)
                    .addComponent(jButtonConfirmar))
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void usuariojTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usuariojTextFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            senhajPasswordField.requestFocus();
        }
    }//GEN-LAST:event_usuariojTextFieldKeyPressed

    private void senhajPasswordFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_senhajPasswordFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButtonConfirmar.doClick();
        }
    }//GEN-LAST:event_senhajPasswordFieldKeyPressed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        this.confirma = false;
        this.motivo = "";
        dispose();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmarActionPerformed
        Usuarios user = Validar.Senha(usuariojTextField.getText().trim(), senhajPasswordField.getPassword());
        if (user != null & !motivojTextArea.getText().equals("")) {
            this.motivo = motivojTextArea.getText();
            switch (nivel) {
                case 0:
                    confirma = user.getIdGrupo().isAdministracao();
                    break;
                case 1:
                    confirma = user.getIdGrupo().isGerencia();
                    break;
                case 2:
                    confirma = user.getIdGrupo().isVendas();
                    break;
                case 3:
                    confirma = user.getIdGrupo().isCaixa();
                    break;
                case 4:
                    confirma = user.getIdGrupo().isFinanceiro();
                    break;
                default:
                    confirma = false;
                    break;
            }
            if (confirma && liberacao != null) {
                for (Liberacao l : liberacao) {
                    l.setMotivo(this.motivo);
                    l.setData(ManagerData.getDataAtualTypeDate(0));
                    l.setHora(ManagerData.getDate());
                    l.setUsuario(user.getUsuario());
                    l.setUsuarioLogado(Menu.getNomeUsuario());
                    br.sql.acesso.ConnectionFactory.insert(l);
                }
            } 
        } else {
            confirma = false;
        }
        dispose();
    }//GEN-LAST:event_jButtonConfirmarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonConfirmar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea motivojTextArea;
    private javax.swing.JPasswordField senhajPasswordField;
    private javax.swing.JTextField usuariojTextField;
    // End of variables declaration//GEN-END:variables
}
