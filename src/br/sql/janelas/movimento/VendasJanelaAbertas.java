package br.sql.janelas.movimento;

import br.sql.acesso.SQLDatabaseConnection;
import br.sql.bean.JsysClientes;
import br.sql.log.Log;
import br.sql.defaultTableCellRenderer.Zebrado;
import br.sql.util.ManagerSQL;
import br.sql.util.Retorna;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Juliano Alves Medina
 */
public final class VendasJanelaAbertas extends javax.swing.JDialog {
    
    private static final SQLDatabaseConnection DADOS = new SQLDatabaseConnection();

    /**
     * Creates new form VendasJanelaAbertas
     *
     * @param vendedor
     */
    public VendasJanelaAbertas(Integer vendedor) {
        super(new java.awt.Frame(), true);
        initComponents();
        registrarAcoesDoTeclado(JPanelGeral);
        jTableOrcamentos.getInputMap(JTable.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false), 0);
        this.vendedor = vendedor;
        actionConsulta();
        jtableRequestFocus();
        this.setVisible(true);
    }

    private void novaVenda() {
        setOrcamento(0);
        dispose();
    }

    private void cotunuarVenda() {
        try {
            String ret = jTableOrcamentos.getValueAt(jTableOrcamentos.getSelectedRow(), 0).toString();
            setOrcamento(Integer.parseInt(ret));
            dispose();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro Selecione uma venda para Continuar!!!", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPanelGeral = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableOrcamentos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText(" F6 Nova Venda - F7 Continuar Venda");
        jLabel1.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
        );

        jTableOrcamentos.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTableOrcamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableOrcamentos.setRowHeight(22);
        jTableOrcamentos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTableOrcamentosKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTableOrcamentos);

        javax.swing.GroupLayout JPanelGeralLayout = new javax.swing.GroupLayout(JPanelGeral);
        JPanelGeral.setLayout(JPanelGeralLayout);
        JPanelGeralLayout.setHorizontalGroup(
            JPanelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(JPanelGeralLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 787, Short.MAX_VALUE)
                .addContainerGap())
        );
        JPanelGeralLayout.setVerticalGroup(
            JPanelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPanelGeralLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JPanelGeral, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JPanelGeral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTableOrcamentosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableOrcamentosKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            JOptionPane.showMessageDialog(JPanelGeral, "F6 Nova Venda" + System.lineSeparator() + "F7 Continuar Venda");
        }
    }//GEN-LAST:event_jTableOrcamentosKeyPressed

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(() -> {
//            VendasJanelaAbertas dialog = new VendasJanelaAbertas(new javax.swing.JFrame(), fecharSystema, true, 0);
//            dialog.setVisible(true);
//        });
//    }

    private void actionConsulta() {
        try {
            Map<Object, Object> filtro = new HashMap<>();
            filtro.put("idCliente", vendedor);
            JsysClientes c = (JsysClientes) Retorna.findOneResult("JsysClientes.findByIdCliente", filtro);
            String campos[] = {"jsysOrcamento.idOrcamento", "convert(varchar, jsysOrcamento.data, 103)", "jsysOrcamento.valorBruto", "jsysOrcamento.valorLiquido"};
            String order[] = {"jsysOrcamento.valorBruto", "jsysOrcamento.data"};
            filtro.clear();
            filtro.put("jsysOrcamento.vendido", "= 0");
            filtro.put("jsysOrcamento.idFuncionario", "= " + Integer.toString(c.getIdCliente()));
            ManagerSQL sql = new ManagerSQL();
            sql.setTabela("jsysOrcamento");
            sql.setCampos(campos);
            sql.setOrder(order);
            sql.setOnde(filtro);
            ResultSet x = DADOS.execSQL(sql.getSQL());
            // Definição do TableModel
            DefaultTableModel aModel = new DefaultTableModel(new Object[][]{}, new String[]{"CODIGO VENDA", "DATA", "VALOR BRUTO", "VALOR LIQUIDO"}) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };
            java.sql.ResultSetMetaData rsmd = x.getMetaData();
            int colNo = rsmd.getColumnCount();
            while (x.next()) {
                Object[] objects = new Object[colNo];
                for (int i = 0; i < colNo; i++) {
                    objects[i] = x.getObject(i + 1);
                }
                aModel.addRow(objects);
            }
            jTableOrcamentos.setModel(aModel);
            jTableOrcamentos.setDefaultRenderer(Object.class, new Zebrado());
        } catch (SQLException e) {
            Log.registraErro(this.getClass().getName(), "actionConsulta", e);
        }
    }

    public Integer getOrcamento() {
        return orcamento;
    }

    public void setOrcamento(Integer orcamento) {
        this.orcamento = orcamento;
    }

    private void jtableRequestFocus() {
        jTableOrcamentos.requestFocus();
        int row = jTableOrcamentos.getRowCount() - 1;
        jTableOrcamentos.setRowSelectionInterval(row, row);
    }

    // Ações para o botão numérico. Ela simplesmente concatena o número ao final 
    // do texto do visor.
    private class BotaoAction extends AbstractAction {

        private final int botao;

        public BotaoAction(int botao) {
            super();
            this.botao = botao;
        }

        @Override
        public void actionPerformed(ActionEvent e) {
            switch (botao) {
                case 6:
                    if (jTableOrcamentos.getRowCount() < 31) {
                        novaVenda();
                    } else {
                        JOptionPane.showMessageDialog(null, "Limite de vendas em aberto é 30 Orçamentos.\nSeleciona um Orçamento para continuar", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                    }
                    break;
                case 7:
                    cotunuarVenda();
                    break;
            }
        }
    }

    private void registrarAcoesDoTeclado(JPanel painel) {
        // Damos um nome para cada ação. Esse nome é útil pois mais de 
        // Uma tecla pode ser associada a cada ação, como veremos abaixo
        ActionMap actionMap = painel.getActionMap();
        actionMap.put("botaoF6", acaoBotaoF6);
        actionMap.put("botaoF7", acaoBotaoF7);
        painel.setActionMap(actionMap);

        // Pegamos o input map que ocorre sempre que a janela atual está em foco
        InputMap imap = painel.getInputMap(JPanel.WHEN_IN_FOCUSED_WINDOW);

        // Associamos o pressionar das teclas (keystroke) aos eventos.
        // O nome do KeyStroke pode ser obtido através da classe KeyEvent.
        // Lá está cheio de constantes como KeyEvent.VK_NUMPAD1. 
        // Essa string é o nome sem o VK_
        // Teclas da parte de cima do teclado.
        imap.put(KeyStroke.getKeyStroke("F6"), "botaoF6");
        imap.put(KeyStroke.getKeyStroke("F7"), "botaoF7");
        // Finaliza implementa funcao para pegar a tecla apertado pelo usuario 
    }

    // inicia implementa funcao para pegar a tecla apertado pelo usuario 
    private final BotaoAction acaoBotaoF6 = new BotaoAction(6);
    private final BotaoAction acaoBotaoF7 = new BotaoAction(7);
    private Integer orcamento = 0;
    private final Integer vendedor;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPanelGeral;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableOrcamentos;
    // End of variables declaration//GEN-END:variables
}
