package br.sql.janelas.movimento;

import br.sql.acesso.ConnectionFactory;
import br.sql.acesso.SQLDatabaseConnection;
import br.sql.bean.PedidoCompras;
import br.sql.bean.PedidoComprasItens;
import br.sql.bean.views.JsysIdProdutos;
import br.sql.log.Log;
import br.sql.util.ManagerData;
import br.sql.util.ManagerDecimal;
import br.sql.util.ManagerString;
import br.sql.util.Progress;
import br.sql.util.Retorna;
import br.sql.util.Validar;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingWorker;
import jsys.sql.Menu;

/**
 *
 * @author Juliano Alves Medina
 */
public class PedidosJanela extends JPanel {

    private JsysIdProdutos produtoAtual;
    private PedidoCompras pedidoCompras = new PedidoCompras();
    private SQLDatabaseConnection DADOS = new SQLDatabaseConnection();

    public PedidosJanela() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        query = java.beans.Beans.isDesignTime() ? null : ConnectionFactory.getEntityManagerNew().createQuery("SELECT p FROM PedidoCompras p WHERE p.confirmado = false ORDER BY p.dataPedido");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        idPedidoLabel = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        jButtonApagarPedido = new javax.swing.JButton();
        jButtonNovo = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        dataInicial = new com.toedter.calendar.JDateChooser();
        dataFinal = new com.toedter.calendar.JDateChooser();
        jButtonFiltrar = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        dataTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        deleteDetailButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        descricaoTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ususarioTextField = new javax.swing.JTextField();
        detailScrollPane = new javax.swing.JScrollPane();
        detailTable = new javax.swing.JTable();
        quantidadeTextField = new javax.swing.JTextField();
        codigoTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        enviarButton = new javax.swing.JButton();

        FormListener formListener = new FormListener();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Pedidos");
        jLabel1.setToolTipText("");

        idPedidoLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        idPedidoLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        idPedidoLabel.setText("0");
        idPedidoLabel.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(idPedidoLabel)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                .addComponent(idPedidoLabel))
        );

        masterTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        masterTable.setColumnSelectionAllowed(true);
        masterTable.setRowHeight(24);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idPedido}"));
        columnBinding.setColumnName("Id Pedido");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dataPedido}"));
        columnBinding.setColumnName("Data Pedido");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${usuario}"));
        columnBinding.setColumnName("Usuario");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${confirmado}"));
        columnBinding.setColumnName("Confirmado");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterScrollPane.setViewportView(masterTable);
        masterTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (masterTable.getColumnModel().getColumnCount() > 0) {
            masterTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            masterTable.getColumnModel().getColumn(1).setPreferredWidth(50);
            masterTable.getColumnModel().getColumn(2).setPreferredWidth(300);
        }

        jButtonApagarPedido.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonApagarPedido.setText("Apagar Pedido");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jButtonApagarPedido, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jButtonApagarPedido.addActionListener(formListener);

        jButtonNovo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonNovo.setText("Novo Pedido");
        jButtonNovo.addActionListener(formListener);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtro"));

        jLabel7.setText("Data");

        dataInicial.setDate(ManagerData.getDataAtualTypeDate(ManagerData.INICIO)
        );

        dataFinal.setDate(ManagerData.getDataAtualTypeDate(ManagerData.FIM));

        jButtonFiltrar.setText("Filtrar");
        jButtonFiltrar.addActionListener(formListener);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonFiltrar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonFiltrar)
                    .addComponent(dataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        refreshButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        refreshButton.setText("Atualizar");
        refreshButton.addActionListener(formListener);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(masterScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 819, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonApagarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonApagarPedido)
                            .addComponent(jButtonNovo)
                            .addComponent(refreshButton))
                        .addGap(27, 27, 27))))
        );

        jTabbedPane1.addTab("Lista de Pedidos", jPanel3);

        jPanel2.addFocusListener(formListener);

        dataTextField.setEditable(false);
        dataTextField.setBackground(new java.awt.Color(255, 255, 204));
        dataTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Usuario");

        deleteDetailButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deleteDetailButton.setText("Apagar Item");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, detailTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), deleteDetailButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        deleteDetailButton.addActionListener(formListener);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Data");
        jLabel3.setToolTipText("");

        descricaoTextField.setDocument(new br.sql.plainDocument.JTextFieldTamanhoMaxDocument(43, true)
        );
        descricaoTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), descricaoTextField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        descricaoTextField.addFocusListener(formListener);
        descricaoTextField.addKeyListener(formListener);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Código");
        jLabel4.setToolTipText("");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Descrição");
        jLabel5.setToolTipText("");

        ususarioTextField.setEditable(false);
        ususarioTextField.setBackground(new java.awt.Color(255, 255, 204));
        ususarioTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.usuario}"), ususarioTextField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        detailTable.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        detailTable.setRowHeight(24);

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${selectedElement.pedidoComprasItensList}");
        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, eLProperty, detailTable);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idProduto}"));
        columnBinding.setColumnName("Código ");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${descricao}"));
        columnBinding.setColumnName("Descrição");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${quantidade}"));
        columnBinding.setColumnName("Quantidade");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        jTableBinding.setSourceUnreadableValue(java.util.Collections.emptyList());
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        detailScrollPane.setViewportView(detailTable);
        if (detailTable.getColumnModel().getColumnCount() > 0) {
            detailTable.getColumnModel().getColumn(1).setPreferredWidth(500);
        }

        quantidadeTextField.setDocument(new br.sql.plainDocument.QuantidadeVendaDocument()
        );
        quantidadeTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        quantidadeTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        quantidadeTextField.setText("1");
        quantidadeTextField.setToolTipText("");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), quantidadeTextField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        quantidadeTextField.addFocusListener(formListener);
        quantidadeTextField.addKeyListener(formListener);

        codigoTextField.setDocument(new br.sql.plainDocument.IntegerDocument());
        codigoTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), codigoTextField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        codigoTextField.addFocusListener(formListener);
        codigoTextField.addKeyListener(formListener);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Quantidade");
        jLabel6.setToolTipText("");

        enviarButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        enviarButton.setText("Enviar");
        enviarButton.addActionListener(formListener);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(ususarioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 655, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dataTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addComponent(detailScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 819, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(codigoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(descricaoTextField)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quantidadeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(deleteDetailButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enviarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ususarioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codigoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(descricaoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantidadeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(detailScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteDetailButton)
                    .addComponent(enviarButton))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Lançamento de Pedidos", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("jTabbedPane1");
        jTabbedPane1.getAccessibleContext().setAccessibleDescription("");

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.FocusListener, java.awt.event.KeyListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == jButtonApagarPedido) {
                PedidosJanela.this.jButtonApagarPedidoActionPerformed(evt);
            }
            else if (evt.getSource() == jButtonNovo) {
                PedidosJanela.this.jButtonNovoActionPerformed(evt);
            }
            else if (evt.getSource() == jButtonFiltrar) {
                PedidosJanela.this.jButtonFiltrarActionPerformed(evt);
            }
            else if (evt.getSource() == refreshButton) {
                PedidosJanela.this.refreshButtonActionPerformed(evt);
            }
            else if (evt.getSource() == deleteDetailButton) {
                PedidosJanela.this.deleteDetailButtonActionPerformed(evt);
            }
            else if (evt.getSource() == enviarButton) {
                PedidosJanela.this.enviarButtonActionPerformed(evt);
            }
        }

        public void focusGained(java.awt.event.FocusEvent evt) {
            if (evt.getSource() == descricaoTextField) {
                PedidosJanela.this.descricaoTextFieldFocusGained(evt);
            }
            else if (evt.getSource() == quantidadeTextField) {
                PedidosJanela.this.quantidadeTextFieldFocusGained(evt);
            }
            else if (evt.getSource() == codigoTextField) {
                PedidosJanela.this.codigoTextFieldFocusGained(evt);
            }
            else if (evt.getSource() == jPanel2) {
                PedidosJanela.this.jPanel2FocusGained(evt);
            }
        }

        public void focusLost(java.awt.event.FocusEvent evt) {
        }

        public void keyPressed(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == descricaoTextField) {
                PedidosJanela.this.descricaoTextFieldKeyPressed(evt);
            }
            else if (evt.getSource() == quantidadeTextField) {
                PedidosJanela.this.quantidadeTextFieldKeyPressed(evt);
            }
            else if (evt.getSource() == codigoTextField) {
                PedidosJanela.this.codigoTextFieldKeyPressed(evt);
            }
        }

        public void keyReleased(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == codigoTextField) {
                PedidosJanela.this.codigoTextFieldKeyReleased(evt);
            }
        }

        public void keyTyped(java.awt.event.KeyEvent evt) {
        }
    }// </editor-fold>//GEN-END:initComponents

    private void deleteDetailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDetailButtonActionPerformed
        int index = masterTable.getSelectedRow();
        PedidoCompras P = list.get(masterTable.convertRowIndexToModel(index));
        Collection<PedidoComprasItens> ps = P.getPedidoComprasItensList();
        int[] selected = detailTable.getSelectedRows();
        List<PedidoComprasItens> toRemove = new ArrayList<>(selected.length);
        for (int idx = 0; idx < selected.length; idx++) {
            selected[idx] = detailTable.convertRowIndexToModel(selected[idx]);
            int count = 0;
            Iterator<PedidoComprasItens> iter = ps.iterator();
            while (count++ < selected[idx]) {
                iter.next();
            }
            PedidoComprasItens p = iter.next();
            toRemove.add(p);
            ConnectionFactory.delete(p);
        }
        ps.removeAll(toRemove);
        masterTable.clearSelection();
        masterTable.setRowSelectionInterval(index, index);
    }//GEN-LAST:event_deleteDetailButtonActionPerformed

    @SuppressWarnings("unchecked")
    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        ConnectionFactory.cancelar();
        java.util.Collection data = query.getResultList();
        for (Object entity : data) {
            ConnectionFactory.getEntityManagerNew().refresh(entity);
        }
        list.clear();
        list.addAll(data);
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
        PedidoCompras P = new PedidoCompras();
        P.setDataPedido(ManagerData.getDate());
        P.setUsuario(Menu.getNomeUsuario());
        P.setConfirmado(false);
        P.setImpresso(false);
        pedidoCompras = P;
        ConnectionFactory.insert(P);
        list.add(P);
        int row = list.size() - 1;
        masterTable.setRowSelectionInterval(row, row);
        masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
        idPedidoLabel.setText(P.getIdPedido().toString());
        dataTextField.setText(ManagerData.convertBrDate(P.getDataPedido()));
        jTabbedPane1.setSelectedComponent(this.jPanel2);
        jPanel2.requestFocus();
    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jButtonApagarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonApagarPedidoActionPerformed
        int[] selected = masterTable.getSelectedRows();
        List<PedidoCompras> toRemove = new ArrayList<>(selected.length);
        for (int idx = 0; idx < selected.length; idx++) {
            PedidoCompras P = list.get(masterTable.convertRowIndexToModel(selected[idx]));
            toRemove.add(P);
            ConnectionFactory.delete(P);
        }
        list.removeAll(toRemove);
    }//GEN-LAST:event_jButtonApagarPedidoActionPerformed

    private void codigoTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoTextFieldKeyReleased
        produtoAtual = null;
        Map<Object, Object> filtro = new HashMap<>();
        filtro.put("codigoBarra", codigoTextField.getText().trim());
        produtoAtual = (JsysIdProdutos) Retorna.findOneResult("JsysIdProdutos.findByCodigoBarra", filtro);
        if (produtoAtual != null) {
            descricaoTextField.setText(produtoAtual.getIdProduto().getNomeProduto());
        } else {
            descricaoTextField.setText("");
        }
    }//GEN-LAST:event_codigoTextFieldKeyReleased

    private void codigoTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoTextFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (Validar.Produto(codigoTextField.getText())) {
                descricaoTextField.requestFocus();
            } else {
                JOptionPane.showMessageDialog(null, "Produto Não Encontrado", "ERRO", JOptionPane.ERROR_MESSAGE);
                codigoTextField.requestFocus();
                codigoTextField.selectAll();
            }
        }
    }//GEN-LAST:event_codigoTextFieldKeyPressed

    private void codigoTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_codigoTextFieldFocusGained
        if (pedidoCompras.getIdPedido() == null) {
            int[] selected = masterTable.getSelectedRows();
            for (int idx = 0; idx < selected.length; idx++) {
                PedidoCompras P = list.get(masterTable.convertRowIndexToModel(selected[idx]));
                pedidoCompras = P;
                idPedidoLabel.setText(P.getIdPedido().toString());
                dataTextField.setText(ManagerData.convertBrDate(P.getDataPedido()));
            }
        }
        codigoTextField.selectAll();
    }//GEN-LAST:event_codigoTextFieldFocusGained

    private void descricaoTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_descricaoTextFieldFocusGained
        descricaoTextField.selectAll();
    }//GEN-LAST:event_descricaoTextFieldFocusGained

    private void descricaoTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descricaoTextFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            quantidadeTextField.requestFocus();
        }
    }//GEN-LAST:event_descricaoTextFieldKeyPressed

    private void quantidadeTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_quantidadeTextFieldFocusGained
        quantidadeTextField.selectAll();
    }//GEN-LAST:event_quantidadeTextFieldFocusGained

    private void quantidadeTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantidadeTextFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            final Progress p = new Progress();
            SwingWorker work = new SwingWorker() {

                @Override
                @SuppressWarnings("unchecked")
                protected Void doInBackground() {
                    try {
                        if (Validar.Produto(codigoTextField.getText()) & Validar.isNumber(quantidadeTextField.getText())) {
                            Map<Object, Object> filtro = new HashMap<>();
                            filtro.put("codigoBarra", codigoTextField.getText());
                            JsysIdProdutos idP = (JsysIdProdutos) Retorna.findOneResult("JsysIdProdutos.findByCodigoBarra", filtro);
                            Collection<PedidoComprasItens> ps = pedidoCompras.getPedidoComprasItensList();
                            if (ps == null) {
                                ps = new LinkedList<>();
                                pedidoCompras.setPedidoComprasItensList((List) ps);
                            }
                            PedidoComprasItens p = new PedidoComprasItens();
                            //int idPedidoComprasItens = DADOS.sequenciaTabela("PedidoComprasItens", "idPedidoComprasItens", "idPedido", pedidoCompras.getIdPedido().toString());
                            //p.setIdPedidoComprasItens(idPedidoComprasItens);
                            p.setIdPedido(pedidoCompras);
                            p.setDescricao(ManagerString.Left(descricaoTextField.getText(), 255));
                            p.setIdProduto(idP.getIdProduto().getIdProduto());
                            p.setQuantidade(ManagerDecimal.StringToBigDecimal(quantidadeTextField.getText()));
                            ps.add(p);
                            ConnectionFactory.insert(p);
                            int index = masterTable.getSelectedRow();
                            masterTable.clearSelection();
                            masterTable.setRowSelectionInterval(index, index);
                            int row = ps.size() - 1;
                            detailTable.setRowSelectionInterval(row, row);
                            detailTable.scrollRectToVisible(detailTable.getCellRect(row, 0, true));
                            detailTable.repaint();
                        }
                    } catch (NumberFormatException e) {
                        Log.registraErro(this.getClass().getName(), "doInBackground", e);
                        refreshButtonActionPerformed(null);
                    }
                    return null;
                }

                @Override
                protected void done() {
                    super.done();
                    p.dispose();
                    codigoTextField.setText("");
                    descricaoTextField.setText("");
                    quantidadeTextField.setText("1");
                    codigoTextField.requestFocus();
                    codigoTextField.selectAll();
                }
            };
            work.execute();
            p.setVisible(true);
        }
    }//GEN-LAST:event_quantidadeTextFieldKeyPressed

    private void enviarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviarButtonActionPerformed
        masterTable.setValueAt(true, masterTable.getSelectedRow(), 3);
        int[] selected = masterTable.getSelectedRows();
        for (int idx = 0; idx < selected.length; idx++) {
            PedidoCompras P = list.get(masterTable.convertRowIndexToModel(selected[idx]));
            if (P.getIdPedido() == null) {
                ConnectionFactory.insert(P);
            } else {
                ConnectionFactory.update(P);
            }
        }
        JOptionPane.showMessageDialog(null, "Pedido Enviado Sucesso!!!", "Mensagem", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_enviarButtonActionPerformed

    @SuppressWarnings("unchecked")
    private void jButtonFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFiltrarActionPerformed
        Map<Object, Object> filtro = new HashMap<>();
        filtro.put("dataInicial", dataInicial.getDate());
        filtro.put("dataFinal", dataFinal.getDate());
        java.util.Collection data = Retorna.findCollection("PedidoCompras.findByPeriodo", filtro);
        list.clear();
        list.addAll(data);
    }//GEN-LAST:event_jButtonFiltrarActionPerformed

    private void jPanel2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel2FocusGained
        codigoTextField.requestFocus();
    }//GEN-LAST:event_jPanel2FocusGained

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField codigoTextField;
    private com.toedter.calendar.JDateChooser dataFinal;
    private com.toedter.calendar.JDateChooser dataInicial;
    private javax.swing.JTextField dataTextField;
    private javax.swing.JButton deleteDetailButton;
    private javax.swing.JTextField descricaoTextField;
    private javax.swing.JScrollPane detailScrollPane;
    private javax.swing.JTable detailTable;
    private javax.swing.JButton enviarButton;
    private javax.swing.JLabel idPedidoLabel;
    private javax.swing.JButton jButtonApagarPedido;
    private javax.swing.JButton jButtonFiltrar;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private java.util.List<br.sql.bean.PedidoCompras> list;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private javax.swing.JTextField quantidadeTextField;
    private javax.persistence.Query query;
    private javax.swing.JButton refreshButton;
    private javax.swing.JTextField ususarioTextField;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
