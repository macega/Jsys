package br.sql.janelas.movimento;

import br.sql.acesso.ConnectionFactory;
import br.sql.acesso.SQLDatabaseConnection;
import br.sql.bean.JsysClientes;
import br.sql.bean.JsysParametros;
import br.sql.bean.JsysProdutosTPrecos;
import br.sql.bean.JsysTitulos;
import br.sql.bean.views.JsysFuncionarios;
import br.sql.bean.views.JsysIdProdutos;
import br.sql.bean.views.JsysPlanoPagto;
import br.sql.buscas.ConsultaClientes;
import br.sql.buscas.ConsultaProdutos;
import br.sql.cadastros.ClientesJanelaEdit;
import br.sql.janelas.liberacoes.LiberacaoGeralJanelaJDialog;
import br.sql.log.Log;
import br.sql.util.ManagerData;
import br.sql.util.ManagerDecimal;
import br.sql.util.Progress;
import br.sql.util.Retorna;
import br.sql.util.Validar;
import br.sql.util.timerKeys;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.concurrent.ExecutionException;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import jsys.sql.Menu;

/**
 *
 * @author Juliano Alves Medina
 */
public class VendasJanela extends javax.swing.JFrame {

    private static final SQLDatabaseConnection DADOS = new SQLDatabaseConnection();
    private static Boolean devolucao = false;
    private Integer orcamento;
    private Double quantidade, totalOrcamento,
            totalOrcamentoliquido, valorEntrada,
            valorRestante, valorRestanteDiv,
            valorDesconto, ValorDevolvido,
            percentualDesconto;
    private static String ficha = new String();
    private JsysProdutosTPrecos produtoAtual;
    private JsysClientes clienteAtual;
    private final timerKeys tk = new timerKeys();
    private final JsysFuncionarios vendedor;
    private static final JsysParametros PAR = Retorna.JsysParametros();

    /**
     * Creates new form janelaVendas
     *
     * @param orcamento
     * @param vendedor
     */
    public VendasJanela(Integer orcamento, final JsysFuncionarios vendedor) {
        initComponents();
        this.orcamento = orcamento;
        this.totalOrcamento = 0.0;
        this.totalOrcamentoliquido = 0.0;
        this.valorEntrada = 0.0;
        this.valorRestante = 0.0;
        this.valorRestanteDiv = 0.0;
        this.valorDesconto = 0.0;
        this.percentualDesconto = 0.0;
        this.ValorDevolvido = 0.0;
        this.vendedor = vendedor;
        if (this.vendedor != null) {
            jLVendedor.setText(vendedor.getIdFuncionario() + " - " + vendedor.getNomeCliente());
            Map<Object, Object> filtro = new HashMap<>();
            filtro.put("idCliente", PAR.getIdConsumidorFinal());
            JsysClientes c = (JsysClientes) Retorna.findOneResult("JsysClientes.findByIdCliente", filtro);
            if (c != null) {
                setClienteAtual(c);
            }
            if (vendedor.getIdFuncionario() != 0) {
                if (this.orcamento == 0) {
                    this.orcamento = DADOS.execProcudureRetInt("orcamentoIncluir("
                            + vendedor.getIdFuncionario()
                            + ", " + PAR.getIdConsumidorFinal()
                            + ")");
                } else {
                    mostraProdutos();
                    calculaTotalProdutos();
                }
            }
            jLOrcamento.setText(String.valueOf(this.orcamento));
            jLabelVendaFechada2.setVisible(false);
            jLabelDevolucao.setVisible(devolucao);
            jPanelValorDevolvido.setVisible(devolucao);
            ValorDevolvidojTextField.setVisible(devolucao);
            setDescricao();
            jTFCodigoProduto.requestFocus();
        }
    }

    @Override
    public void setVisible(boolean bln) {
        super.setVisible(bln); //To change body of generated methods, choose Tools | Templates.
        jTFCodigoProduto.requestFocus();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        query = java.beans.Beans.isDesignTime() ? null : ConnectionFactory.getEntityManagerNew().createQuery("SELECT j FROM JsysOrcamentoItens j WHERE j.jsysOrcamentoItensPK.idOrcamento = 0");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        queryTitulos = java.beans.Beans.isDesignTime() ? null : ConnectionFactory.getEntityManagerNew().createQuery("SELECT j FROM JsysTitulos j WHERE j.ativo = 1 ORDER BY j.idcupom");
        listTitulos = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(queryTitulos.getResultList());
        queryPlanoPagto = java.beans.Beans.isDesignTime() ? null : ConnectionFactory.getEntityManagerNew().createQuery("SELECT j FROM JsysPlanoPagto j");
        listPlanoPagto = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(queryPlanoPagto.getResultList());
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLOrcamento = new javax.swing.JLabel();
        datajLabel1 = new javax.swing.JLabel();
        jLabelVendaFechada2 = new javax.swing.JLabel();
        jLabelDevolucao = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLVendedor = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTFCodigoProduto = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jTextFieldQuantidade = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jTextFieldValorUnd = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jTextFieldTotalOrcamento = new javax.swing.JTextField();
        jLabelMarca = new javax.swing.JLabel();
        jLabelSecao = new javax.swing.JLabel();
        jLabelDescricaoProdutoBusca = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldValorLiquido = new javax.swing.JTextField();
        DescontopercentjTextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jComboBoxTituloRestantante = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextFieldValorEntrada = new javax.swing.JTextField();
        jTextFieldValorRestante = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jComboBoxTituloEntrada = new javax.swing.JComboBox();
        jComboBoxFormaPagamento = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextFieldValorRestantediv = new javax.swing.JTextField();
        jButtonFechaVenda = new javax.swing.JButton();
        DescAredonmentojTextField = new javax.swing.JTextField();
        jPanelValorDevolvido = new javax.swing.JPanel();
        ValorDevolvidojTextField = new javax.swing.JTextField();
        jPanelDesconto = new javax.swing.JPanel();
        TotalDescontoValor = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabelCliente = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ClientejTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jTextFieldValorBruto = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        novaVendajButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Jsys - Vendas");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setExtendedState(MAXIMIZED_BOTH);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(930, 50));
        jPanel1.setRequestFocusEnabled(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Vendas Jsys");
        jLabel1.setRequestFocusEnabled(false);

        jLOrcamento.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLOrcamento.setText("000000");
        jLOrcamento.setRequestFocusEnabled(false);

        datajLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        datajLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        datajLabel1.setText("Data: " + ManagerData.getDataAtualTypeString());
        datajLabel1.setRequestFocusEnabled(false);

        jLabelVendaFechada2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelVendaFechada2.setForeground(new java.awt.Color(255, 0, 0));
        jLabelVendaFechada2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelVendaFechada2.setText("Venda Fechada");

        jLabelDevolucao.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelDevolucao.setForeground(new java.awt.Color(255, 204, 0));
        jLabelDevolucao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelDevolucao.setText("Devolução");
        jLabelDevolucao.setFocusable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelDevolucao, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelVendaFechada2, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(datajLabel1)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLOrcamento)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelDevolucao, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelVendaFechada2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(datajLabel1))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabelDevolucao.getAccessibleContext().setAccessibleDescription("");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Vendedor: ");
        jLabel2.setFocusable(false);

        jLVendedor.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLVendedor.setText("erro");
        jLVendedor.setFocusable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Produtos"));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setText("Codigo");

        jTFCodigoProduto.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jTFCodigoProduto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTFCodigoProduto.setToolTipText("Codigo do Produto\nF4 Fechamento da Venda\nF10 Busca de Produtos");
        jTFCodigoProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFCodigoProdutoFocusGained(evt);
            }
        });
        jTFCodigoProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFCodigoProdutoKeyReleased(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Quantidade", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jTextFieldQuantidade.setDocument(new br.sql.plainDocument.QuantidadeVendaDocument());
        jTextFieldQuantidade.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jTextFieldQuantidade.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldQuantidade.setText("1");
        jTextFieldQuantidade.setToolTipText("");
        jTextFieldQuantidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldQuantidadeFocusGained(evt);
            }
        });
        jTextFieldQuantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldQuantidadeKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextFieldQuantidade)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextFieldQuantidade, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Preço", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        jPanel5.setRequestFocusEnabled(false);

        jTextFieldValorUnd.setEditable(false);
        jTextFieldValorUnd.setBackground(new java.awt.Color(204, 255, 204));
        jTextFieldValorUnd.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jTextFieldValorUnd.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldValorUnd.setToolTipText("");
        jTextFieldValorUnd.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldValorUnd.setEnabled(false);
        jTextFieldValorUnd.setFocusable(false);
        jTextFieldValorUnd.setRequestFocusEnabled(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextFieldValorUnd)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextFieldValorUnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Total Geral", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        jPanel6.setRequestFocusEnabled(false);

        jTextFieldTotalOrcamento.setEditable(false);
        jTextFieldTotalOrcamento.setBackground(new java.awt.Color(204, 255, 204));
        jTextFieldTotalOrcamento.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jTextFieldTotalOrcamento.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldTotalOrcamento.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldTotalOrcamento.setEnabled(false);
        jTextFieldTotalOrcamento.setFocusable(false);
        jTextFieldTotalOrcamento.setRequestFocusEnabled(false);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${valorBrutoOrcamento}"), jTextFieldTotalOrcamento, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextFieldTotalOrcamento)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextFieldTotalOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jLabelMarca.setText("Marca:");

        jLabelSecao.setText("Seção:");

        jLabelDescricaoProdutoBusca.setBackground(new java.awt.Color(255, 255, 153));
        jLabelDescricaoProdutoBusca.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabelDescricaoProdutoBusca.setText(" Erro");
        jLabelDescricaoProdutoBusca.setOpaque(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelMarca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelSecao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelDescricaoProdutoBusca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTFCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDescricaoProdutoBusca))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabelMarca)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelSecao))))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Fechamento"));

        jLabel7.setText("Valor Produtos:");
        jLabel7.setToolTipText("");

        jLabel9.setText("Valor Liquido:");

        jTextFieldValorLiquido.setEditable(false);
        jTextFieldValorLiquido.setBackground(new java.awt.Color(204, 255, 204));
        jTextFieldValorLiquido.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jTextFieldValorLiquido.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${valorLiquidoOrcamento}"), jTextFieldValorLiquido, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        DescontopercentjTextField.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        DescontopercentjTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        DescontopercentjTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                DescontopercentjTextFieldFocusGained(evt);
            }
        });
        DescontopercentjTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DescontopercentjTextFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                DescontopercentjTextFieldKeyReleased(evt);
            }
        });

        jLabel12.setText("Desconto:");
        jLabel12.setToolTipText("");

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Plano de Pagamento"));

        jComboBoxTituloRestantante.setSelectedItem(PAR.getIdTituloDinhero());
        jComboBoxTituloRestantante.setToolTipText("");
        jComboBoxTituloRestantante.setRenderer(new br.sql.defaultListCellRenderer.Titulos());

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listTitulos, jComboBoxTituloRestantante);
        bindingGroup.addBinding(jComboBoxBinding);

        jComboBoxTituloRestantante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxTituloRestantanteKeyPressed(evt);
            }
        });

        jLabel14.setText("Valor");

        jLabel15.setText("Restante");
        jLabel15.setToolTipText("");

        jTextFieldValorEntrada.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldValorEntrada.setText("R$ 0,00");
        jTextFieldValorEntrada.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldValorEntradaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldValorEntradaFocusLost(evt);
            }
        });
        jTextFieldValorEntrada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldValorEntradaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldValorEntradaKeyReleased(evt);
            }
        });

        jTextFieldValorRestante.setEditable(false);
        jTextFieldValorRestante.setBackground(new java.awt.Color(204, 255, 204));
        jTextFieldValorRestante.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldValorRestante.setText("R$ 0,00");

        jLabel13.setText("Entrada");

        jComboBoxTituloEntrada.setSelectedItem(PAR.getIdTituloDinhero());
        jComboBoxTituloEntrada.setRenderer(new br.sql.defaultListCellRenderer.Titulos());

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listTitulos, jComboBoxTituloEntrada);
        bindingGroup.addBinding(jComboBoxBinding);

        jComboBoxTituloEntrada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxTituloEntradaKeyPressed(evt);
            }
        });

        jComboBoxFormaPagamento.setRenderer(new br.sql.defaultListCellRenderer.PlanoPagamento());

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listPlanoPagto, jComboBoxFormaPagamento, "");
        bindingGroup.addBinding(jComboBoxBinding);

        jComboBoxFormaPagamento.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxFormaPagamentoItemStateChanged(evt);
            }
        });
        jComboBoxFormaPagamento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxFormaPagamentoKeyPressed(evt);
            }
        });

        jLabel16.setText("Valor");

        jLabel17.setText("Forma de Pagamento");
        jLabel17.setToolTipText("");

        jTextFieldValorRestantediv.setEditable(false);
        jTextFieldValorRestantediv.setBackground(new java.awt.Color(204, 255, 204));
        jTextFieldValorRestantediv.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldValorRestantediv.setText("R$ 0,00");
        jTextFieldValorRestantediv.setToolTipText("");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jTextFieldValorRestante, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxTituloEntrada, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxTituloRestantante, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldValorEntrada)
                            .addComponent(jTextFieldValorRestantediv)))
                    .addComponent(jComboBoxFormaPagamento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxFormaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jComboBoxTituloEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jTextFieldValorEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jTextFieldValorRestante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxTituloRestantante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldValorRestantediv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jComboBoxFormaPagamento.getAccessibleContext().setAccessibleName("");

        jButtonFechaVenda.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonFechaVenda.setText("Fechar");
        jButtonFechaVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFechaVendaActionPerformed(evt);
            }
        });

        DescAredonmentojTextField.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        DescAredonmentojTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        DescAredonmentojTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                DescAredonmentojTextFieldFocusGained(evt);
            }
        });
        DescAredonmentojTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DescAredonmentojTextFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                DescAredonmentojTextFieldKeyReleased(evt);
            }
        });

        jPanelValorDevolvido.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Valor Devolvido", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 8))); // NOI18N

        ValorDevolvidojTextField.setEditable(false);
        ValorDevolvidojTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        ValorDevolvidojTextField.setToolTipText("Valor Devolvido");
        ValorDevolvidojTextField.setFocusable(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${valorDevolvido}"), ValorDevolvidojTextField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout jPanelValorDevolvidoLayout = new javax.swing.GroupLayout(jPanelValorDevolvido);
        jPanelValorDevolvido.setLayout(jPanelValorDevolvidoLayout);
        jPanelValorDevolvidoLayout.setHorizontalGroup(
            jPanelValorDevolvidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ValorDevolvidojTextField, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanelValorDevolvidoLayout.setVerticalGroup(
            jPanelValorDevolvidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ValorDevolvidojTextField)
        );

        jPanelDesconto.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Valor Desconto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 8))); // NOI18N

        TotalDescontoValor.setEditable(false);
        TotalDescontoValor.setBackground(new java.awt.Color(204, 102, 255));
        TotalDescontoValor.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        TotalDescontoValor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        TotalDescontoValor.setText("0,00");
        TotalDescontoValor.setToolTipText("Valor Desconto");

        javax.swing.GroupLayout jPanelDescontoLayout = new javax.swing.GroupLayout(jPanelDesconto);
        jPanelDesconto.setLayout(jPanelDescontoLayout);
        jPanelDescontoLayout.setHorizontalGroup(
            jPanelDescontoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TotalDescontoValor, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanelDescontoLayout.setVerticalGroup(
            jPanelDescontoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TotalDescontoValor, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jLabelCliente.setBackground(new java.awt.Color(255, 255, 51));
        jLabelCliente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelCliente.setText(" Erro");
        jLabelCliente.setFocusable(false);
        jLabelCliente.setOpaque(true);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Cliente:");
        jLabel4.setToolTipText("");

        ClientejTextField.setToolTipText("");
        ClientejTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ClientejTextFieldFocusGained(evt);
            }
        });
        ClientejTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ClientejTextFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ClientejTextFieldKeyReleased(evt);
            }
        });

        jButton1.setText("+");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ClientejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jLabelCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 749, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addGap(1, 1, 1))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(ClientejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabelCliente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTextFieldValorBruto.setEditable(false);
        jTextFieldValorBruto.setBackground(new java.awt.Color(255, 204, 204));
        jTextFieldValorBruto.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jTextFieldValorBruto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${valorBrutoOrcamento}"), jTextFieldValorBruto, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldValorLiquido, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldValorBruto, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DescontopercentjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DescAredonmentojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanelDesconto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanelValorDevolvido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonFechaVenda, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(DescontopercentjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DescAredonmentojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(jTextFieldValorBruto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jPanelDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanelValorDevolvido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldValorLiquido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(jButtonFechaVenda)))
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTable2.setFocusable(false);
        jTable2.setRequestFocusEnabled(false);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, jTable2);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${jsysProdutosT.idProduto}"));
        columnBinding.setColumnName("Código");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${jsysProdutosT.nomeProduto}"));
        columnBinding.setColumnName("Descrição");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${jsysProdutosT.marca}"));
        columnBinding.setColumnName("Marca");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${quantidade}"));
        columnBinding.setColumnName("Quantidade");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${precoVenda}"));
        columnBinding.setColumnName("Preço Und");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${totalProduto}"));
        columnBinding.setColumnName("Total Porduto");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(30);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(350);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTable2.getColumnModel().getColumn(3).setPreferredWidth(50);
            jTable2.getColumnModel().getColumn(3).setCellRenderer(new br.sql.defaultTableCellRenderer.CasasDecimais(br.JavaApplicationJsys.CASA_DECIMAL_QUANTIDADE));
            jTable2.getColumnModel().getColumn(4).setPreferredWidth(50);
            jTable2.getColumnModel().getColumn(4).setCellRenderer(new br.sql.defaultTableCellRenderer.CasasDecimais(br.JavaApplicationJsys.CASA_DECIMAL_VALOR_VENDA));
            jTable2.getColumnModel().getColumn(5).setPreferredWidth(50);
            jTable2.getColumnModel().getColumn(5).setCellRenderer(new br.sql.defaultTableCellRenderer.CasasDecimais(br.JavaApplicationJsys.CASA_DECIMAL_VALOR_VENDA));
        }

        novaVendajButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        novaVendajButton.setText("Nova Venda");
        novaVendajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novaVendajButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1024, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLVendedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(novaVendajButton))
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLVendedor)
                    .addComponent(novaVendajButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldQuantidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldQuantidadeKeyPressed
        int keyCode = evt.getKeyCode();
        if (keyCode == KeyEvent.VK_ENTER
                || keyCode == KeyEvent.VK_LEFT
                || keyCode == KeyEvent.VK_UP
                || keyCode == KeyEvent.VK_RIGHT
                || keyCode == KeyEvent.VK_DOWN) {
            jTFCodigoProduto.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldQuantidadeKeyPressed

    private void jTFCodigoProdutoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFCodigoProdutoKeyReleased
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_ENTER:
                if (!PAR.getForcarCodigoBarrasVenda() || tk.isCartao(500.0)) {
                    insertProduto();
                } else {
                    ConfirmaProduto cp = new ConfirmaProduto(null, true);
                    cp.setVisible(true);
                    if (cp.isConfirma()) {
                        insertProduto();
                    }
                }
                break;
            case KeyEvent.VK_F4:
                DescontopercentjTextField.requestFocus();
                break;
            case KeyEvent.VK_F10:
                ConsultaProdutos cp = new ConsultaProdutos(new javax.swing.JFrame(), true, jTFCodigoProduto);
                cp.setVisible(true);
                break;
            case KeyEvent.VK_LEFT:
                jTextFieldQuantidade.requestFocus();
                break;
            case KeyEvent.VK_UP:
                jTextFieldQuantidade.requestFocus();
                break;
            case KeyEvent.VK_RIGHT:
                jTextFieldQuantidade.requestFocus();
                break;
            case KeyEvent.VK_DOWN:
                jTextFieldQuantidade.requestFocus();
                break;
            default:
                tk.ativar();
                setProdutoAtual(null);
                Map<Object, Object> filtro = new HashMap<>();
                filtro.put("codigoBarra", jTFCodigoProduto.getText());
                JsysIdProdutos p = (JsysIdProdutos) Retorna.findOneResult("JsysIdProdutos.findByCodigoBarra", filtro);
                if (p != null) {
                    filtro.clear();
                    filtro.put("idProduto", p.getIdProduto().getIdProduto());
                    filtro.put("idloja", Retorna.getLoja());
                    setProdutoAtual((JsysProdutosTPrecos) Retorna.findOneResult("JsysProdutosTPrecos.findByIdProdutoAndIdloja", filtro));
                }
                break;
        }
    }//GEN-LAST:event_jTFCodigoProdutoKeyReleased

    private void jTFCodigoProdutoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFCodigoProdutoFocusGained
        jTFCodigoProduto.selectAll();
    }//GEN-LAST:event_jTFCodigoProdutoFocusGained

    private void jTextFieldQuantidadeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldQuantidadeFocusGained
        jTextFieldQuantidade.selectAll();
    }//GEN-LAST:event_jTextFieldQuantidadeFocusGained

    private void novaVendajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novaVendajButtonActionPerformed
        dispose();
        VendasJanelaAbertura f = new VendasJanelaAbertura();
        if (br.JavaApplicationJsys.isFechaSystemaVendas()) {
            f.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
        }
        f.setUltimaVenda(orcamento);
        f.setUltimaVendaValor(totalOrcamentoliquido);
        f.setUltimaVendaFormaPgto(getTituloEntrada());
        f.setVisible(true);
    }//GEN-LAST:event_novaVendajButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ClientesJanelaEdit cadCliente = new ClientesJanelaEdit(new javax.swing.JFrame(), true, new JsysClientes(), true);
        cadCliente.setVisible(true);
        if (cadCliente.isConfirmaClientes()) {
            ClientejTextField.setText(cadCliente.getRegistroJsysClientes().getIdCliente().toString());
            setCliente();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void DescAredonmentojTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DescAredonmentojTextFieldKeyReleased
        totalOrcamentoliquido = ManagerDecimal.StringToDouble(DescAredonmentojTextField.getText());
        if (totalOrcamento != 0.0) {
            percentualDesconto = new BigDecimal(
                    (((totalOrcamentoliquido - totalOrcamento) * 100) / totalOrcamento) * -1)
                    .setScale(2, RoundingMode.HALF_UP).doubleValue();
            DescontopercentjTextField.setText(percentualDesconto.toString());
            TotalDescontoValor.setText(ManagerDecimal.converter(totalOrcamento - totalOrcamentoliquido));
        }
        if ("".equals(DescAredonmentojTextField.getText())) {
            totalOrcamentoliquido = totalOrcamento;
            valorEntrada = totalOrcamento;
            DescontopercentjTextField.setText("0");
            TotalDescontoValor.setText("0,00");
            percentualDesconto = 0.0;
        }
        setDesconAredondamento();
        jComboBoxFormaPagamentoItemStateChanged(null);
    }//GEN-LAST:event_DescAredonmentojTextFieldKeyReleased

    private void DescAredonmentojTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DescAredonmentojTextFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButtonFechaVenda.requestFocus();
        }
    }//GEN-LAST:event_DescAredonmentojTextFieldKeyPressed

    private void DescAredonmentojTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DescAredonmentojTextFieldFocusGained
        DescAredonmentojTextField.selectAll();
    }//GEN-LAST:event_DescAredonmentojTextFieldFocusGained

    private void jButtonFechaVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFechaVendaActionPerformed
        DescAredonmentojTextFieldKeyReleased(null);
        try {
            if (validacao()) {
                boolean continuar = true;
                do {
                    ficha = "";
                    ficha = JOptionPane.showInputDialog("Passe Ficha do Cliente");
                    if (ficha == null) {
                        continuar = false;
                    } else if (verificaFicha(ficha)) {
                        continuar = false;
                        double limiteDesconto = PAR.getLimiteDesconto() != null ? PAR.getLimiteDesconto().doubleValue() : 0.00;
                        if (percentualDesconto > limiteDesconto) {
                            LiberacaoGeralJanelaJDialog lg = new LiberacaoGeralJanelaJDialog(new javax.swing.JFrame(), true);
                            lg.setMensagem(new StringBuilder().append("Limite de ")
                                    .append(ManagerDecimal.converter(limiteDesconto, "##,#0%"))
                                    .append(" ultrapassado na Venda ")
                                    .append(orcamento).append(";")
                                    .append(System.lineSeparator())
                                    .append("desconto de ")
                                    .append(ManagerDecimal.converter(percentualDesconto, "##,#0%"))
                                    .append(" concedido.")
                                    .toString());
                            lg.setId(orcamento);
                            lg.setTipo(0);
                            lg.setVisible(true);
                            if (lg.isConfirma()) {
                                fechaVenda();
                                novaVendajButtonActionPerformed(null);
                            }
                        } else {
                            fechaVenda();
                            novaVendajButtonActionPerformed(null);
                        }
                    }
                } while (continuar);
            }
        } catch (HeadlessException e) {
            Log.registraErro(this.getClass().getName(), "jButtonFechaVendaActionPerformed", e);
        }
    }//GEN-LAST:event_jButtonFechaVendaActionPerformed

    private void jComboBoxFormaPagamentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxFormaPagamentoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jComboBoxTituloEntrada.requestFocus();
        }
    }//GEN-LAST:event_jComboBoxFormaPagamentoKeyPressed

    private void jComboBoxFormaPagamentoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxFormaPagamentoItemStateChanged
        try {
            //String formaPagt[] = formaPagt();
            if (formaPagt().length > 1) {
                valorEntrada = totalOrcamentoliquido / formaPagt().length;
                valorRestanteDiv = totalOrcamentoliquido / formaPagt().length;
                valorRestante = valorRestanteDiv * (formaPagt().length - 1);
            } else {
                valorEntrada = totalOrcamentoliquido;
                valorRestante = 0.0;
                valorRestanteDiv = 0.0;
            }
            jTextFieldValorEntradaFocusLost(null);
        } catch (Exception e) {
            Log.registraErro(this.getClass().getName(), "setParcelamento", e);
        }
    }//GEN-LAST:event_jComboBoxFormaPagamentoItemStateChanged

    private void jComboBoxTituloEntradaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxTituloEntradaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jTextFieldValorEntrada.requestFocus();
        }
    }//GEN-LAST:event_jComboBoxTituloEntradaKeyPressed

    private void jTextFieldValorEntradaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldValorEntradaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jComboBoxTituloRestantante.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldValorEntradaKeyPressed

    private void jTextFieldValorEntradaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldValorEntradaKeyReleased
        //String formaPagt[] = formaPagt();
        if (formaPagt().length > 1) {
            try {
                valorEntrada = ManagerDecimal.StringToDouble(jTextFieldValorEntrada.getText());
                valorRestante = (totalOrcamentoliquido - valorEntrada);
                valorRestanteDiv = (valorRestante / (formaPagt().length - 1));
            } catch (NumberFormatException e) {
                Log.registraErro(this.getClass().getName(), "jTextFieldValorEntradaKeyReleased", e);
            }
        }
    }//GEN-LAST:event_jTextFieldValorEntradaKeyReleased

    private void jTextFieldValorEntradaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldValorEntradaFocusGained
        jTextFieldValorEntrada.selectAll();
    }//GEN-LAST:event_jTextFieldValorEntradaFocusGained

    private void jTextFieldValorEntradaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldValorEntradaFocusLost
        jTextFieldValorEntrada.setText(ManagerDecimal.converter(valorEntrada, "R$ #,##0.00"));
        jTextFieldValorRestante.setText(ManagerDecimal.converter(valorRestante, "R$ #,##0.00"));
        jTextFieldValorRestantediv.setText(ManagerDecimal.converter(valorRestanteDiv, "R$ #,##0.00"));
        jComboBoxTituloEntrada.setSelectedItem(getPlanoPagto().getDocEntrada());
        jComboBoxTituloRestantante.setSelectedItem(getPlanoPagto().getDocRestante());
    }//GEN-LAST:event_jTextFieldValorEntradaFocusLost

    private void jComboBoxTituloRestantanteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxTituloRestantanteKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButtonFechaVenda.requestFocus();
        }
    }//GEN-LAST:event_jComboBoxTituloRestantanteKeyPressed

    private void DescontopercentjTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DescontopercentjTextFieldKeyReleased
        percentualDesconto = ManagerDecimal.StringToDouble(DescontopercentjTextField.getText());
        if (percentualDesconto <= 100) {
            totalOrcamentoliquido = new BigDecimal(
                    totalOrcamento - ((percentualDesconto / 100.0) * totalOrcamento))
                    .setScale(2, RoundingMode.HALF_UP)
                    .doubleValue();
            DescAredonmentojTextField.setText(ManagerDecimal.converter(totalOrcamentoliquido, ManagerDecimal.TIPO_2));
            TotalDescontoValor.setText(ManagerDecimal.converter(totalOrcamento - totalOrcamentoliquido));
        }
        setDesconAredondamento();
        jComboBoxFormaPagamentoItemStateChanged(null);
    }//GEN-LAST:event_DescontopercentjTextFieldKeyReleased

    private void DescontopercentjTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DescontopercentjTextFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            DescAredonmentojTextField.requestFocus();
        }
    }//GEN-LAST:event_DescontopercentjTextFieldKeyPressed

    private void DescontopercentjTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DescontopercentjTextFieldFocusGained
        DescontopercentjTextField.selectAll();
    }//GEN-LAST:event_DescontopercentjTextFieldFocusGained

    private void ClientejTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ClientejTextFieldKeyReleased
        setCliente();
    }//GEN-LAST:event_ClientejTextFieldKeyReleased

    private void ClientejTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ClientejTextFieldKeyPressed
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_ENTER:
                DescontopercentjTextField.requestFocus();
                break;
            case KeyEvent.VK_F10:
                ConsultaClientes cc = new ConsultaClientes(null, true, ClientejTextField.getText());
                Toolkit toolkit = Toolkit.getDefaultToolkit();
                Dimension screenSize = toolkit.getScreenSize();
                cc.setBounds(0, 0, screenSize.width, screenSize.height);
                cc.setVisible(true);
                ClientejTextField.setText(cc.getRetorno());
                break;
        }
    }//GEN-LAST:event_ClientejTextFieldKeyPressed

    private void ClientejTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ClientejTextFieldFocusGained
        ClientejTextField.selectAll();
    }//GEN-LAST:event_ClientejTextFieldFocusGained

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ClientejTextField;
    private javax.swing.JTextField DescAredonmentojTextField;
    private javax.swing.JTextField DescontopercentjTextField;
    private javax.swing.JTextField TotalDescontoValor;
    private javax.swing.JTextField ValorDevolvidojTextField;
    private javax.swing.JLabel datajLabel1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonFechaVenda;
    private javax.swing.JComboBox jComboBoxFormaPagamento;
    private javax.swing.JComboBox jComboBoxTituloEntrada;
    private javax.swing.JComboBox jComboBoxTituloRestantante;
    private javax.swing.JLabel jLOrcamento;
    private javax.swing.JLabel jLVendedor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelCliente;
    private javax.swing.JLabel jLabelDescricaoProdutoBusca;
    private javax.swing.JLabel jLabelDevolucao;
    private javax.swing.JLabel jLabelMarca;
    private javax.swing.JLabel jLabelSecao;
    private javax.swing.JLabel jLabelVendaFechada2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanelDesconto;
    private javax.swing.JPanel jPanelValorDevolvido;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTFCodigoProduto;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextFieldQuantidade;
    private javax.swing.JTextField jTextFieldTotalOrcamento;
    private javax.swing.JTextField jTextFieldValorBruto;
    private javax.swing.JTextField jTextFieldValorEntrada;
    private javax.swing.JTextField jTextFieldValorLiquido;
    private javax.swing.JTextField jTextFieldValorRestante;
    private javax.swing.JTextField jTextFieldValorRestantediv;
    private javax.swing.JTextField jTextFieldValorUnd;
    private java.util.List<br.sql.bean.JsysOrcamentoItens> list;
    private java.util.List<br.sql.bean.views.JsysPlanoPagto> listPlanoPagto;
    private java.util.List<br.sql.bean.JsysTitulos> listTitulos;
    private javax.swing.JButton novaVendajButton;
    private javax.persistence.Query query;
    private javax.persistence.Query queryPlanoPagto;
    private javax.persistence.Query queryTitulos;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    @SuppressWarnings("unchecked")
    private void mostraProdutos() {
        query = ConnectionFactory.getEntityManagerNew().createNamedQuery("JsysOrcamentoItens.findByIdOrcamento");
        query.setParameter("idOrcamento", orcamento);
        java.util.Collection rs = query.getResultList();
        for (Object entity : rs) {
            ConnectionFactory.getEntityManagerNew().refresh(entity);
        }
        list.clear();
        list.addAll(rs);
    }

    private void setCliente() {
        setClienteAtual(null);
        try {
            if (Validar.Int(ClientejTextField.getText())) {
                Map<Object, Object> filtro = new HashMap<>();
                filtro.put("idCliente", Integer.parseInt(ClientejTextField.getText()));
                JsysClientes c = (JsysClientes) Retorna.findOneResult("JsysClientes.findByIdClienteIsAtivo", filtro);
                if (c != null) {
                    setClienteAtual(c);
                }
            }
        } catch (NumberFormatException e) {
            Log.registraErro(this.getClass().getName(), "setCliente", e);
        }
    }

    private void calculaTotalProdutos() {
        mostraProdutos();
        if (jTable2.getRowCount() > 0) {
            Double val = (double) 0, valdev = (double) 0;
            BigDecimal[] quantidades = new BigDecimal[jTable2.getRowCount()];
            for (int c = 0; c < jTable2.getRowCount(); c++) {
                quantidades[c] = (BigDecimal) jTable2.getValueAt(c, 3);
                val += ((BigDecimal) jTable2.getValueAt(c, 5)).doubleValue();
                if (quantidades[c].doubleValue() < 0) {
                    valdev += (((BigDecimal) jTable2.getValueAt(c, 5)).doubleValue() * -1);
                }
            }
            totalOrcamento = val;
            totalOrcamentoliquido = val;
            valorEntrada = val;
            ValorDevolvido = valdev;
            DescontopercentjTextField.setText("");
            String valor = ManagerDecimal.converter(val);
            jTextFieldTotalOrcamento.setText(valor);
            jTextFieldValorBruto.setText(valor);
            jTextFieldValorLiquido.setText(valor);
            jTextFieldValorEntrada.setText(valor);
            devolucao = ValorDevolvido > 0.0;
            if (devolucao) {
                ValorDevolvidojTextField.setText(ManagerDecimal.converter(ValorDevolvido));
                jLabelDevolucao.setVisible(true);
                jPanelValorDevolvido.setVisible(true);
                ValorDevolvidojTextField.setVisible(true);
            }
        } else {
            jTextFieldTotalOrcamento.setText("R$ 0,00");
        }
        jTFCodigoProduto.setText("");
        jTextFieldQuantidade.setText("1");
        setDescricao();
        jTFCodigoProduto.requestFocus();
    }

    private void fechaVenda() {
        final Progress p = new Progress();
        SwingWorker worker = new SwingWorker() {
            @Override
            protected Integer doInBackground() throws Exception {
                StringBuilder script = new StringBuilder();
                script.append("FechaVenda(").append(vendedor.getIdFuncionario())
                        .append(", ").append(clienteAtual.getIdCliente().toString())
                        .append(", '").append(ManagerData.convertUsDate(ManagerData.getDate()))
                        .append("', ").append(orcamento).append(", ").append(totalOrcamento)
                        .append(", ").append(totalOrcamentoliquido)
                        .append(", ").append(valorDesconto)
                        .append(", '").append(getTituloEntrada())
                        .append("', '").append(getTituloRestante())
                        .append("', ").append(valorEntrada)
                        .append(", ").append(valorRestanteDiv)
                        .append(", '").append(getPlanoPagto().getDescPlano())
                        .append("', '").append(Menu.getNomeUsuario())
                        .append("', '").append(devolucao ? "Devolução" : "Balcão")
                        .append("', ").append(ValorDevolvido)
                        .append(", ").append(ficha).append(")");
                return DADOS.execProcudureRetInt(script);
            }

            @Override
            protected void done() {
                super.done();
                try {
                    if ((Integer) get() == 1) {
                        disableObejetos();
                        br.sql.util.Impressao.vendaAPagar(orcamento);
                    } else {
                        mensagem("Não Foi Posivel Fechar a Venda");
                    }
                } catch (InterruptedException | ExecutionException e) {
                    Log.registraErro(this.getClass().getName(), "FechaVenda", e);
                }
                p.dispose();
            }
        };
        worker.execute();
        p.setVisible(true);
    }

    private String[] formaPagt() {
        //String formaPagt[] = ;
        return getPlanoPagto().getDescPlano().split("/");
    }

    private void disableObejetos() {
        jButtonFechaVenda.setEnabled(false);
        jTFCodigoProduto.setEnabled(false);
        jTFCodigoProduto.setEditable(false);
        ClientejTextField.setEnabled(false);
        ClientejTextField.setEditable(false);
        DescontopercentjTextField.setEnabled(false);
        DescontopercentjTextField.setEditable(false);
        DescAredonmentojTextField.setEditable(false);
        DescAredonmentojTextField.setEnabled(false);
        jTextFieldQuantidade.setEnabled(false);
        jTextFieldQuantidade.setEditable(false);
        jComboBoxFormaPagamento.setEditable(false);
        jComboBoxFormaPagamento.setEnabled(false);
        jComboBoxTituloEntrada.setEditable(false);
        jComboBoxTituloEntrada.setEnabled(false);
        jTextFieldValorEntrada.setEditable(false);
        jTextFieldValorEntrada.setEnabled(false);
        ClientejTextField.setEditable(false);
        ClientejTextField.setEnabled(false);
        jComboBoxTituloRestantante.setEditable(false);
        jComboBoxTituloRestantante.setEnabled(false);
//        jLabelVendaFechada0.setVisible(true);
//        jLabelVendaFechada1.setVisible(true);
        jLabelVendaFechada2.setVisible(true);
        novaVendajButton.requestFocus();
    }

    private boolean validacao() {
        if (clienteAtual == null) {
            mensagem("Venda sem cliente na venda");
            return false;
        }
        if (totalOrcamentoliquido < -0.10) {
            mensagem("Valor da Venda Negativo");
            return false;
        }
        if (Objects.equals(clienteAtual.getIdCliente(), PAR.getIdConsumidorFinal()) & !getPlanoPagto().getDescPlano().equals("00")) {
            mensagem("Para Consumidor Final Venda somente Avista");
            return false;
        }
        if (jTable2.getRowCount() == 0) {
            mensagem("Venda sem Produtos");
            return false;
        }
        return true;
    }

    private void mensagem(String valor) {
        JOptionPane.showMessageDialog(null, valor, "Erro", JOptionPane.ERROR_MESSAGE);
    }

    private JsysPlanoPagto getPlanoPagto() {
        return ((JsysPlanoPagto) jComboBoxFormaPagamento.getSelectedItem()); // .getDescPlano()
    }

    private void setDesconAredondamento() {
        try {
            if ("".equals(DescontopercentjTextField.getText())) {
                totalOrcamentoliquido = totalOrcamento;
                valorEntrada = totalOrcamento;
            }
            String x = ManagerDecimal.converter(totalOrcamentoliquido);
            BigDecimal valordesc = new BigDecimal(totalOrcamento - totalOrcamentoliquido).setScale(2, RoundingMode.HALF_UP);
            valorDesconto = valordesc.doubleValue();
            jTextFieldValorLiquido.setText(x);
            jTextFieldValorEntrada.setText(x);
        } catch (Exception e) {
            Log.registraErro(this.getClass().getName(), "setDesconAredondamento", e);
        }
    }

    private String getTituloEntrada() {
        return ((JsysTitulos) jComboBoxTituloEntrada.getSelectedItem()).getIdTitulo();
    }

    private String getTituloRestante() {
        return ((JsysTitulos) jComboBoxTituloRestantante.getSelectedItem()).getIdTitulo();
    }

    private void insertProduto() {
        final Progress p = new Progress();
        SwingWorker worker = new SwingWorker() {

            @Override
            protected Integer doInBackground() throws Exception {
                if (orcamento != 0 & Validar.isDouble(jTextFieldQuantidade.getText())) {
                    quantidade = Double.parseDouble(jTextFieldQuantidade.getText());
                    Map<Object, Object> filtro = new HashMap<>();
                    filtro.put("codigoBarra", jTFCodigoProduto.getText());
                    JsysIdProdutos p = (JsysIdProdutos) Retorna.findOneResult("JsysIdProdutos.findByCodigoBarra", filtro);
                    if (p != null) {
                        filtro.clear();
                        filtro.put("idProduto", p.getIdProduto().getIdProduto());
                        filtro.put("idloja", Retorna.getLoja());
                        produtoAtual = (JsysProdutosTPrecos) Retorna.findOneResult("JsysProdutosTPrecos.findByIdProdutoAndIdloja", filtro);
                    }
                    if (produtoAtual != null) {
                        StringBuilder sb = new StringBuilder();
                        sb.append("orcamentoItensIncluir(")
                                .append(orcamento.toString()).append(", ")
                                .append(produtoAtual.getJsysProdutosT().getIdProduto().toString()).append(", '")
                                .append(jTFCodigoProduto.getText()).append("', ")
                                .append(String.valueOf(quantidade)).append(")");
                        return DADOS.execProcudureRetInt(sb.toString());
                    } else {
                        return 2;
                    }
                } else { // se o numero da venda e igual a 0 esta com erro e fecha o formulario
                    return 3;
                }
            }

            @Override
            protected void done() {
                super.done();
                try {
                    switch ((int) get()) {
                        case 1:
                            calculaTotalProdutos();
                            p.dispose();
                            JOptionPane.showMessageDialog(null, "ERRO Produto nao Incluso na Venda !!!", "ERRO", JOptionPane.ERROR_MESSAGE);
                            break;
                        case 2:
                            calculaTotalProdutos();
                            p.dispose();
                            ConsultaProdutos cp = new ConsultaProdutos(new javax.swing.JFrame(), true, jTFCodigoProduto);
                            cp.setVisible(true);
                            break;
                        case 3:
                            calculaTotalProdutos();
                            p.dispose();
                            JOptionPane.showMessageDialog(null, "Erro no codigo do Vendedor! "
                                    + System.lineSeparator()
                                    + "Verificar Quantidade do Produto!", "ERRO", JOptionPane.ERROR_MESSAGE);
                            break;
                        default:
                            calculaTotalProdutos();
                            p.dispose();
                            break;
                    }
                } catch (InterruptedException | ExecutionException e) {
                    Log.registraErro(this.getClass().getName(), "Metodo", e, "ERRO Produto nao Incluso na Venda !!!");
                    calculaTotalProdutos();
                    p.dispose();
                }
            }
        };
        worker.execute();
        p.setVisible(true);
    }

    private void setProdutoAtual(JsysProdutosTPrecos produtoAtual) {
        this.produtoAtual = produtoAtual;
        if (produtoAtual != null) {
            StringBuilder marca = new StringBuilder();
            marca.append("Marca: ").append(produtoAtual.getJsysProdutosT().getMarca());
            StringBuilder secao = new StringBuilder();
            secao.append("Seção: ").append(produtoAtual.getJsysProdutosT().getIdFamilia().getNomeFamilia());
            jLabelMarca.setText(marca.toString());
            jLabelSecao.setText(secao.toString());
            jLabelDescricaoProdutoBusca.setText(" " + produtoAtual.getJsysProdutosT().getNomeProduto());
            jTextFieldValorUnd.setText(ManagerDecimal.converter(produtoAtual.getPrecoVenda()));
        } else {
            setDescricao();
        }
    }

    private void setDescricao() {
        jLabelMarca.setText("Marca:");
        jLabelSecao.setText("Seção:");
        jLabelDescricaoProdutoBusca.setText(" <- Codigo do Produto; F4 Fechamento da Venda; F10 Busca de Produtos");
        jTextFieldValorUnd.setText("R$ 0,00");
    }

    private void setClienteAtual(JsysClientes clienteAtual) {
        this.clienteAtual = clienteAtual;
        if (clienteAtual != null) {
            jLabelCliente.setText(" " + clienteAtual.getIdCliente().toString() + " - " + clienteAtual.getNomeCorentista());
        } else {
            jLabelCliente.setText(" Cliente Não Encontrado");
        }
    }

    private boolean verificaFicha(String f) {
        if (PAR.getCartaoVendas()) {
            if (f.trim().equals("")) {
                return false;
            }
            try {
                StringBuilder sql = new StringBuilder();
                sql.append("SELECT ficha FROM jsysOrcamento ")
                        .append("WHERE (cancelado = 0) AND (vendido = 1) AND (entregue = 0) and ")
                        .append("(ficha = ").append(f).append(")");
                ResultSet r = DADOS.execSQL(sql.toString());
                if (r.next()) {
                    return false;
                }
            } catch (SQLException ignore) {
                return false;
            }
        }
        return true;
    }
}
