package br.sql.janelas.movimento;

import br.sql.acesso.ConnectionFactory;
import br.sql.bean.AjusteEstoque;
import br.sql.bean.AjusteEstoqueItens;
import br.sql.bean.AjusteEstoqueItensPK;
import br.sql.bean.JsysProdutosTPrecos;
import br.sql.bean.views.JsysIdProdutos;
import br.sql.log.Log;
import br.sql.util.ManagerData;
import br.sql.util.ManagerDecimal;
import br.sql.util.Progress;
import br.sql.util.Reconta;
import br.sql.util.Retorna;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingWorker;
import jsys.sql.Menu;

/**
 *
 * @author Juliano Alves Medina
 */
public class AjusteEstoqueJanela extends JPanel {

    private AjusteEstoque ajusteAtual;
    private JsysProdutosTPrecos produtoAtual;

    public AjusteEstoqueJanela() {
        initComponents();
        br.sql.util.Reconta.estoque(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        query = java.beans.Beans.isDesignTime() ? null : ConnectionFactory.getEntityManagerNew().createQuery("SELECT a FROM AjusteEstoque a WHERE a.fechado = false");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        reabrirButon = new javax.swing.JButton();
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        newButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        emAbertoCBX = new javax.swing.JCheckBox();
        todosCBX = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        dataInicial = new com.toedter.calendar.JDateChooser();
        dataFinal = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        deleteDetailButton = new javax.swing.JButton();
        detailScrollPane = new javax.swing.JScrollPane();
        detailTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        usuarioTF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        dataTF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        codigoTF = new javax.swing.JTextField();
        descricaoTF = new javax.swing.JTextField();
        quantidadeTF = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        estoqueTF = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        ajustadoTF = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        codigoJLB = new javax.swing.JLabel();

        FormListener formListener = new FormListener();

        jTabbedPane1.addChangeListener(formListener);

        reabrirButon.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        reabrirButon.setForeground(new java.awt.Color(255, 0, 0));
        reabrirButon.setText("Reabrir");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), reabrirButon, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        reabrirButon.addActionListener(formListener);

        masterTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        masterTable.setColumnSelectionAllowed(true);
        masterTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idAjusteEstoque}"));
        columnBinding.setColumnName("Codigo");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${data}"));
        columnBinding.setColumnName("Data");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idUsuario}"));
        columnBinding.setColumnName("Id Usuario");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${usuario}"));
        columnBinding.setColumnName("Usuario");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${totalCompra}"));
        columnBinding.setColumnName("Total Compra");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${totalVenda}"));
        columnBinding.setColumnName("Total Venda");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${obs}"));
        columnBinding.setColumnName("Obs");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${fechado}"));
        columnBinding.setColumnName("Fechado");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idUsuarioCancelamento}"));
        columnBinding.setColumnName("Usuario Can");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterScrollPane.setViewportView(masterTable);
        masterTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (masterTable.getColumnModel().getColumnCount() > 0) {
            masterTable.getColumnModel().getColumn(0).setPreferredWidth(80);
            masterTable.getColumnModel().getColumn(1).setPreferredWidth(80);
            masterTable.getColumnModel().getColumn(2).setPreferredWidth(100);
            masterTable.getColumnModel().getColumn(3).setPreferredWidth(250);
            masterTable.getColumnModel().getColumn(4).setPreferredWidth(80);
            masterTable.getColumnModel().getColumn(5).setPreferredWidth(80);
            masterTable.getColumnModel().getColumn(6).setPreferredWidth(150);
            masterTable.getColumnModel().getColumn(7).setPreferredWidth(60);
        }

        newButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        newButton.setText("Novo");
        newButton.setToolTipText("");
        newButton.addActionListener(formListener);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtro"));

        emAbertoCBX.setSelected(true);
        emAbertoCBX.setText("Em Aberto");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, todosCBX, org.jdesktop.beansbinding.ELProperty.create("${!selected}"), emAbertoCBX, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        todosCBX.setText("Todos");

        jButton1.setText("Filtrar");
        jButton1.addActionListener(formListener);

        dataInicial.setDate(ManagerData.getPrimeiroDiaDoMes());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, todosCBX, org.jdesktop.beansbinding.ELProperty.create("${!selected}"), dataInicial, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        dataFinal.setDate(ManagerData.getDate());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, todosCBX, org.jdesktop.beansbinding.ELProperty.create("${!selected}"), dataFinal, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(todosCBX)
                .addGap(55, 55, 55)
                .addComponent(dataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(dataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(emAbertoCBX)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(emAbertoCBX)
                        .addComponent(todosCBX)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 953, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(reabrirButon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(newButton))
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {newButton, reabrirButon});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reabrirButon)
                    .addComponent(newButton))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Ajustes", null, jPanel1, "");

        jPanel2.addFocusListener(formListener);

        deleteDetailButton.setForeground(new java.awt.Color(255, 0, 0));
        deleteDetailButton.setText("Remover Produto");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, detailTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), deleteDetailButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        deleteDetailButton.addActionListener(formListener);

        detailTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${selectedElement.ajusteEstoqueItensCollection}");
        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, eLProperty, detailTable);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${jsysProdutosT.idProduto}"));
        columnBinding.setColumnName("Codigo");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${jsysProdutosT.nomeProduto}"));
        columnBinding.setColumnName("Descrição");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${quantidadeAnterior}"));
        columnBinding.setColumnName("Qt Anterior");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${quantidade}"));
        columnBinding.setColumnName("Qt Ajustada");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${totalCompra}"));
        columnBinding.setColumnName("Total Compra");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${totalVenda}"));
        columnBinding.setColumnName("Total Venda");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        jTableBinding.setSourceUnreadableValue(java.util.Collections.emptyList());
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.fechado == false}"), detailTable, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        detailScrollPane.setViewportView(detailTable);
        if (detailTable.getColumnModel().getColumnCount() > 0) {
            detailTable.getColumnModel().getColumn(0).setPreferredWidth(40);
            detailTable.getColumnModel().getColumn(1).setPreferredWidth(200);
            detailTable.getColumnModel().getColumn(2).setPreferredWidth(40);
            detailTable.getColumnModel().getColumn(3).setPreferredWidth(40);
            detailTable.getColumnModel().getColumn(4).setPreferredWidth(40);
            detailTable.getColumnModel().getColumn(5).setPreferredWidth(40);
        }

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Usuário");

        usuarioTF.setEditable(false);
        usuarioTF.setBackground(new java.awt.Color(255, 255, 204));
        usuarioTF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Data");
        jLabel3.setToolTipText("");

        dataTF.setEditable(false);
        dataTF.setBackground(new java.awt.Color(255, 255, 204));
        dataTF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        dataTF.setToolTipText("");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Código");
        jLabel4.setToolTipText("");

        codigoTF.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        codigoTF.setToolTipText("Digite o código do produto");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.fechado == false}"), codigoTF, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        codigoTF.addKeyListener(formListener);

        descricaoTF.setEditable(false);
        descricaoTF.setBackground(new java.awt.Color(255, 255, 204));
        descricaoTF.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        descricaoTF.setText("<- Digite o codigo do Produto!!");
        descricaoTF.setToolTipText("");

        quantidadeTF.setDocument(new br.sql.plainDocument.QuantidadeVendaDocument("[^0-9^+^-]"));
        quantidadeTF.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        quantidadeTF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        quantidadeTF.setToolTipText("Digite a quantidade ajustada, podem ser digitados valores negativos, e pode se fazer somas EX: 50+50 ele vai registras um saldo de 100 no seu ajuste.");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.fechado == false}"), quantidadeTF, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        quantidadeTF.addKeyListener(formListener);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Quantidade");
        jLabel5.setToolTipText("");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Descrição");
        jLabel6.setToolTipText("");

        estoqueTF.setEditable(false);
        estoqueTF.setBackground(new java.awt.Color(255, 255, 204));
        estoqueTF.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        estoqueTF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        estoqueTF.setToolTipText("Estoque atual do produto");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Estoque");
        jLabel7.setToolTipText("");

        ajustadoTF.setEditable(false);
        ajustadoTF.setBackground(new java.awt.Color(255, 255, 204));
        ajustadoTF.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ajustadoTF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        ajustadoTF.setToolTipText("Aqui mostra o total do seu ajuste desejado");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Ajustado");
        jLabel8.setToolTipText("");

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton3.setText("Fechar");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.fechado == false}"), jButton3, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jButton3.addActionListener(formListener);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(detailScrollPane)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(usuarioTF, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE))
                        .addGap(453, 453, 453)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dataTF, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(codigoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(descricaoTF))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(estoqueTF, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(ajustadoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(quantidadeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(deleteDetailButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dataTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usuarioTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(codigoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(descricaoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quantidadeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ajustadoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(estoqueTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(detailScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteDetailButton)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Itens Ajuste", null, jPanel2, "");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Ajuste de Estoque");
        jLabel1.setToolTipText("");

        codigoJLB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        codigoJLB.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        codigoJLB.setText("0");
        codigoJLB.setToolTipText("");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(codigoJLB, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(codigoJLB, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.FocusListener, java.awt.event.KeyListener, javax.swing.event.ChangeListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == reabrirButon) {
                AjusteEstoqueJanela.this.reabrirButonActionPerformed(evt);
            }
            else if (evt.getSource() == newButton) {
                AjusteEstoqueJanela.this.newButtonActionPerformed(evt);
            }
            else if (evt.getSource() == jButton1) {
                AjusteEstoqueJanela.this.jButton1ActionPerformed(evt);
            }
            else if (evt.getSource() == deleteDetailButton) {
                AjusteEstoqueJanela.this.deleteDetailButtonActionPerformed(evt);
            }
            else if (evt.getSource() == jButton3) {
                AjusteEstoqueJanela.this.jButton3ActionPerformed(evt);
            }
        }

        public void focusGained(java.awt.event.FocusEvent evt) {
            if (evt.getSource() == jPanel2) {
                AjusteEstoqueJanela.this.jPanel2FocusGained(evt);
            }
        }

        public void focusLost(java.awt.event.FocusEvent evt) {
        }

        public void keyPressed(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == codigoTF) {
                AjusteEstoqueJanela.this.codigoTFKeyPressed(evt);
            }
            else if (evt.getSource() == quantidadeTF) {
                AjusteEstoqueJanela.this.quantidadeTFKeyPressed(evt);
            }
        }

        public void keyReleased(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == codigoTF) {
                AjusteEstoqueJanela.this.codigoTFKeyReleased(evt);
            }
            else if (evt.getSource() == quantidadeTF) {
                AjusteEstoqueJanela.this.quantidadeTFKeyReleased(evt);
            }
        }

        public void keyTyped(java.awt.event.KeyEvent evt) {
        }

        public void stateChanged(javax.swing.event.ChangeEvent evt) {
            if (evt.getSource() == jTabbedPane1) {
                AjusteEstoqueJanela.this.jTabbedPane1StateChanged(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    private void deleteDetailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDetailButtonActionPerformed
        try {
            int index = masterTable.getSelectedRow();
            AjusteEstoque A = list.get(masterTable.convertRowIndexToModel(index));
            Collection<AjusteEstoqueItens> as = A.getAjusteEstoqueItensCollection();
            int[] selected = detailTable.getSelectedRows();
            List<AjusteEstoqueItens> toRemove = new ArrayList<>(selected.length);
            for (int idx = 0; idx < selected.length; idx++) {
                selected[idx] = detailTable.convertRowIndexToModel(selected[idx]);
                int count = 0;
                Iterator<AjusteEstoqueItens> iter = as.iterator();
                while (count++ < selected[idx]) {
                    iter.next();
                }
                AjusteEstoqueItens a = iter.next();
                toRemove.add(a);
                ConnectionFactory.delete(a);
            }
            as.removeAll(toRemove);
            masterTable.clearSelection();
            masterTable.setRowSelectionInterval(index, index);
            codigoTF.requestFocus();
        } catch (Exception e) {
            Log.registraErro(this.getClass().getName(), "deleteDetailButtonActionPerformed", e);
        }
    }//GEN-LAST:event_deleteDetailButtonActionPerformed

    private void reabrirButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reabrirButonActionPerformed
        int index = masterTable.getSelectedRow();
        setAjuste();
        if (ajusteAtual.isFechado()) {
            ajusteAtual.setFechado(false);
            ajusteAtual.setIdUsuarioCancelamento(Menu.getidUsuario());
            ajusteAtual.setObs("Reaberta");
            ConnectionFactory.update(ajusteAtual);
            masterTable.clearSelection();
            masterTable.setRowSelectionInterval(index, index);
            br.sql.util.Reconta.estoque(false);
            JOptionPane.showMessageDialog(null, "Ajuste Reaberto com Sucesso", "MENSAGEM", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_reabrirButonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        AjusteEstoque A = new AjusteEstoque();
        A.setCancelada(false);
        A.setFechado(false);
        A.setData(ManagerData.getDate());
        A.setIdUsuario(Menu.getidUsuario());
        A.setUsuario(Menu.getNomeUsuario());
        A.setTotalCompra(BigDecimal.ZERO);
        A.setTotalVenda(BigDecimal.ZERO);
        ConnectionFactory.insert(A);
        list.add(A);
        int row = list.size() - 1;
        masterTable.setRowSelectionInterval(row, row);
        masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
        setAjuste();
        jTabbedPane1.setSelectedComponent(this.jPanel2);
        jPanel2.requestFocus();
    }//GEN-LAST:event_newButtonActionPerformed

    private void codigoTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoTFKeyReleased
        produtoAtual = null;
        Map<Object, Object> filtro = new HashMap<>();
        filtro.put("codigoBarra", codigoTF.getText());
        JsysIdProdutos p = (JsysIdProdutos) Retorna.findOneResult("JsysIdProdutos.findByCodigoBarra", filtro);
        if (p != null) {
            filtro.clear();
            filtro.put("idProduto", p.getIdProduto().getIdProduto());
            filtro.put("idloja", Retorna.getLoja());
            produtoAtual = (JsysProdutosTPrecos) Retorna.findOneResult("JsysProdutosTPrecos.findByIdProdutoAndIdloja", filtro);
            descricaoTF.setText(produtoAtual.getJsysProdutosT().getNomeProduto());
            estoqueTF.setText(ManagerDecimal.converter(produtoAtual.getJsysProdutosT().getEstoqueGeral(), "#,##0"));
            ajustadoTF.setText(ManagerDecimal.converter(produtoAtual.getJsysProdutosT().getEstoqueGeral(), "#,##0"));
        } else {
            descricaoTF.setText("<- Digite o codigo do Produto!!");
            quantidadeTF.setText("");
            estoqueTF.setText("");
            ajustadoTF.setText("");
        }
    }//GEN-LAST:event_codigoTFKeyReleased

    private void codigoTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoTFKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            quantidadeTF.requestFocus();
        }
    }//GEN-LAST:event_codigoTFKeyPressed

    @SuppressWarnings("unchecked")
    private void quantidadeTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantidadeTFKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (produtoAtual != null) {
                final Progress p = new Progress();
                SwingWorker worker = new SwingWorker() {
                    @Override
                    protected Void doInBackground() throws Exception {
                        int index = masterTable.getSelectedRow();
                        Collection<AjusteEstoqueItens> as = ajusteAtual.getAjusteEstoqueItensCollection();
                        if (as == null) {
                            as = new LinkedList<>();
                            ajusteAtual.setAjusteEstoqueItensCollection((List) as);
                        }
                        AjusteEstoqueItens a = new AjusteEstoqueItens();
                        a.setAjusteEstoqueItensPK(new AjusteEstoqueItensPK(ajusteAtual.getIdAjusteEstoque(), produtoAtual.getJsysProdutosT().getIdProduto()));
                        a.setAjusteEstoque(ajusteAtual);
                        a.setJsysProdutosT(produtoAtual.getJsysProdutosT());
                        a.setQuantidadeAnterior(produtoAtual.getJsysProdutosT().getEstoqueGeral());
                        a.setTotalCompra(produtoAtual.getJsysProdutosT().getPrecoCompra().multiply(getQuantidade()));
                        a.setTotalVenda(produtoAtual.getPrecoVenda().multiply(getQuantidade()));
                        if (as.contains(a)) {
                            BigDecimal somaIntes;
                            for (AjusteEstoqueItens ajust : as) {
                                if (ajust.getAjusteEstoqueItensPK().getIdProduto() == a.getJsysProdutosT().getIdProduto()) {
                                    somaIntes = getQuantidade();
                                    somaIntes = somaIntes.add(ajust.getQuantidade());
                                    a.setQuantidade(somaIntes);
                                    ConnectionFactory.update(a);
                                }
                            }
                        } else {
                            a.setQuantidade(getQuantidade());
                            ConnectionFactory.insert(a);
                            as.add(a);
                        }
                        masterTable.clearSelection();
                        masterTable.setRowSelectionInterval(index, index);
                        int row = as.size() - 1;
                        detailTable.setRowSelectionInterval(row, row);
                        detailTable.scrollRectToVisible(detailTable.getCellRect(row, 0, true));
                        codigoTF.setText("");
                        descricaoTF.setText("<- Digite o Código do Produto!");
                        quantidadeTF.setText("");
                        estoqueTF.setText("");
                        ajustadoTF.setText("");
                        detailTable.repaint();
                        return null;
                    }

                    @Override
                    protected void done() {
                        super.done();
                        p.dispose();
                        codigoTF.requestFocus();
                    }
                };
                worker.execute();
                p.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Codigo do Produto Não Encontrado! "
                        + System.lineSeparator()
                        + "Quantidade Invalida!");
            }
        }
    }//GEN-LAST:event_quantidadeTFKeyPressed

    private void quantidadeTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantidadeTFKeyReleased
        try {
            if (produtoAtual != null) {
                BigDecimal resultado = BigDecimal.ZERO;
                resultado = resultado.add(produtoAtual.getJsysProdutosT().getEstoqueGeral().add(getQuantidade()));
                ajustadoTF.setText(ManagerDecimal.converter(resultado, "#,##0"));
            }
        } catch (Exception e) {
            ajustadoTF.setText(ManagerDecimal.converter(0.0, "#,##0"));
        }
    }//GEN-LAST:event_quantidadeTFKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Map<Object, Object> filtro = new HashMap<>();
        list.clear();
        if (todosCBX.isSelected()) {
            for (Object O : Retorna.findList("AjusteEstoque.findAll")) {
                AjusteEstoque a = (AjusteEstoque) O;
                list.add(a);
            }
        } else {
            filtro.clear();
            filtro.put("fechado", !emAbertoCBX.isSelected());
            filtro.put("dataInicial", ManagerData.setHoraInicioDia(dataInicial.getDate()));
            filtro.put("dataFinal", ManagerData.setHoraFimDia(dataFinal.getDate()));
            for (Object O : Retorna.findList("AjusteEstoque.findByFechadoAndData", filtro)) {
                AjusteEstoque a = (AjusteEstoque) O;
                list.add(a);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int index = masterTable.getSelectedRow();
        setAjuste();
        BigDecimal valorCompra = BigDecimal.ZERO;
        BigDecimal valorVenda = BigDecimal.ZERO;
        for (AjusteEstoqueItens iten : ajusteAtual.getAjusteEstoqueItensCollection()) {
            valorCompra = valorCompra.add(iten.getTotalCompra());
            valorVenda = valorVenda.add(iten.getTotalVenda());
        }
        ajusteAtual.setFechado(true);
        ajusteAtual.setTotalCompra(valorCompra);
        ajusteAtual.setTotalVenda(valorVenda);
        ConnectionFactory.update(ajusteAtual);
        Reconta.estoque(false);
        masterTable.clearSelection();
        masterTable.setRowSelectionInterval(index, index);
        detailTable.clearSelection();
        JOptionPane.showMessageDialog(null, "Ajuste Fechado com Sucesso", "MENSAGEM", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        int[] selected = masterTable.getSelectedRows();
        for (int idx = 0; idx < selected.length; idx++) {
            setAjuste();
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void jPanel2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel2FocusGained
        codigoTF.requestFocus();
    }//GEN-LAST:event_jPanel2FocusGained

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ajustadoTF;
    private javax.swing.JLabel codigoJLB;
    private javax.swing.JTextField codigoTF;
    private com.toedter.calendar.JDateChooser dataFinal;
    private com.toedter.calendar.JDateChooser dataInicial;
    private javax.swing.JTextField dataTF;
    private javax.swing.JButton deleteDetailButton;
    private javax.swing.JTextField descricaoTF;
    private javax.swing.JScrollPane detailScrollPane;
    private javax.swing.JTable detailTable;
    private javax.swing.JCheckBox emAbertoCBX;
    private javax.swing.JTextField estoqueTF;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private java.util.List<AjusteEstoque> list;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private javax.swing.JButton newButton;
    private javax.swing.JTextField quantidadeTF;
    private javax.persistence.Query query;
    private javax.swing.JButton reabrirButon;
    private javax.swing.JCheckBox todosCBX;
    private javax.swing.JTextField usuarioTF;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private void setAjuste() {
        int index = masterTable.getSelectedRow();
        AjusteEstoque a = list.get(masterTable.convertRowIndexToModel(index));
        ajusteAtual = a;
        usuarioTF.setText(a.getUsuario());
        codigoJLB.setText(a.getIdAjusteEstoque().toString());
        dataTF.setText(br.sql.util.ManagerData.convertBrDate(a.getData()));
    }

    private BigDecimal getQuantidade() {
        BigDecimal qt;
        String valor = quantidadeTF.getText();
        if (valor.matches("[^0-9^-]{" + valor.length() + "}")) {
            qt = br.sql.util.ManagerDecimal.StringToBigDecimal(valor);
        } else {
            qt = BigDecimal.ZERO;
            for (String v : valor.split("\\+")) {
                if (!v.isEmpty()) {
                    qt = qt.add(br.sql.util.ManagerDecimal.StringToBigDecimal(v));
                }
            }
        }
        return qt;
    }
}
