package br.sql.janelas.caixa;

import br.rel.filtros.FiltroDataInicialFinal;
import br.sql.acesso.ConnectionFactory;
import br.sql.acesso.SQLDatabaseConnection;
import br.sql.bean.JsysNFe;
import br.sql.bean.geral.titulosMarcados;
import br.sql.bean.views.JsysAvistaAberto;
import br.sql.defaultTableCellRenderer.CaixaResumo;
import br.sql.nfe.Janelas.NfceCancelamento;
import br.sql.nfe.Janelas.NfceEmissao;
import br.sql.nfe.Janelas.NfeEmissao;
import br.sql.log.Log;
import br.sql.tableCellRenderer.MarcarGridReceber;
import br.sql.util.ManagerData;
import br.sql.util.ManagerDecimal;
import br.sql.util.Progress;
import br.sql.util.ReportUtils;
import br.sql.util.Retorna;
import br.sql.util.Validar;
import java.awt.Color;
import java.awt.Component;
import java.awt.ComponentOrientation;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.ExecutionException;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import jsys.sql.Menu;

/**
 *
 * @author Juliano Alves Medina
 */
public final class RecebimentoCaixa extends javax.swing.JFrame {

    private JsysAvistaAberto registroSelecionado = null;
    private BigDecimal totalMarcado = BigDecimal.ZERO;
    private static final SQLDatabaseConnection DADOS = new SQLDatabaseConnection();

    private final ArrayList<titulosMarcados> titulosABaixar = new ArrayList<>();

    public RecebimentoCaixa() {
        initComponents();
        masterTable.getInputMap(JTable.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT)
                .put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false), 0);
        setValoresJconbobox();
        setSelecaoTabela();
        registrarAcoesDoTeclado(recebimento);
        atualizarVendas();
        setCursor(null);
    }

    @Override
    public void setVisible(boolean b) {
        super.setVisible(b);
        this.setFocusable(b);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        queryAvistaAberto = java.beans.Beans.isDesignTime() ? null : ConnectionFactory.getEntityManagerNew().createQuery("SELECT j FROM JsysAvistaAberto j");
        listAvistaAberto = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(queryAvistaAberto.getResultList());
        queryTitulos = java.beans.Beans.isDesignTime() ? null : ConnectionFactory.getEntityManagerNew().createQuery("SELECT j FROM JsysTitulos j WHERE j.ativo = true");
        listTitulos = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(queryTitulos.getResultList());
        queryResumoDeCaixa = java.beans.Beans.isDesignTime() ? null : ConnectionFactory.getEntityManagerNew().createQuery("SELECT m FROM JsysCaixa m WHERE m.tipo = '0'");
        listResumoDeCaixa = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(queryResumoDeCaixa.getResultList());
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        NomeCaixa = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        recebimento = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        valorPago = new javax.swing.JTextField();
        jButtonReceber = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        IdFatura = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        valoTroco = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        ValorTitulo = new javax.swing.JTextField();
        jComboBoxTitulos = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableUltimosReceb = new javax.swing.JTable();
        jButton12 = new javax.swing.JButton();
        totalMark = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        gerenciamentoCaixas = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableVendasRecebidas = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jCheckBoxTodosBancos = new javax.swing.JCheckBox();
        jButton7 = new javax.swing.JButton();
        jDateChooserFiltroCaixa = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Recebimento de Caixa");
        setExtendedState(MAXIMIZED_BOTH);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Recebimento de Caixa");
        jLabel1.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText(br.sql.util.ManagerData.getDataAtualTypeString());

        NomeCaixa.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        NomeCaixa.setForeground(new java.awt.Color(255, 0, 0));
        NomeCaixa.setText(String.valueOf(Menu.getIdBanco()) + " " + Menu.getNomeBanco());
        NomeCaixa.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(NomeCaixa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(NomeCaixa))
        );

        masterTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        masterTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        masterTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        masterTable.getTableHeader().setReorderingAllowed(false);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listAvistaAberto, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idReceber}"));
        columnBinding.setColumnName("Venda");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${seqReceber}"));
        columnBinding.setColumnName("Parcela");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nomeCorentista}"));
        columnBinding.setColumnName("Cliente");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dataEmissao}"));
        columnBinding.setColumnName("Data");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${ficha}"));
        columnBinding.setColumnName("Ficha");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valor}"));
        columnBinding.setColumnName("Valor");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valorPago}"));
        columnBinding.setColumnName("Valor Pago");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idTitulo}"));
        columnBinding.setColumnName("Titulo");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nomeVendedor}"));
        columnBinding.setColumnName("Vendedor");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterTable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                masterTableFocusGained(evt);
            }
        });
        masterTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                masterTableKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(masterTable);
        if (masterTable.getColumnModel().getColumnCount() > 0) {
            masterTable.getColumnModel().getColumn(0).setPreferredWidth(80);
            masterTable.getColumnModel().getColumn(0).setCellRenderer(new MarcarGridReceber(titulosABaixar));
            masterTable.getColumnModel().getColumn(1).setPreferredWidth(60);
            masterTable.getColumnModel().getColumn(2).setPreferredWidth(120);
            masterTable.getColumnModel().getColumn(3).setPreferredWidth(110);
            masterTable.getColumnModel().getColumn(4).setPreferredWidth(100);
            masterTable.getColumnModel().getColumn(5).setPreferredWidth(120);
            masterTable.getColumnModel().getColumn(5).setCellRenderer(new DestacaValor());
            masterTable.getColumnModel().getColumn(6).setPreferredWidth(120);
            masterTable.getColumnModel().getColumn(7).setPreferredWidth(70);
            masterTable.getColumnModel().getColumn(8).setPreferredWidth(350);
        }

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Baixa de Titulos"));

        valorPago.setDocument(new br.sql.plainDocument.MoedaCaixaDocument());
        valorPago.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        valorPago.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        valorPago.setToolTipText("Digite o Valor Pago Pelo Cliente");
        valorPago.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                valorPagoFocusGained(evt);
            }
        });
        valorPago.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                valorPagoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                valorPagoKeyReleased(evt);
            }
        });

        jButtonReceber.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonReceber.setText("Baixar");
        jButtonReceber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReceberActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        jLabel3.setText("Recebido:");
        jLabel3.setToolTipText("");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        jLabel4.setText("Troco:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        jLabel6.setText("Titulo:");
        jLabel6.setToolTipText("");

        IdFatura.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        IdFatura.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        IdFatura.setToolTipText("");
        IdFatura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                IdFaturaKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        jLabel5.setText("Titulo:");

        valoTroco.setEditable(false);
        valoTroco.setBackground(new java.awt.Color(255, 204, 204));
        valoTroco.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        valoTroco.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        valoTroco.setToolTipText("");
        valoTroco.setFocusable(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        jLabel7.setText("Valor:");
        jLabel7.setToolTipText("");

        ValorTitulo.setEditable(false);
        ValorTitulo.setBackground(new java.awt.Color(204, 255, 204));
        ValorTitulo.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        ValorTitulo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        ValorTitulo.setToolTipText("");
        ValorTitulo.setFocusable(false);

        jComboBoxTitulos.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        jComboBoxTitulos.setToolTipText("Seleciona o Titulo de Pagamento");
        jComboBoxTitulos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxTitulosKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3))
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jComboBoxTitulos, 0, 256, Short.MAX_VALUE)
                            .addComponent(valoTroco, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(valorPago, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(IdFatura, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ValorTitulo, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jButtonReceber, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(IdFatura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ValorTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(valorPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(valoTroco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxTitulos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonReceber, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Ultimos Recebimentos"));

        jTableUltimosReceb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTableUltimosReceb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableUltimosReceb.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableUltimosReceb.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(jTableUltimosReceb);

        jButton12.setText("Atualizar");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton12)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton12)
                .addContainerGap())
        );

        totalMark.setEditable(false);
        totalMark.setBackground(new java.awt.Color(255, 255, 0));
        totalMark.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        totalMark.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totalMark.setToolTipText("");

        jButton8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton8.setForeground(new java.awt.Color(0, 0, 204));
        jButton8.setText("Abertura de caixa");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(153, 102, 255));
        jButton2.setText("NFC-e");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(153, 102, 255));
        jButton3.setText("NF-E");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(204, 0, 0));
        jButton4.setText("Pagamento");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton11.setForeground(new java.awt.Color(204, 0, 0));
        jButton11.setText("Fechamento");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton13.setForeground(new java.awt.Color(255, 0, 0));
        jButton13.setText("Cancelar NFC-e");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton10.setForeground(new java.awt.Color(0, 0, 204));
        jButton10.setText("Convênios");
        jButton10.setToolTipText("");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton9.setForeground(new java.awt.Color(0, 102, 51));
        jButton9.setText("Relatorio");
        jButton9.setToolTipText("");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(0, 0, 204));
        jButton5.setText("Impressão");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 153, 51));
        jButton1.setText("F5 - Atualizar");
        jButton1.setToolTipText("Atuliza Vendas na Janela");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(0, 0, 204));
        jButton6.setText("Retiradas");
        jButton6.setToolTipText("");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton14.setText("Cliente Venda");
        jButton14.setToolTipText("");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Total Marcados");
        jLabel8.setToolTipText("");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel8))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton11)
                .addGap(18, 18, 18)
                .addComponent(jButton13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                .addComponent(jLabel8))
        );

        javax.swing.GroupLayout recebimentoLayout = new javax.swing.GroupLayout(recebimento);
        recebimento.setLayout(recebimentoLayout);
        recebimentoLayout.setHorizontalGroup(
            recebimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(recebimentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(recebimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(recebimentoLayout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 823, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(recebimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(totalMark))
                .addContainerGap())
        );
        recebimentoLayout.setVerticalGroup(
            recebimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(recebimentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(recebimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(recebimentoLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(recebimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(recebimentoLayout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(totalMark, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Recebimento", recebimento);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listResumoDeCaixa, tableVendasRecebidas);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tabelaOrigem}"));
        columnBinding.setColumnName("Origen");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${data}"));
        columnBinding.setColumnName("Data");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${hora}"));
        columnBinding.setColumnName("Hora");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${fatura}"));
        columnBinding.setColumnName("Fatura");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${banco.idBanco}"));
        columnBinding.setColumnName("Id Banco");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${banco.nomeBanco}"));
        columnBinding.setColumnName("Banco");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${titulo}"));
        columnBinding.setColumnName("Titulo");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${historico}"));
        columnBinding.setColumnName("Historico");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valor}"));
        columnBinding.setColumnName("Valor");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(tableVendasRecebidas);
        if (tableVendasRecebidas.getColumnModel().getColumnCount() > 0) {
            tableVendasRecebidas.getColumnModel().getColumn(0).setResizable(false);
            tableVendasRecebidas.getColumnModel().getColumn(0).setPreferredWidth(80);
            tableVendasRecebidas.getColumnModel().getColumn(1).setResizable(false);
            tableVendasRecebidas.getColumnModel().getColumn(1).setPreferredWidth(80);
            tableVendasRecebidas.getColumnModel().getColumn(2).setResizable(false);
            tableVendasRecebidas.getColumnModel().getColumn(2).setPreferredWidth(50);
            tableVendasRecebidas.getColumnModel().getColumn(3).setResizable(false);
            tableVendasRecebidas.getColumnModel().getColumn(3).setPreferredWidth(50);
            tableVendasRecebidas.getColumnModel().getColumn(4).setResizable(false);
            tableVendasRecebidas.getColumnModel().getColumn(4).setPreferredWidth(80);
            tableVendasRecebidas.getColumnModel().getColumn(5).setResizable(false);
            tableVendasRecebidas.getColumnModel().getColumn(5).setPreferredWidth(80);
            tableVendasRecebidas.getColumnModel().getColumn(6).setResizable(false);
            tableVendasRecebidas.getColumnModel().getColumn(6).setPreferredWidth(50);
            tableVendasRecebidas.getColumnModel().getColumn(7).setResizable(false);
            tableVendasRecebidas.getColumnModel().getColumn(7).setPreferredWidth(120);
            tableVendasRecebidas.getColumnModel().getColumn(8).setResizable(false);
            tableVendasRecebidas.getColumnModel().getColumn(8).setPreferredWidth(120);
        }

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtro"));

        jCheckBoxTodosBancos.setText("Todos Bancos");
        jCheckBoxTodosBancos.setToolTipText("");

        jButton7.setText("Confirma");
        jButton7.setToolTipText("Confirma o Filtro do Caixa");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jDateChooserFiltroCaixa.setToolTipText("Seleciona a Data para o Caixa");
        jDateChooserFiltroCaixa.setDate(ManagerData.getDate());

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBoxTodosBancos)
                .addGap(18, 18, 18)
                .addComponent(jDateChooserFiltroCaixa, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxTodosBancos)
                    .addComponent(jDateChooserFiltroCaixa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7))
                .addContainerGap())
        );

        javax.swing.GroupLayout gerenciamentoCaixasLayout = new javax.swing.GroupLayout(gerenciamentoCaixas);
        gerenciamentoCaixas.setLayout(gerenciamentoCaixasLayout);
        gerenciamentoCaixasLayout.setHorizontalGroup(
            gerenciamentoCaixasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gerenciamentoCaixasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(gerenciamentoCaixasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gerenciamentoCaixasLayout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1005, Short.MAX_VALUE))
                .addContainerGap())
        );
        gerenciamentoCaixasLayout.setVerticalGroup(
            gerenciamentoCaixasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gerenciamentoCaixasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Gerenciamento de Caixas", null, gerenciamentoCaixas, "");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("tab2");
        jTabbedPane1.getAccessibleContext().setAccessibleDescription("");

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        atualizarVendas();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void masterTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_masterTableKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            valorPago.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            try {
                setRegistroSelecionado();
                if (registroSelecionado != null) { // verifica se tem alguma linha selecionada
                    titulosMarcados tm = new titulosMarcados(registroSelecionado.getIdReceber(), registroSelecionado.getSeqReceber(), registroSelecionado.getValor(), registroSelecionado.getReceber());
                    if (titulosABaixar.contains(tm)) {
                        titulosABaixar.remove(tm); // totalMarcados = totalMarcados.subtract((BigDecimal) masterTable.getValueAt(masterTable.getSelectedRow(), 7));
                    } else {
                        titulosABaixar.add(tm);
                    }
                    totalMarcado = BigDecimal.ZERO;
                    for (titulosMarcados ta : titulosABaixar) {
                        totalMarcado = totalMarcado.add(ta.getValor());
                    }
                    totalMark.setText(ManagerDecimal.converter(totalMarcado, "R$ #,##0.00"));
                } else {
                    JOptionPane.showMessageDialog(null, "O Titulo não Pode Ser Baixado", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            } catch (HeadlessException e) {
                Log.registraErro(this.getClass().getName(), "masterTableKeyPressed", e);
            }
        }
        masterTable.repaint();
    }//GEN-LAST:event_masterTableKeyPressed

    private void jButtonReceberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReceberActionPerformed
        final Progress p = new Progress();
        SwingWorker worker = new SwingWorker() {
            @Override
            protected Integer doInBackground() throws Exception {
                StringBuilder sql;
                if (!titulosABaixar.isEmpty()) {
                    BigDecimal saldo = new BigDecimal(valorPago.getText().replace(".", "").replace(",", "."));
                    for (titulosMarcados tm : titulosABaixar) {
                        sql = new StringBuilder();
                        sql.append("BaixarTitulos(").append(tm.getIdReceber()).append(", ") //-- codigo da venda
                                .append(tm.getSeqReceber()).append(", ") // -- order de parcelas
                                .append(saldo).append(", ") // -- valor pago 
                                .append("'").append(jComboBoxTitulos.getSelectedItem().toString()).append("', ") //-- titulo de pagamento tipo dinhe, cheq, cart, deb
                                .append(Menu.getIdBanco()).append(", ") //-- codigo do caixa que esta recebendo a parcela
                                .append("'").append(Menu.getNomeUsuario()).append("', ") //-- usuario do sistema
                                .append("'").append(ManagerData.convertUsDate(ManagerData.setHoraInicioDia(ManagerData.getDate()))).append("', ") //-- data
                                .append("0, ") //-- e para quitar a parcela mesmo com o valor pago menor a ser cobrado
                                .append(tm.getReceber()).append(")"); //-- e um recebimento ou confimar um venda a prazo = 1 vai baixar o titulo, = 0 vai salvar o caixa que esta confimando o bonus 
                        int x = DADOS.execProcudureRetInt(sql.toString());
                        if (x == 1) {
                            saldo = saldo.subtract(tm.getValor());
                        }
                    }
                    titulosABaixar.clear();
                    totalMarcado = BigDecimal.ZERO;
                    return 1;
                } else {
                    sql = new StringBuilder();
                    sql.append("BaixarTitulos(").append(registroSelecionado.getIdReceber()).append(", ")
                            .append(registroSelecionado.getSeqReceber()).append(", ")
                            .append(ManagerDecimal.StringToDouble(valorPago.getText())).append(", '")
                            .append(jComboBoxTitulos.getSelectedItem().toString()).append("', ")
                            .append(Menu.getIdBanco()).append(", '")
                            .append(Menu.getNomeUsuario()).append("', '")
                            .append(ManagerData.convertUsDate(ManagerData.setHoraInicioDia(ManagerData.getDate()))).append("', ")
                            .append("0, ")
                            .append(registroSelecionado.getReceber()).append(")");
                    return DADOS.execProcudureRetInt(sql.toString());
                }
            }

            @Override
            protected void done() {
                super.done();
                Integer x = null;
                try {
                    x = new Integer(get().toString());
                } catch (InterruptedException | ExecutionException e) {
                    Log.registraErro(this.getClass().getName(), "jButtonReceberActionPerformed", e);
                }
                if (x == 1) {
                    if (JOptionPane.showOptionDialog(null,
                            "Documento Baixado com Exito" + System.lineSeparator() + "Deseja Emitir a NFC-e?",
                            "NFC-e",
                            JOptionPane.YES_NO_OPTION,
                            JOptionPane.QUESTION_MESSAGE,
                            null, br.JavaApplicationJsys.OPTIONS, br.JavaApplicationJsys.OPTIONS[1]) == 0) {
                        emitirDocumentoFiscal();
                    }
                    cancela();
                    cancelaUltimosRecebimentos();
                    setSelecaoTabela();
                } else {
                    JOptionPane.showMessageDialog(null, "Erro Documento Nao Encontrado", "Erro", JOptionPane.ERROR_MESSAGE);
                    cancela();
                    cancelaUltimosRecebimentos();
                    setSelecaoTabela();
                }
                p.dispose();
            }
        };
        worker.execute();
        p.setVisible(true);
    }//GEN-LAST:event_jButtonReceberActionPerformed

    private void valorPagoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorPagoKeyReleased
        try {
            if (titulosABaixar.isEmpty()) {
                BigDecimal valor = registroSelecionado.getValor();
                valor = valor.subtract(ManagerDecimal.StringToBigDecimal(valorPago.getText().replace(".", ",")));
                valoTroco.setText(ManagerDecimal.converter(valor.multiply(new BigDecimal(-1)), "R$ #,##0.00"));
            } else {
                BigDecimal soma = totalMarcado.subtract(ManagerDecimal.StringToBigDecimal(valorPago.getText().replace(".", ",")));
                valoTroco.setText(ManagerDecimal.converter(soma.multiply(new BigDecimal(-1)), "R$ #,##0.00"));
            }
        } catch (Exception ignore) {
            valoTroco.setText("R$ 0,00");
        }
    }//GEN-LAST:event_valorPagoKeyReleased

    private void valorPagoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorPagoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jComboBoxTitulos.requestFocus();
        }
    }//GEN-LAST:event_valorPagoKeyPressed

    private void IdFaturaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_IdFaturaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            valorPago.requestFocus();
        }
    }//GEN-LAST:event_IdFaturaKeyPressed

    private void valorPagoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_valorPagoFocusGained
        try {
            if (titulosABaixar.isEmpty()) {
                setRegistroSelecionado();
                if (registroSelecionado != null) {
                    valoTroco.setText("0,00");
                    IdFatura.setText(String.valueOf(registroSelecionado.getIdReceber()));
                    ValorTitulo.setText(ManagerDecimal.converter(registroSelecionado.getValor(), "R$ #,##0.00"));
                    valorPago.setText(registroSelecionado.getValor().toString().replace(".", ","));
                    jComboBoxTitulos.setSelectedItem(registroSelecionado.getIdTitulo());
                    valorPago.selectAll();
                }
            } else {
                valoTroco.setText("0,00");
                IdFatura.setText("Varios...");
                ValorTitulo.setText(ManagerDecimal.converter(totalMarcado, "R$ #,##0.00"));
                valorPago.setText(ManagerDecimal.converter(totalMarcado, "#0.00").replace(".", ","));
                jComboBoxTitulos.setSelectedItem(listAvistaAberto.get(masterTable.convertRowIndexToModel(masterTable.getSelectedRow())).getIdTitulo());
                valorPago.selectAll();
            }
        } catch (Exception e) {
            Log.registraErro(this.getClass().getName(), "valorPagoFocusGained", e);
        }
    }//GEN-LAST:event_valorPagoFocusGained

    private void jComboBoxTitulosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxTitulosKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButtonReceber.doClick();
        }
    }//GEN-LAST:event_jComboBoxTitulosKeyPressed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        final Progress p = new Progress();
        SwingWorker worker = new SwingWorker() {
            @Override
            protected Void doInBackground() throws Exception {
                setFiltro();
                return null;
            }

            @Override
            protected void done() {
                super.done();
                p.dispose();
            }
        };
        worker.execute();
        p.setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        new LancamentoRetiradas().setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        emitirDocumentoFiscal();
        cancela();
        cancelaUltimosRecebimentos();
        setSelecaoTabela();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        AberturaCaixaJanela dialog = new AberturaCaixaJanela(new javax.swing.JFrame(), true);
        dialog.setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            Integer id = 0;
            setRegistroSelecionado();
            // verifica se tem algum registro selecionado na Lista de recebimentos
            if (jTableUltimosReceb.getSelectedRow() != -1) {
                id = Integer.valueOf(jTableUltimosReceb.getValueAt(jTableUltimosReceb.getSelectedRow(), 1).toString());
            } else if (!titulosABaixar.isEmpty()) {
                for (titulosMarcados t : titulosABaixar) {
                    id = t.getIdReceber();
                }
            } else if (titulosABaixar.isEmpty() & registroSelecionado != null) {
                id = registroSelecionado.getIdReceber();
            } else {
                id = 0;
            }
            NfeEmissao nfc = new NfeEmissao(new javax.swing.JFrame(), false, id);
            nfc.setVisible(true);
        } catch (NumberFormatException e) {
            Log.registraErro(this.getClass().getName(), "jButton3ActionPerformed", e);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        FiltroDataInicialFinal filtroDataInicialFinal = new FiltroDataInicialFinal("/br/rel/caixa/caixa.jasper", FiltroDataInicialFinal.DIA);
        filtroDataInicialFinal.setVisible(true);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            int[] selectd = jTableUltimosReceb.getSelectedRows();
            for (int i = 0; i < selectd.length; i++) {
                String tipo = jTableUltimosReceb.getValueAt(selectd[i], 0).toString();
                if (Validar.isNotNull(tipo) & tipo.equals("Pagar")) {
                    Map<Object, Object> parametros = new HashMap<>();
                    parametros.put("idPagamento", Integer.valueOf(jTableUltimosReceb.getValueAt(selectd[i], 1).toString()));
                    ReportUtils.openReport("Relatorio ", "/br/rel/caixa/ReciboPagamento.jasper", parametros);
                } else {
                    new ReimpressaoVendas(new javax.swing.JFrame(), true, jTableUltimosReceb.getValueAt(selectd[i], 1).toString()).setVisible(true);
                }
            }
            if (selectd.length < 1) {
                setRegistroSelecionado();
                // verifica se tem algum registro selecionado na Lista de recebimentos
                if (!titulosABaixar.isEmpty()) {
                    String idVenda = new String();
                    for (titulosMarcados t : titulosABaixar) {
                        idVenda = t.getIdReceber().toString();
                    }
                    new ReimpressaoVendas(new javax.swing.JFrame(), true, idVenda).setVisible(true);
                } else if (titulosABaixar.isEmpty() & registroSelecionado != null) {
                    new ReimpressaoVendas(new javax.swing.JFrame(), true, String.valueOf(registroSelecionado.getIdReceber())).setVisible(true);
                } else {
                    new ReimpressaoVendas(new javax.swing.JFrame(), true, "0").setVisible(true);
                }
            }
        } catch (NumberFormatException e) {
            Log.registraErro(this.getClass().getName(), "jButton5ActionPerformed", e);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        new PagamentosCaixa();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void masterTableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_masterTableFocusGained
        try {
            jTableUltimosReceb.clearSelection();
        } catch (Exception ignore) {
        }
    }//GEN-LAST:event_masterTableFocusGained

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        JFrame frame = new JFrame();
        frame.setContentPane(new ConsultaReceber());
        frame.setTitle("Consulta Recebimentos");
        frame.pack();
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        FechamentoCaixa fechamentoCaixa = new FechamentoCaixa();
        fechamentoCaixa.setVisible(fechamentoCaixa.getFichas());
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        cancela();
        cancelaUltimosRecebimentos();
        setSelecaoTabela();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        try {
            setRegistroSelecionado();
            // verifica se tem algum registro selecionado na Lista de recebimentos
            Integer codVenda = 0;
            if (jTableUltimosReceb.getSelectedRow() != -1) {
                codVenda = Integer.valueOf(jTableUltimosReceb.getValueAt(jTableUltimosReceb.getSelectedRow(), 1).toString());
            } else if (registroSelecionado != null) {
                codVenda = registroSelecionado.getIdReceber();
            }
            Map<Object, Object> filtro = new HashMap<>();
            filtro.put("venda", codVenda);
            JsysNFe nfe = (JsysNFe) Retorna.findOneResult("JsysNFe.findByACancelar", filtro);
            NfceCancelamento cancelar = new NfceCancelamento(null, true, nfe);
            cancelar.setVisible(true);
        } catch (NumberFormatException e) {
            Log.registraErro(this.getClass().getName(), "emitirCupom", e);
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        AlterarClienteVenda acv = new AlterarClienteVenda(new javax.swing.JFrame(), true);
        try {
            setRegistroSelecionado();
            // verifica se tem algum registro selecionado na Lista de recebimentos
            if (jTableUltimosReceb.getSelectedRow() != -1) {
                acv.setTextVenda(jTableUltimosReceb.getValueAt(jTableUltimosReceb.getSelectedRow(), 1).toString());
            } else if (!titulosABaixar.isEmpty()) {
                titulosABaixar.stream().forEach((t) -> {
                    acv.setTextVenda(t.getIdReceber().toString());
                });
            } else if (titulosABaixar.isEmpty() & registroSelecionado != null) {
                acv.setTextVenda(String.valueOf(registroSelecionado.getIdReceber()));
            }
        } catch (NumberFormatException e) {
            Log.registraErro(this.getClass().getName(), "jButton14ActionPerformed", e);
        }
        acv.setVisible(true);
    }//GEN-LAST:event_jButton14ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IdFatura;
    private javax.swing.JLabel NomeCaixa;
    private javax.swing.JTextField ValorTitulo;
    private javax.swing.JPanel gerenciamentoCaixas;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButtonReceber;
    private javax.swing.JCheckBox jCheckBoxTodosBancos;
    private javax.swing.JComboBox jComboBoxTitulos;
    private com.toedter.calendar.JDateChooser jDateChooserFiltroCaixa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableUltimosReceb;
    private java.util.List<br.sql.bean.views.JsysAvistaAberto> listAvistaAberto;
    private java.util.List<br.sql.bean.views.JsysCaixa> listResumoDeCaixa;
    private java.util.List<br.sql.bean.JsysTitulos> listTitulos;
    private javax.swing.JTable masterTable;
    private javax.persistence.Query queryAvistaAberto;
    private javax.persistence.Query queryResumoDeCaixa;
    private javax.persistence.Query queryTitulos;
    private javax.swing.JPanel recebimento;
    private javax.swing.JTable tableVendasRecebidas;
    private javax.swing.JTextField totalMark;
    private javax.swing.JTextField valoTroco;
    private javax.swing.JTextField valorPago;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private void setSelecaoTabela() {
        try {
            jComboBoxTitulos.setSelectedIndex(0);
            masterTable.requestFocus();
            int row = masterTable.getRowCount() - 1;
            masterTable.setRowSelectionInterval(row, row);
        } catch (Exception ignore) {
        }
    }

    @SuppressWarnings("unchecked")
    private void setValoresJconbobox() {
        jComboBoxTitulos.removeAllItems();
        listTitulos.stream().forEach((listTitulo) -> {
            jComboBoxTitulos.addItem(listTitulo.getIdTitulo());
        });
    }

    @SuppressWarnings("unchecked")
    private void setFiltro() {
        if (jCheckBoxTodosBancos.isSelected()) {
            queryResumoDeCaixa = ConnectionFactory.getEntityManagerNew().createNamedQuery("JsysCaixa.findByTipoAndData");
            queryResumoDeCaixa.setParameter("data", ManagerData.setHoraInicioDia(jDateChooserFiltroCaixa.getDate()));
        } else {
            queryResumoDeCaixa = ConnectionFactory.getEntityManagerNew().createNamedQuery("JsysCaixa.findByTipoAndDataAndBanco");
            queryResumoDeCaixa.setParameter("data", ManagerData.setHoraInicioDia(jDateChooserFiltroCaixa.getDate()));
            queryResumoDeCaixa.setParameter("banco", Menu.getIdBanco());
        }
        java.util.Collection rs = queryResumoDeCaixa.getResultList();
        listResumoDeCaixa.clear();
        listResumoDeCaixa.addAll(rs);
    }

    private void atualizarVendas() {
        final Progress p = new Progress();
        SwingWorker worker = new SwingWorker() {
            @Override
            protected Void doInBackground() throws Exception {
                cancela();
                return null;
            }

            @Override
            protected void done() {
                super.done();
                p.dispose();
                setSelecaoTabela();
                titulosABaixar.clear();
                totalMarcado = BigDecimal.ZERO;
                totalMark.setText("0,00");
            }
        };
        worker.execute();
        p.setVisible(true);
    }

    private void emitirDocumentoFiscal() {
        try {
            setRegistroSelecionado();
            // verifica se tem algum registro selecionado na Lista de recebimentos
            if (jTableUltimosReceb.getSelectedRow() != -1) {
                nfce(Integer.valueOf(jTableUltimosReceb.getValueAt(jTableUltimosReceb.getSelectedRow(), 1).toString()));
            } else if (!titulosABaixar.isEmpty()) {
                titulosABaixar.stream().forEach((t) -> {
                    nfce(t.getIdReceber());
                });
            } else if (titulosABaixar.isEmpty() & registroSelecionado != null) {
                nfce(registroSelecionado.getIdReceber());
            } else {
                nfce(0);
            }
        } catch (NumberFormatException e) {
            Log.registraErro(this.getClass().getName(), "emitirCupom", e);
        }
    }

    private void nfce(Integer documento) {
        NfceEmissao nfce = new NfceEmissao(null, true);
        nfce.setRecebeVenda(documento);
        nfce.setVisible(true);
    }

    // inicia implementa funcao para pegar a tecla apertado pelo usuario 
    private final BotaoAction acaoBotaoF5 = new BotaoAction();

    //Ações para o botão.
    private class BotaoAction extends AbstractAction {

        @Override
        public void actionPerformed(ActionEvent e) {
            atualizarVendas();
        }
    }

    private void registrarAcoesDoTeclado(JPanel painel) {
        //Damos um nome para cada ação. Esse nome é útil pois mais de 
        //uma tecla pode ser associada a cada ação, como veremos abaixo
        ActionMap actionMap = painel.getActionMap();
        actionMap.put("botao1", acaoBotaoF5);

        painel.setActionMap(actionMap);

        //Pegamos o input map que ocorre sempre que a janela atual está em foco
        InputMap imap = painel.getInputMap(JPanel.WHEN_IN_FOCUSED_WINDOW);

        //Associamos o pressionar das teclas (keystroke) aos eventos.
        //O nome do KeyStroke pode ser obtido através da classe KeyEvent.
        //Lá está cheio de constantes como KeyEvent.VK_NUMPAD1. 
        //Essa string é o nome sem o VK_
        //Teclas da parte de cima do teclado.
        imap.put(KeyStroke.getKeyStroke("F5"), "botao1");
        //imap.put(KeyStroke.getKeyStroke("F2"), "botao1");
    }
    // finaliza implementa funcao para pegar a tecla apertado pelo usuario 

    @SuppressWarnings("unchecked")
    public void cancela() {
        listAvistaAberto.clear();
        listAvistaAberto.addAll(Retorna.findCollection("JsysAvistaAberto.findAll"));
        registroSelecionado = null;
    }

    public void cancelaUltimosRecebimentos() {
        try {
            StringBuilder sql = new StringBuilder();
            sql.append("SELECT tipo, venda, idTitulo, valorPago, ficha, emitida FROM jsysCaixaRecs ")
                    .append("WHERE (data = '").append(ManagerData.convertUsDate(ManagerData.getDate())).append("') ")
                    .append("and (idBanco = ").append(String.valueOf(Menu.getIdBanco())).append(" or idBanco = -1) ")
                    .append("ORDER BY hora desc");
            ResultSet x = DADOS.execSQL(sql.toString());
            String[] tableColumnsName = {"Tipo", "Venda", "Titulo", "Valor Pago", "Ficha", "e"};
            DefaultTableModel aModel = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };
            aModel.setColumnIdentifiers(tableColumnsName);
            java.sql.ResultSetMetaData rsmd = x.getMetaData();
            int colNo = rsmd.getColumnCount();
            while (x.next()) {
                Object[] objects = new Object[colNo];
                objects[0] = x.getString(1);
                objects[1] = x.getLong(2);
                objects[2] = x.getString(3);
                objects[3] = x.getBigDecimal(4);
                objects[4] = x.getInt(5);
                objects[5] = x.getInt(6) == 1;
                aModel.addRow(objects);
            }
            jTableUltimosReceb.setModel(aModel);
            jTableUltimosReceb.setDefaultRenderer(Object.class, new CaixaResumo());
            jTableUltimosReceb.getColumnModel().getColumn(0).setPreferredWidth(120);
            jTableUltimosReceb.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTableUltimosReceb.getColumnModel().getColumn(2).setPreferredWidth(60);
            jTableUltimosReceb.getColumnModel().getColumn(3).setPreferredWidth(120);
            jTableUltimosReceb.getColumnModel().getColumn(4).setPreferredWidth(70);
            jTableUltimosReceb.getColumnModel().getColumn(5).setMaxWidth(0);
            jTableUltimosReceb.getColumnModel().getColumn(5).setMinWidth(0);
            jTableUltimosReceb.getColumnModel().getColumn(5).setPreferredWidth(0);
        } catch (SQLException e) {
            Log.registraErro(this.getClass().getName(), "cancelaUltimosRecebimentos", e);
        }
    }

    private void setRegistroSelecionado() {
        int[] selection = masterTable.getSelectedRows();
        registroSelecionado = null;
        for (int i = 0; i < selection.length; i++) {
            registroSelecionado = listAvistaAberto.get(masterTable.convertRowIndexToModel(selection[i]));
        }
    }

    private class DestacaValor extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            setOpaque(true);
            setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
            setText(ManagerDecimal.converter(value, "#,##0.00"));
            setForeground(Color.black);
            if (isSelected) {
                setBackground(Color.orange);
            } else {
                setBackground(Color.white);
            }
            return this;
        }
    }
}
