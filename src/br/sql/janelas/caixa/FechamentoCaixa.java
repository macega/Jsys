package br.sql.janelas.caixa;

import br.sql.acesso.SQLDatabaseConnection;
import br.sql.bean.JsysParametros;
import br.sql.bean.JsysTranferenciaEntreContas;
import br.sql.bean.views.JsysPacotefichas;
import br.sql.log.Log;
import br.sql.util.ManagerData;
import br.sql.util.ManagerDecimal;
import br.sql.util.Retorna;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Objects;
import javax.persistence.RollbackException;
import javax.swing.JOptionPane;
import jsys.sql.Menu;

/**
 *
 * @author Juliano Alves Medina
 */
public class FechamentoCaixa extends javax.swing.JFrame {

    private BigDecimal totDinh = BigDecimal.ZERO;
    private BigDecimal totCred = BigDecimal.ZERO;
    private BigDecimal totDebi = BigDecimal.ZERO;
    private JsysParametros par = Retorna.JsysParametros();
    private static final SQLDatabaseConnection DADOS = new SQLDatabaseConnection();

    public FechamentoCaixa() {
        initComponents();
        caregaResumoCaixa();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cancelarJB = new javax.swing.JButton();
        confirmarJB = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        creditoTF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        creditoSaldoTF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        dinheroSaldoTF = new javax.swing.JTextField();
        dinheroTF = new javax.swing.JTextField();
        debitoTF = new javax.swing.JTextField();
        debitoSaldoTF = new javax.swing.JTextField();
        creditoDifTF = new javax.swing.JTextField();
        dinheroDifTF = new javax.swing.JTextField();
        debitoDifTF = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        atulizarJB = new javax.swing.JButton();
        atulizarJB1 = new javax.swing.JButton();
        atulizarJB2 = new javax.swing.JButton();
        enviarCaixaJB = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Fechamento de Caixa");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Fechamento de Caixa");
        jLabel1.setToolTipText("");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Data:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText(br.sql.util.ManagerData.getDataAtualTypeString());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        cancelarJB.setText("Cancelar");
        cancelarJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarJBActionPerformed(evt);
            }
        });

        confirmarJB.setText("Confirmar");
        confirmarJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmarJBActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Fechamento"));

        creditoTF.setDocument(new br.sql.plainDocument.MoedaCaixaDocument());
        creditoTF.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        creditoTF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        creditoTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                creditoTFFocusGained(evt);
            }
        });
        creditoTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                creditoTFKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                creditoTFKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Credito:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Dinhero:");
        jLabel2.setToolTipText("");

        creditoSaldoTF.setEditable(false);
        creditoSaldoTF.setBackground(new java.awt.Color(102, 255, 102));
        creditoSaldoTF.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        creditoSaldoTF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Debito:");
        jLabel4.setToolTipText("");

        dinheroSaldoTF.setEditable(false);
        dinheroSaldoTF.setBackground(new java.awt.Color(102, 255, 102));
        dinheroSaldoTF.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        dinheroSaldoTF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        dinheroTF.setDocument(new br.sql.plainDocument.MoedaCaixaDocument());
        dinheroTF.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        dinheroTF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        dinheroTF.setToolTipText("");
        dinheroTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dinheroTFFocusGained(evt);
            }
        });
        dinheroTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dinheroTFKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dinheroTFKeyReleased(evt);
            }
        });

        debitoTF.setDocument(new br.sql.plainDocument.MoedaCaixaDocument());
        debitoTF.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        debitoTF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        debitoTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                debitoTFFocusGained(evt);
            }
        });
        debitoTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                debitoTFKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                debitoTFKeyReleased(evt);
            }
        });

        debitoSaldoTF.setEditable(false);
        debitoSaldoTF.setBackground(new java.awt.Color(102, 255, 102));
        debitoSaldoTF.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        debitoSaldoTF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        creditoDifTF.setEditable(false);
        creditoDifTF.setBackground(new java.awt.Color(204, 204, 204));
        creditoDifTF.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        creditoDifTF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        creditoDifTF.setToolTipText("");

        dinheroDifTF.setEditable(false);
        dinheroDifTF.setBackground(new java.awt.Color(204, 204, 204));
        dinheroDifTF.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        dinheroDifTF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        dinheroDifTF.setToolTipText("");

        debitoDifTF.setEditable(false);
        debitoDifTF.setBackground(new java.awt.Color(204, 204, 204));
        debitoDifTF.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        debitoDifTF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        debitoDifTF.setToolTipText("");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Conferido");
        jLabel7.setToolTipText("");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Diferença");
        jLabel8.setToolTipText("");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Saldo");
        jLabel9.setToolTipText("");

        atulizarJB.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        atulizarJB.setText("Limpar");
        atulizarJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atulizarJBActionPerformed(evt);
            }
        });

        atulizarJB1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        atulizarJB1.setText("Limpar");
        atulizarJB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atulizarJB1ActionPerformed(evt);
            }
        });

        atulizarJB2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        atulizarJB2.setText("Limpar");
        atulizarJB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atulizarJB2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jLabel7)
                        .addGap(142, 142, 142)
                        .addComponent(jLabel8)
                        .addGap(145, 145, 145)
                        .addComponent(jLabel9))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(creditoTF, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(debitoTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(creditoDifTF, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(debitoDifTF, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(creditoSaldoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(atulizarJB1))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(debitoSaldoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(atulizarJB2))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dinheroTF, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(dinheroDifTF, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(dinheroSaldoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(atulizarJB)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(creditoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(creditoSaldoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(creditoDifTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(atulizarJB1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(debitoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(debitoSaldoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(debitoDifTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(atulizarJB2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(dinheroTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dinheroSaldoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dinheroDifTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(atulizarJB))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        enviarCaixaJB.setText("Enviar Caixa");
        enviarCaixaJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviarCaixaJBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(enviarCaixaJB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(confirmarJB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelarJB, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelarJB)
                    .addComponent(confirmarJB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(enviarCaixaJB)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelarJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarJBActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelarJBActionPerformed

    private void dinheroTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dinheroTFKeyReleased
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ADD) {
                totDinh = totDinh.add(BigDecimal.valueOf(ManagerDecimal.StringToDouble(dinheroTF.getText())));
                dinheroTF.setText(ManagerDecimal.converter(totDinh, "#,##0.00"));
                dinheroTF.selectAll();
            }
        } catch (Exception e) {
            Log.registraErro(this.getClass().getName(), "dinheroTFKeyReleased", e);
        }
        // chama o metodo para calcular a diferença 
        dinheroDifTF.setText(calulaDif(dinheroTF.getText(), dinheroSaldoTF.getText()));
        // tenta verificar se o saldo e positivo e mudar a cor do fundo do JTextFild
        try {
            if (ManagerDecimal.StringToDouble(dinheroDifTF.getText()) >= 0) {
                // caixa com saldo positivo
                dinheroDifTF.setBackground(new java.awt.Color(99, 242, 242));
            } else {
                // caixa com saldo negavivo
                dinheroDifTF.setBackground(new java.awt.Color(255, 109, 9));
            }
        } catch (NumberFormatException e) {
            Log.registraErro(this.getClass().getName(), "dinheroTFKeyReleased", e);
        }
    }//GEN-LAST:event_dinheroTFKeyReleased

    private void creditoTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_creditoTFKeyReleased
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ADD) { // soma 
                totCred = totCred.add(BigDecimal.valueOf(ManagerDecimal.StringToDouble(creditoTF.getText())));
                creditoTF.setText(ManagerDecimal.converter(totCred, "#,##0.00"));
                creditoTF.selectAll();
            }
        } catch (Exception e) {
            Log.registraErro(this.getClass().getName(), "creditoTFKeyReleased", e);
        }
        // chama o metodo para calcular a diferença 
        creditoDifTF.setText(calulaDif(creditoTF.getText(), creditoSaldoTF.getText()));
        // tenta verificar se o saldo e positivo e mudar a cor do fundo do JTextFild
        try {
            if (ManagerDecimal.StringToDouble(creditoDifTF.getText()) >= 0) {
                // caixa com saldo positivo
                creditoDifTF.setBackground(new java.awt.Color(99, 242, 242));
            } else {
                // caixa com saldo negavivo
                creditoDifTF.setBackground(new java.awt.Color(255, 109, 9));
            }
        } catch (NumberFormatException e) {
            Log.registraErro(this.getClass().getName(), "creditoTFKeyReleased", e);
        }
    }//GEN-LAST:event_creditoTFKeyReleased

    private void debitoTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_debitoTFKeyReleased
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ADD) { // soma 
                totDebi = totDebi.add(BigDecimal.valueOf(ManagerDecimal.StringToDouble(debitoTF.getText())));
                debitoTF.setText(ManagerDecimal.converter(totDebi, "#,##0.00"));
                debitoTF.selectAll();
            }
        } catch (Exception e) {
            Log.registraErro(this.getClass().getName(), "debitoTFKeyReleased", e);
        }
        // chama o metodo para calcular a diferença 
        debitoDifTF.setText(calulaDif(debitoTF.getText(), debitoSaldoTF.getText()));
        // tenta verificar se o saldo e positivo e mudar a cor do fundo do JTextFild
        try {
            if (ManagerDecimal.StringToDouble(debitoDifTF.getText()) >= 0) {
                // caixa com saldo positivo
                debitoDifTF.setBackground(new java.awt.Color(99, 242, 242));
            } else {
                // caixa com saldo negavivo
                debitoDifTF.setBackground(new java.awt.Color(255, 109, 9));
            }
        } catch (NumberFormatException e) {
            Log.registraErro(this.getClass().getName(), "debitoTFKeyReleased", e);
        }
    }//GEN-LAST:event_debitoTFKeyReleased

    private void dinheroTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dinheroTFKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            creditoTF.requestFocus();
        }
    }//GEN-LAST:event_dinheroTFKeyPressed

    private void dinheroTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dinheroTFFocusGained
        dinheroTF.selectAll();
    }//GEN-LAST:event_dinheroTFFocusGained

    private void creditoTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_creditoTFFocusGained
        creditoTF.selectAll();
    }//GEN-LAST:event_creditoTFFocusGained

    private void debitoTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_debitoTFFocusGained
        debitoTF.selectAll();
    }//GEN-LAST:event_debitoTFFocusGained

    private void creditoTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_creditoTFKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            debitoTF.requestFocus();
        }
    }//GEN-LAST:event_creditoTFKeyPressed

    private void enviarCaixaJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviarCaixaJBActionPerformed
        enviarRelatorioCaixa dialog = new enviarRelatorioCaixa(new javax.swing.JFrame(), true);
        dialog.setVisible(true);
    }//GEN-LAST:event_enviarCaixaJBActionPerformed

    private void atulizarJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atulizarJBActionPerformed
        dinheroDifTF.setText("");
        dinheroSaldoTF.setText("");
        dinheroTF.setText("");
        totDinh = BigDecimal.ZERO;
        caregaResumoCaixa();
    }//GEN-LAST:event_atulizarJBActionPerformed

    private void atulizarJB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atulizarJB1ActionPerformed
        creditoDifTF.setText("");
        creditoSaldoTF.setText("");
        creditoTF.setText("");
        totCred = BigDecimal.ZERO;
        caregaResumoCaixa();
    }//GEN-LAST:event_atulizarJB1ActionPerformed

    private void atulizarJB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atulizarJB2ActionPerformed
        debitoDifTF.setText("");
        debitoSaldoTF.setText("");
        debitoTF.setText("");
        totDebi = BigDecimal.ZERO;
        caregaResumoCaixa();
    }//GEN-LAST:event_atulizarJB2ActionPerformed

    private void confirmarJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmarJBActionPerformed
        // pega o valor das direnças
        ArrayList<fechamento> f = new ArrayList<>();
        f.add(new fechamento("DINH", ManagerDecimal.StringToBigDecimal(dinheroTF.getText()), ManagerDecimal.StringToBigDecimal(dinheroDifTF.getText()), ManagerDecimal.StringToBigDecimal(dinheroSaldoTF.getText())));
        f.add(new fechamento("CRED", ManagerDecimal.StringToBigDecimal(creditoTF.getText()), ManagerDecimal.StringToBigDecimal(creditoDifTF.getText()), ManagerDecimal.StringToBigDecimal(creditoSaldoTF.getText())));
        f.add(new fechamento("DEBI", ManagerDecimal.StringToBigDecimal(debitoTF.getText()), ManagerDecimal.StringToBigDecimal(debitoDifTF.getText()), ManagerDecimal.StringToBigDecimal(debitoSaldoTF.getText())));
        for (fechamento obj : f) {
            // registra na tabela os valores digitados no formulario
            registraCaixa(obj);
            // Vefifica se ouve diferença de caixa e lamça os valores.
            if (obj.getValorDifereca().doubleValue() > 0) { // se sobrou dinhero e registra no banco de dados
                registraSobraFalta(obj, Retorna.JsysParametros().getIdGeralSobraCaixa(), Menu.getIdBanco(), par.getIdBancoAjuste());
            } else if (obj.getValorDifereca().doubleValue() < 0) { // se faltou ele retistra no banco de dados 
                registraSobraFalta(obj, Retorna.JsysParametros().getIdGeralFaltaCaixa(), par.getIdBancoAjuste(), Menu.getIdBanco());
            }
        }

        // pregunta o que fazer e fecha a o formulario
        if (JOptionPane.showOptionDialog(null,
                "Caixa Fechado!\nDeseja Enviar o Caixa ?",
                "ECF",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, br.JavaApplicationJsys.OPTIONS,
                br.JavaApplicationJsys.OPTIONS[0]) == 0) {
            enviarRelatorioCaixa dialog = new enviarRelatorioCaixa(new javax.swing.JFrame(), true);
            dialog.setVisible(true);
        }
        this.dispose();
    }//GEN-LAST:event_confirmarJBActionPerformed

    private void debitoTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_debitoTFKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            dinheroTF.requestFocus();
        }
    }//GEN-LAST:event_debitoTFKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton atulizarJB;
    private javax.swing.JButton atulizarJB1;
    private javax.swing.JButton atulizarJB2;
    private javax.swing.JButton cancelarJB;
    private javax.swing.JButton confirmarJB;
    private javax.swing.JTextField creditoDifTF;
    private javax.swing.JTextField creditoSaldoTF;
    private javax.swing.JTextField creditoTF;
    private javax.swing.JTextField debitoDifTF;
    private javax.swing.JTextField debitoSaldoTF;
    private javax.swing.JTextField debitoTF;
    private javax.swing.JTextField dinheroDifTF;
    private javax.swing.JTextField dinheroSaldoTF;
    private javax.swing.JTextField dinheroTF;
    private javax.swing.JButton enviarCaixaJB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

    private void registraSobraFalta(fechamento f, String idGeral, Integer bancoEntrada, Integer bancoSaida) throws HeadlessException, NumberFormatException {
        try {
            JsysTranferenciaEntreContas T = new JsysTranferenciaEntreContas();
            T.setIdGeral(idGeral);
            T.setValor(f.getValorDifereca().doubleValue() < 0 ? (f.getValorDifereca().multiply(new BigDecimal(-1))) : f.getValorDifereca());
            T.setData(ManagerData.getDataAtualTypeDate(ManagerData.INICIO));
            T.setDescricao(idGeral);
            T.setIdBancoOrigem(Retorna.jsysClientes(bancoSaida));
            T.setIdBancoDestino(Retorna.jsysClientes(bancoEntrada));
            T.setCancelada(false);
            T.setIdTitulo(f.getTitulo());
            T.setDataInclusao(ManagerData.getDate());
            T.setUsuarioInclusao(Menu.getNomeUsuario());
            T.setUsuarioAlteracao(Menu.getNomeUsuario());
            T.setRetirado(false);
            br.sql.acesso.ConnectionFactory.insert(T);
        } catch (RollbackException e) {
            Log.registraErro(this.getClass().getName(), "registraSobraFalta", e);
        }
    }

    private void caregaResumoCaixa() {
        try {
            String sql = "DECLARE @D DATETIME "
                    + "DECLARE @BANCO INT "
                    + "SET @D = '" + ManagerData.convertUsDate(ManagerData.setHoraInicioDia(ManagerData.getDate())) + "' "
                    + "SET @BANCO = " + Menu.getIdBanco() + " "
                    + "SELECT SUM(TB.DINH) as [DINH], SUM(TB.CRED)as [CRED], SUM(TB.DEBI) AS [DEBI] FROM ( "
                    + "	SELECT sum(confereDinh) as [DINH] "
                    + "		  ,0 as [CRED] "
                    + "		  ,0 AS [DEBI] "
                    + "	FROM jsysCaixaResumo  "
                    + "	WHERE (idTitulo = 'DINH') AND data = @D and idBanco = @BANCO  "
                    + "	GROUP BY idTitulo  "
                    + "UNION ALL "
                    + "	SELECT 0 as [DINH] "
                    + "	       ,sum([total]) as [CRED] "
                    + "	       ,0 AS [DEBI] "
                    + "	FROM jsysCaixaResumo  "
                    + "	WHERE (idTitulo = 'CRED') AND data = @D and idBanco = @BANCO  "
                    + "	GROUP BY idTitulo "
                    + "UNION ALL "
                    + "	SELECT 0 as [DINH] "
                    + "	      ,0 as [CRED] "
                    + "	      ,sum([total]) as [DEBI] "
                    + "	FROM jsysCaixaResumo  "
                    + "	WHERE (idTitulo = 'DEBI') AND data = @D and idBanco = @BANCO  "
                    + "	GROUP BY idTitulo  "
                    + "UNION ALL "
                    + "	SELECT 0 as [DINH] "
                    + "	      ,0 as [CRED] "
                    + "	      ,0 as [DEBI] ) AS TB";
            ResultSet x = DADOS.execSQL(sql);
            while (x.next()) {
                dinheroSaldoTF.setText(ManagerDecimal.converter(x.getBigDecimal("DINH"), "#,##0.00"));
                creditoSaldoTF.setText(ManagerDecimal.converter(x.getBigDecimal("CRED"), "#,##0.00"));
                debitoSaldoTF.setText(ManagerDecimal.converter(x.getBigDecimal("DEBI"), "#,##0.00"));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Caixa Sem Movimento", "ERRO", JOptionPane.ERROR_MESSAGE);
            Log.registraErro(this.getClass().getName(), "caregaResumoCaixa", e);
        }
    }

    private String calulaDif(String valor, String Saldo) {
        try {
            Double val = ManagerDecimal.StringToDouble(valor);
            Double sal = ManagerDecimal.StringToDouble(Saldo);
            return ManagerDecimal.converter((val - sal), "#,##0.00");
        } catch (Exception e) {
            Log.registraErro(this.getClass().getName(), "calulaDif", e);
            return "0,00";
        }
    }

    private void registraCaixa(fechamento f) {
        br.sql.bean.FechamentoCaixa fc = new br.sql.bean.FechamentoCaixa();
        fc.setData(ManagerData.getDate());
        fc.setIdCaixa(Menu.getIdBanco());
        fc.setIdTitulo(f.getTitulo());
        fc.setUsuario(Menu.getNomeUsuario());
        fc.setValorConferido(f.getValorConferido());
        fc.setValorDifereca(f.getValorDifereca());
        fc.setValorSaldo(f.getValorSaldo());
        br.sql.acesso.ConnectionFactory.insert(fc);
    }

    public boolean getFichas() {
        java.util.Map<Object, Object> filtro = new HashMap<>();
        filtro.put("idBanco", Menu.getIdBanco());
        List<Object> O = Retorna.findList("JsysPacotefichas.findByidBanco", filtro);
        if (!O.isEmpty() || O.size() > 0) {
            StringBuilder mensagen = new StringBuilder();
            for (Object o : O) {
                JsysPacotefichas iten = (JsysPacotefichas) o;
                mensagen.append(iten.getFicha());
                mensagen.append(", ");
            }
            JOptionPane.showMessageDialog(this, "A(s) ficha(s) " + mensagen.toString().trim() + " não foram entregues."
                    + System.lineSeparator()
                    + "Caso não consiga confirmar a entrega dos produtos, a Venda deve ser reaberta.", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            return false;
        } else {
            return true;
        }
    }

    private class fechamento {
        private String titulo;
        private BigDecimal valorConferido;
        private BigDecimal valorDifereca;
        private BigDecimal valorSaldo;

        public fechamento(String titulo, BigDecimal valorConferido, BigDecimal valorDifereca, BigDecimal valorSaldo) {
            this.titulo = titulo;
            this.valorConferido = valorConferido;
            this.valorDifereca = valorDifereca;
            this.valorSaldo = valorSaldo;
        }

        public fechamento() {
        }

        public String getTitulo() {
            return titulo;
        }

        public void setTitulo(String titulo) {
            this.titulo = titulo;
        }

        public BigDecimal getValorConferido() {
            return valorConferido;
        }

        public void setValorConferido(BigDecimal valorConferido) {
            this.valorConferido = valorConferido;
        }

        public BigDecimal getValorDifereca() {
            return valorDifereca;
        }

        public void setValorDifereca(BigDecimal valorDifereca) {
            this.valorDifereca = valorDifereca;
        }

        public BigDecimal getValorSaldo() {
            return valorSaldo;
        }

        public void setValorSaldo(BigDecimal valorSaldo) {
            this.valorSaldo = valorSaldo;
        }

        @Override
        public int hashCode() {
            int hash = 5;
            hash = 59 * hash + Objects.hashCode(this.titulo);
            return hash;
        }

        @Override
        public boolean equals(Object obj) {
            if (obj == null) {
                return false;
            }
            if (getClass() != obj.getClass()) {
                return false;
            }
            final fechamento other = (fechamento) obj;
            return Objects.equals(this.titulo, other.titulo);
        }
    }
}
