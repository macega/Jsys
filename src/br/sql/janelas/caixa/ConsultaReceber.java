package br.sql.janelas.caixa;

import br.JavaApplicationJsys;
import br.sql.acesso.SQLDatabaseConnection;
import br.sql.bean.JsysClientes;
import br.sql.bean.JsysTitulos;
import br.sql.bean.geral.titulosMarcados;
import br.sql.defaultTableCellRenderer.ColorirGridDebitos;
import br.sql.defaultTableCellRenderer.ZebradoLocation;
import br.sql.janelas.liberacoes.LiberacaoGenericaJDialog;
import br.sql.log.Log;
import br.sql.tableCellRenderer.MarcarGridReceber;
import br.sql.util.ManagerData;
import br.sql.util.ManagerDecimal;
import br.sql.util.Progress;
import br.sql.util.Retorna;
import java.awt.AWTKeyStroke;
import java.awt.HeadlessException;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableModel;
import jsys.sql.Menu;

/**
 *
 * @author Juliano Alves Medina
 */
public class ConsultaReceber extends JPanel {

    private final ArrayList<titulosMarcados> titulosABaixar = new ArrayList<>();
    private BigDecimal totalMarcados = BigDecimal.ZERO;
    private static final SQLDatabaseConnection DADOS = new SQLDatabaseConnection();

    private ArrayList<titulosMarcados> getTitulosABaixar() {
        return titulosABaixar;
    }

    @SuppressWarnings("unchecked")
    public ConsultaReceber() {
        initComponents();
        HashSet conj = new HashSet(jPanel3.getFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS));
        conj.add(AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_ENTER, 0));
        jPanel3.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, conj);
        masterTable.setDefaultRenderer(Object.class, new ZebradoLocation());
        masterTable.setDefaultRenderer(Date.class, new ZebradoLocation());
        masterTable.setDefaultRenderer(BigDecimal.class, new ZebradoLocation());
        caregaDados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldComprado = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldEmAberto = new javax.swing.JTextField();
        jTextFieldEmAtrazo = new javax.swing.JTextField();
        jTextFieldParcelas = new javax.swing.JTextField();
        jTextFieldMarcadas = new javax.swing.JTextField();
        jTextFieldDesmarcadas = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jTextFieldTotalFiltro = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextFieldTotalMarcados = new javax.swing.JTextField();
        jTextFieldQantMarcados = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jButtonReceberMarcados = new javax.swing.JButton();
        jTextFieldValorPago = new javax.swing.JTextField();
        jCheckBoxQuitar = new javax.swing.JCheckBox();
        uJComboBoxTitulos = new componentes.UJComboBox();
        jLabel3 = new javax.swing.JLabel();
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        jButtonAplicar = new javax.swing.JButton();
        jTextFieldCodigo = new javax.swing.JTextField();
        jDateChooserFinal = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jComboBoxTipo = new javax.swing.JComboBox();
        jDateChooserInicio = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldEndereco = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        uJComboBoxClientes = new componentes.UJComboBox();
        colaboradorCB = new javax.swing.JCheckBox();

        FormListener formListener = new FormListener();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Consulta Contas รก Receber");
        jLabel1.setToolTipText("");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText(ManagerData.convertBrDate(ManagerData.getDate()));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Data:");
        jLabel18.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel17)
                .addComponent(jLabel18))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Resumo"));

        jLabel7.setText("Comprado");
        jLabel7.setToolTipText("");

        jTextFieldComprado.setEditable(false);
        jTextFieldComprado.setBackground(new java.awt.Color(204, 204, 255));
        jTextFieldComprado.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldComprado.setText("0,00");
        jTextFieldComprado.setToolTipText("");
        jTextFieldComprado.setFocusable(false);

        jLabel9.setText("Em Aberto");
        jLabel9.setToolTipText("");

        jTextFieldEmAberto.setEditable(false);
        jTextFieldEmAberto.setBackground(new java.awt.Color(204, 204, 255));
        jTextFieldEmAberto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldEmAberto.setText("0,00");
        jTextFieldEmAberto.setToolTipText("");
        jTextFieldEmAberto.setFocusable(false);

        jTextFieldEmAtrazo.setEditable(false);
        jTextFieldEmAtrazo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldEmAtrazo.setText("Implementar");
        jTextFieldEmAtrazo.setToolTipText("");
        jTextFieldEmAtrazo.setFocusable(false);

        jTextFieldParcelas.setEditable(false);
        jTextFieldParcelas.setBackground(new java.awt.Color(204, 204, 255));
        jTextFieldParcelas.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldParcelas.setText("0");
        jTextFieldParcelas.setToolTipText("");
        jTextFieldParcelas.setFocusable(false);

        jTextFieldMarcadas.setEditable(false);
        jTextFieldMarcadas.setBackground(new java.awt.Color(204, 204, 255));
        jTextFieldMarcadas.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldMarcadas.setText("0,00");
        jTextFieldMarcadas.setToolTipText("");
        jTextFieldMarcadas.setFocusable(false);

        jTextFieldDesmarcadas.setEditable(false);
        jTextFieldDesmarcadas.setBackground(new java.awt.Color(204, 204, 255));
        jTextFieldDesmarcadas.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldDesmarcadas.setText("0,00");
        jTextFieldDesmarcadas.setToolTipText("");
        jTextFieldDesmarcadas.setFocusable(false);

        jLabel10.setText("Em Atrazo");
        jLabel10.setToolTipText("");

        jLabel11.setText("Parcela(s)");

        jLabel12.setText("Marcados");
        jLabel12.setToolTipText("");

        jLabel13.setText("Desmarcados");
        jLabel13.setToolTipText("");

        jTextFieldTotalFiltro.setEditable(false);
        jTextFieldTotalFiltro.setBackground(new java.awt.Color(255, 255, 102));
        jTextFieldTotalFiltro.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldTotalFiltro.setText("0,00");
        jTextFieldTotalFiltro.setFocusable(false);

        jLabel14.setText("Selecionados:");
        jLabel14.setToolTipText("");

        jTextFieldTotalMarcados.setEditable(false);
        jTextFieldTotalMarcados.setBackground(new java.awt.Color(255, 255, 102));
        jTextFieldTotalMarcados.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldTotalMarcados.setText("0,00");
        jTextFieldTotalMarcados.setToolTipText("");
        jTextFieldTotalMarcados.setFocusable(false);

        jTextFieldQantMarcados.setEditable(false);
        jTextFieldQantMarcados.setBackground(new java.awt.Color(255, 255, 102));
        jTextFieldQantMarcados.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldQantMarcados.setText("0");
        jTextFieldQantMarcados.setFocusable(false);

        jLabel15.setText("Marcados:");

        jLabel16.setText("Total");

        jButtonReceberMarcados.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonReceberMarcados.setForeground(new java.awt.Color(51, 153, 255));
        jButtonReceberMarcados.setText("Receber Marcados");
        jButtonReceberMarcados.addActionListener(formListener);

        jTextFieldValorPago.setDocument(new br.sql.plainDocument.MoedaDocument(15));
        jTextFieldValorPago.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        jTextFieldValorPago.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldValorPago.setToolTipText("");
        jTextFieldValorPago.addFocusListener(formListener);

        jCheckBoxQuitar.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        jCheckBoxQuitar.setText("Quitar Todos");
        jCheckBoxQuitar.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldValorPago, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(uJComboBoxTitulos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jCheckBoxQuitar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonReceberMarcados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldQantMarcados, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextFieldTotalMarcados, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                                .addComponent(jTextFieldTotalFiltro))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldComprado, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldEmAberto, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldEmAtrazo, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldParcelas, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldMarcadas, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jTextFieldDesmarcadas, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldComprado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldEmAberto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldEmAtrazo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldParcelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldMarcadas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDesmarcadas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(7, 7, 7)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldTotalFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldTotalMarcados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldQantMarcados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addGap(0, 2, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldValorPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBoxQuitar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(uJComboBoxTitulos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jButtonReceberMarcados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );

        jLabel3.setText("Endereรงo:");
        jLabel3.setToolTipText("");

        masterTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cรณdigo", "Parcela", "Titulo", "Vencimento", "Valor", "Pago", "Restante", "Desconto", "Emissรฃo", "Cancelado", "Loja", "Cliente", "Nome Cliente"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        masterTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        masterTable.addKeyListener(formListener);
        masterScrollPane.setViewportView(masterTable);
        if (masterTable.getColumnModel().getColumnCount() > 0) {
            masterTable.getColumnModel().getColumn(0).setPreferredWidth(80);
            masterTable.getColumnModel().getColumn(0).setHeaderValue("Documento");
            masterTable.getColumnModel().getColumn(0).setCellRenderer(new MarcarGridReceber(getTitulosABaixar()));
            masterTable.getColumnModel().getColumn(1).setPreferredWidth(50);
            masterTable.getColumnModel().getColumn(1).setHeaderValue("Tรญtulo");
            masterTable.getColumnModel().getColumn(2).setPreferredWidth(90);
            masterTable.getColumnModel().getColumn(2).setHeaderValue("Vencimento");
            masterTable.getColumnModel().getColumn(2).setCellRenderer(new ColorirGridDebitos());
            masterTable.getColumnModel().getColumn(3).setPreferredWidth(90);
            masterTable.getColumnModel().getColumn(3).setHeaderValue("Valor Tรญtulo");
            masterTable.getColumnModel().getColumn(4).setPreferredWidth(90);
            masterTable.getColumnModel().getColumn(4).setHeaderValue("Restante");
            masterTable.getColumnModel().getColumn(5).setPreferredWidth(90);
            masterTable.getColumnModel().getColumn(5).setHeaderValue("Emissรฃo");
            masterTable.getColumnModel().getColumn(6).setPreferredWidth(40);
            masterTable.getColumnModel().getColumn(6).setHeaderValue("Quitada");
            masterTable.getColumnModel().getColumn(7).setHeaderValue("Cancelado");
            masterTable.getColumnModel().getColumn(8).setHeaderValue("Motivo Cancelado");
        }

        jButtonAplicar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonAplicar.setForeground(new java.awt.Color(204, 0, 0));
        jButtonAplicar.setText("Aplicar");
        jButtonAplicar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonAplicar.addActionListener(formListener);

        jLabel8.setText("รก");
        jLabel8.setToolTipText("");

        jComboBoxTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nรฃo Pagos", "Pagos", "Vencidos", "Todos" }));
        jComboBoxTipo.addPropertyChangeListener(formListener);

        jLabel2.setText("Cliente:");

        jTextFieldEndereco.setEditable(false);
        jTextFieldEndereco.setBackground(new java.awt.Color(204, 255, 204));
        jTextFieldEndereco.setFocusable(false);

        jLabel4.setText("Codigo:");

        jLabel5.setText("Tipo:");

        jLabel6.setText("Data:");
        jLabel6.setToolTipText("");

        uJComboBoxClientes.setAutocompletar(true);
        uJComboBoxClientes.addPropertyChangeListener(formListener);

        colaboradorCB.setText("Colaboradores");
        colaboradorCB.setToolTipText("");
        colaboradorCB.addItemListener(formListener);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(masterScrollPane)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(97, 97, 97)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooserInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooserFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonAplicar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextFieldEndereco)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(uJComboBoxClientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(colaboradorCB)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(uJComboBoxClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(colaboradorCB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jComboBoxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8))
                        .addComponent(jDateChooserInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jDateChooserFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButtonAplicar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.FocusListener, java.awt.event.ItemListener, java.awt.event.KeyListener, java.beans.PropertyChangeListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == jButtonReceberMarcados) {
                ConsultaReceber.this.jButtonReceberMarcadosActionPerformed(evt);
            }
            else if (evt.getSource() == jButtonAplicar) {
                ConsultaReceber.this.jButtonAplicarActionPerformed(evt);
            }
        }

        public void focusGained(java.awt.event.FocusEvent evt) {
            if (evt.getSource() == jTextFieldValorPago) {
                ConsultaReceber.this.jTextFieldValorPagoFocusGained(evt);
            }
        }

        public void focusLost(java.awt.event.FocusEvent evt) {
        }

        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            if (evt.getSource() == colaboradorCB) {
                ConsultaReceber.this.colaboradorCBItemStateChanged(evt);
            }
        }

        public void keyPressed(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == masterTable) {
                ConsultaReceber.this.masterTableKeyPressed(evt);
            }
        }

        public void keyReleased(java.awt.event.KeyEvent evt) {
        }

        public void keyTyped(java.awt.event.KeyEvent evt) {
        }

        public void propertyChange(java.beans.PropertyChangeEvent evt) {
            if (evt.getSource() == jComboBoxTipo) {
                ConsultaReceber.this.jComboBoxTipoPropertyChange(evt);
            }
            else if (evt.getSource() == uJComboBoxClientes) {
                ConsultaReceber.this.uJComboBoxClientesPropertyChange(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAplicarActionPerformed
        new setFiltro();
    }//GEN-LAST:event_jButtonAplicarActionPerformed

    private void jComboBoxTipoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBoxTipoPropertyChange
        switch (getTipo()) {
            case 0: //Nรฃo Pagos 0
                jDateChooserInicio.setEnabled(true);
                jDateChooserFinal.setEnabled(true);
                break;
            case 1: //Pagos 1
                jDateChooserInicio.setEnabled(true);
                jDateChooserFinal.setEnabled(true);
                break;
            case 2: //Vencidos 2
                jDateChooserInicio.setEnabled(false);
                jDateChooserFinal.setEnabled(true);
                break;
            case 3: //Todos 3
                jDateChooserInicio.setEnabled(false);
                jDateChooserFinal.setEnabled(false);
                break;
        }
    }//GEN-LAST:event_jComboBoxTipoPropertyChange

    private void uJComboBoxClientesPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_uJComboBoxClientesPropertyChange
        jTextFieldEndereco.setText(getuJComboBoxClientes().getEndereco() + " - " + getuJComboBoxClientes().getNumero() + " - " + getuJComboBoxClientes().getBairro());
    }//GEN-LAST:event_uJComboBoxClientesPropertyChange

    private void masterTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_masterTableKeyPressed
        if (evt.getKeyCode() == 32) { // verifica se apertou backspace.
            try {
                BigDecimal restante = (BigDecimal) masterTable.getValueAt(masterTable.convertRowIndexToModel(masterTable.getSelectedRow()), 6);
                Integer idReceber = Integer.valueOf(masterTable.getValueAt(masterTable.convertRowIndexToModel(masterTable.getSelectedRow()), 0).toString());
                Integer seqReceber = Integer.valueOf(masterTable.getValueAt(masterTable.convertRowIndexToModel(masterTable.getSelectedRow()), 1).toString());
                Date vencimento = ManagerData.formataData(
                        masterTable.getValueAt(masterTable.convertRowIndexToModel(masterTable.getSelectedRow()), 8).toString().substring(0, 10),
                        "yyyy-MM-dd");
                if (restante.doubleValue() > 0.0) { // verifica se o exite valores a ser recebido.
                    titulosMarcados tm = new titulosMarcados();
                    tm.setIdReceber(idReceber);
                    tm.setSeqReceber(seqReceber);
                    tm.setData(vencimento);
                    tm.setValor(restante);
                    tm.setReceber(1);
                    if (titulosABaixar.contains(tm)) {
                        titulosABaixar.remove(tm);
                        totalMarcados = totalMarcados.subtract((BigDecimal) masterTable.getValueAt(masterTable.getSelectedRow(), 6));
                    } else {
                        titulosABaixar.add(tm);
                        totalMarcados = totalMarcados.add((BigDecimal) masterTable.getValueAt(masterTable.getSelectedRow(), 6));
                    }
                    calculaTotais();
                } else {
                    JOptionPane.showMessageDialog(null, "O Titulo nรฃo Pode Ser Baixado", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            } catch (NumberFormatException | HeadlessException e) {
                Log.registraErro(this.getClass().getName(), "masterTableKeyPressed", e);
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jTextFieldValorPago.requestFocus();
        }
        masterTable.repaint();
    }//GEN-LAST:event_masterTableKeyPressed

    private void jTextFieldValorPagoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldValorPagoFocusGained
        jTextFieldValorPago.selectAll();
    }//GEN-LAST:event_jTextFieldValorPagoFocusGained

    private void jButtonReceberMarcadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReceberMarcadosActionPerformed
        if (!titulosABaixar.isEmpty()) {
            try {
                Date hoje = ManagerData.getDataAtualTypeDate(ManagerData.INICIO);
                BigDecimal saldo = new BigDecimal(jTextFieldValorPago.getText().replace(".", "").replace(",", "."));
                for (titulosMarcados tm : titulosABaixar) {
                    if (tm.getData().compareTo(hoje) == 0
                            || getSelectTitulo().getBaixaReceber()
                            || new LiberacaoGenericaJDialog(
                                    LiberacaoGenericaJDialog.GERENCIA,
                                    "jsysReceberBaixa",
                                    new StringBuilder().append(tm.getIdReceber()).append("|").append(tm.getSeqReceber()).toString(),
                                    LiberacaoGenericaJDialog.LIBERACAO,
                                    "Liberaรงao de Titulo nao Permitido" + System.lineSeparator()
                            ).isConfirma()) {
                        String quitar = jCheckBoxQuitar.isSelected() ? "1" : "0";
                        StringBuilder sql = new StringBuilder();
                        sql.append("BaixarTitulos(").append(tm.getIdReceber()).append(", ")
                                .append(tm.getSeqReceber()).append(", ")
                                .append(saldo.setScale(JavaApplicationJsys.CASA_DECIMAL_VALOR_DEFALT, RoundingMode.HALF_UP)).append(", ")
                                .append("'").append(getSelectTitulo().getIdTitulo()).append("', ")
                                .append(Menu.getIdBanco()).append(", ")
                                .append("'").append(Menu.getNomeUsuario()).append("', ")
                                .append("'").append(ManagerData.convertUsDate(ManagerData.setHoraInicioDia(ManagerData.getDate()))).append("', ")
                                .append(quitar).append(", ")
                                .append("1)"); // avisa a procedure que รฉ para baixar o titulo. 
                        if (DADOS.execProcudureRetInt(sql.toString()) == 1) {
                            saldo = saldo.subtract(tm.getValor());
                        } else {
                            JOptionPane.showMessageDialog(null, "Titulo: " + tm.getIdReceber().toString() + " com Erro!!!", "Erro", JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Nรฃo foi possรญvel baixar o titulo.", "Erro", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } catch (HeadlessException e) {
                Log.registraErro(this, "jButtonReceberMarcadosActionPerformed", e);
            } finally {
                new setFiltro();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Nem um Tรญtulo Marcado", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonReceberMarcadosActionPerformed

    private void colaboradorCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_colaboradorCBItemStateChanged
        if (colaboradorCB.isSelected()) {
            uJComboBoxClientes.setSelectedIndex(0);
            uJComboBoxClientes.setEnabled(false);
            jDateChooserInicio.setDate(ManagerData.getPrimeiroDiaDoMes(ManagerData.getDate()));
            jDateChooserFinal.setDate(ManagerData.getUltimoDiaDoMes(ManagerData.getDate()));
        } else {
            uJComboBoxClientes.setEnabled(true);
        }
    }//GEN-LAST:event_colaboradorCBItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox colaboradorCB;
    private javax.swing.JButton jButtonAplicar;
    private javax.swing.JButton jButtonReceberMarcados;
    private javax.swing.JCheckBox jCheckBoxQuitar;
    private javax.swing.JComboBox jComboBoxTipo;
    private com.toedter.calendar.JDateChooser jDateChooserFinal;
    private com.toedter.calendar.JDateChooser jDateChooserInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextFieldCodigo;
    private javax.swing.JTextField jTextFieldComprado;
    private javax.swing.JTextField jTextFieldDesmarcadas;
    private javax.swing.JTextField jTextFieldEmAberto;
    private javax.swing.JTextField jTextFieldEmAtrazo;
    private javax.swing.JTextField jTextFieldEndereco;
    private javax.swing.JTextField jTextFieldMarcadas;
    private javax.swing.JTextField jTextFieldParcelas;
    private javax.swing.JTextField jTextFieldQantMarcados;
    private javax.swing.JTextField jTextFieldTotalFiltro;
    private javax.swing.JTextField jTextFieldTotalMarcados;
    private javax.swing.JTextField jTextFieldValorPago;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private componentes.UJComboBox uJComboBoxClientes;
    private componentes.UJComboBox uJComboBoxTitulos;
    // End of variables declaration//GEN-END:variables

    private void caregaDados() {
        List<Object> O = Retorna.findList("JsysClientes.findAll");
        O.stream().map((o) -> (JsysClientes) o).forEach((c) -> {
            uJComboBoxClientes.addItem(c.getNomeCorentista() + " - " + c.getIdCliente(), c);
        });

        java.util.Collection T = Retorna.findCollection("JsysTitulos.findAllAtivos");
        for (Object t : T) {
            JsysTitulos titulo = (JsysTitulos) t;
            uJComboBoxTitulos.addItem(new StringBuilder()
                    .append(titulo.getIdTitulo())
                    .append(" ")
                    .append(titulo.getTipoFatura()).toString(), titulo);
        }
    }

    private JsysClientes getuJComboBoxClientes() {
        return (JsysClientes) uJComboBoxClientes.getSelectedObject();
    }

    private void setSelecaoTabela() {
        int row = masterTable.getRowCount() - 1;
        if (row > 0) {
            masterTable.requestFocus();
            masterTable.setRowSelectionInterval(row, row);
        }
    }

    private int getTipo() {
        return jComboBoxTipo.getSelectedIndex();
    }

    private void calculaTotais() {
        try {
            //double count = 0;
            BigDecimal sum = BigDecimal.ZERO;
            for (int i = 0; i <= masterTable.getRowCount() - 1; i++) {
                sum = sum.add(new BigDecimal(Double.parseDouble(masterTable.getValueAt(i, 6).toString())));
            }

            jTextFieldTotalFiltro.setText(ManagerDecimal.converter(sum, "#,##0.00"));
            jTextFieldTotalMarcados.setText(ManagerDecimal.converter(totalMarcados, "#,##0.00"));
            jTextFieldQantMarcados.setText(String.valueOf(titulosABaixar.size()));
            jTextFieldMarcadas.setText(ManagerDecimal.converter(totalMarcados, "#,##0.00"));
            jTextFieldDesmarcadas.setText(ManagerDecimal.converter(sum.subtract(totalMarcados), "#,##0.00"));
            jTextFieldValorPago.setText(ManagerDecimal.converter(totalMarcados, "#,##0.00"));
        } catch (Exception e) {
            Log.registraErro(this, "calculaTotais", e);
        }
    }

    private void calculaResumo() {
        try {
            StringBuilder sql = new StringBuilder();
            sql.append("SELECT isnull(sum(valorTitulo), 0), isnull(sum(Restante), 0) FROM jsysReceber WHERE idCliente = ")
                    .append(getuJComboBoxClientes().getIdCliente().toString())
                    .append(" AND dataCancelar IS NULL");
            ResultSet res = DADOS.execSQL(sql.toString());
            while (res.next()) {
                jTextFieldComprado.setText(ManagerDecimal.converter(res.getDouble(1)));
                jTextFieldEmAberto.setText(ManagerDecimal.converter(res.getDouble(2)));
                jTextFieldParcelas.setText(String.valueOf(masterTable.getRowCount()));
            }
        } catch (SQLException e) {
            Log.registraErro(this.getClass().getName(), "calculaResumo", e);
        }
    }

    private JsysTitulos getSelectTitulo() {
        return (JsysTitulos) uJComboBoxTitulos.getSelectedObject();
    }

    private class setFiltro extends SwingWorker<Void, Object> {

        final Progress p = new Progress(false);

        public setFiltro() {
            masterTable.setFocusable(false);
            masterTable.setEnabled(false);
            jTextFieldCodigo.requestFocus();
            execute();
            p.setVisible(true);
        }

        @Override
        protected Void doInBackground() throws Exception {
            titulosABaixar.clear();
            totalMarcados = BigDecimal.ZERO;
            StringBuilder sql = new StringBuilder();
            String orderBy = new String();
            sql.append("SELECT jsysReceber.idReceber ").append(",jsysReceber.seqReceber ")
                    .append(",jsysReceber.idTitulo ")
                    .append(",dataVencimento ")
                    .append(",valorTitulo ")
                    .append(",isnull(sum(jsysReceberBaixa.valor), 0) AS valorPago ")
                    .append(",jsysReceber.restante ")
                    .append(",Descontos ")
                    .append(",dataEmissao ")
                    .append(",dataCancelar ")
                    .append(",jsysReceber.idloja ")
                    .append(",jsysReceber.idCliente ")
                    .append(",jsysClientes.nomeCorentista ")
                    .append("FROM jsysReceber ")
                    .append("INNER JOIN jsysClientes ON jsysClientes.idCliente = jsysReceber.idCliente ")
                    .append("LEFT JOIN jsysReceberBaixa ON jsysReceberBaixa.idReceber = jsysReceber.idReceber ")
                    .append("AND jsysReceberBaixa.seqReceber = jsysReceber.seqReceber ");
            switch (getTipo()) {
                case 0: // Nรฃo Pagos 0
                    if (!colaboradorCB.isSelected() & jDateChooserInicio.getDate() != null & jDateChooserFinal.getDate() != null) {
                        sql.append("WHERE (jsysReceber.idCliente = ").append(getuJComboBoxClientes().getIdCliente()).append(") ");
                        sql.append("AND (jsysReceber.quitado = 0) ");
                        sql.append("AND (jsysReceber.dataCancelar is null) ");
                        sql.append("AND (dbo.setTimeNull(jsysReceber.dataVencimento) BETWEEN dbo.setTimeNull('")
                                .append(ManagerData.convertUsDate(jDateChooserInicio.getDate()))
                                .append("') AND dbo.setTimeNull('")
                                .append(ManagerData.convertUsDate(jDateChooserFinal.getDate()))
                                .append("')) ");
                        orderBy = "dataVencimento";
                    } else if (colaboradorCB.isSelected() & jDateChooserInicio.getDate() != null & jDateChooserFinal.getDate() != null) {
                        sql.append("WHERE (jsysReceber.quitado = 0) ");
                        sql.append("AND (jsysReceber.dataCancelar is null) ");
                        sql.append("AND (jsysClientes.colaborador = 1)");
                        sql.append("AND (dbo.setTimeNull(jsysReceber.dataVencimento) BETWEEN dbo.setTimeNull('")
                                .append(ManagerData.convertUsDate(jDateChooserInicio.getDate()))
                                .append("') AND dbo.setTimeNull('")
                                .append(ManagerData.convertUsDate(jDateChooserFinal.getDate()))
                                .append("')) ");
                        orderBy = "idCliente, dataVencimento";
                    } else {
                        sql.append("WHERE (jsysReceber.quitado = 0) ");
                        sql.append("AND (jsysReceber.dataCancelar is null) ");
                        sql.append("AND (jsysReceber.idCliente = ").append(getuJComboBoxClientes().getIdCliente()).append(")");
                        orderBy = "dataVencimento";
                    }
                    break;
                case 1: // Pagos 1
                    if (jDateChooserInicio.getDate() != null & jDateChooserFinal.getDate() != null) {
                        sql.append("WHERE (jsysReceber.idCliente = ").append(getuJComboBoxClientes().getIdCliente()).append(") ");
                        sql.append("AND (jsysReceber.quitado = 1) ");
                        sql.append("AND (jsysReceber.dataCancelar is null) ");
                        sql.append("AND (dbo.setTimeNull(jsysReceber.dataVencimento) BETWEEN dbo.setTimeNull('")
                                .append(ManagerData.convertUsDate(jDateChooserInicio.getDate()))
                                .append("') AND dbo.setTimeNull('")
                                .append(ManagerData.convertUsDate(jDateChooserFinal.getDate()))
                                .append("')) ");
                        orderBy = "dataVencimento";
                    } else {
                        sql.append("WHERE (jsysReceber.quitado = 1) ");
                        sql.append("AND (jsysReceber.dataCancelar is null) ");
                        sql.append("AND (jsysReceber.idCliente = ").append(getuJComboBoxClientes().getIdCliente()).append(")");
                        orderBy = "dataVencimento";
                    }
                    break;
                case 2: // Vencidos 2
                    if (jDateChooserFinal.getDate() != null) {
                        sql.append("WHERE (jsysReceber.idCliente = ").append(getuJComboBoxClientes().getIdCliente()).append(") ");
                        sql.append("AND (jsysReceber.quitado = 0) ");
                        sql.append("AND (jsysReceber.dataCancelar is null) ");
                        sql.append("AND (dbo.setTimeNull(jsysReceber.dataVencimento) <= dbo.setTimeNull('")
                                .append(ManagerData.convertUsDate(jDateChooserFinal.getDate()))
                                .append("')) ");
                        orderBy = "dataVencimento";
                    } else {
                        sql.append("WHERE (jsysReceber.idCliente = ").append(getuJComboBoxClientes().getIdCliente()).append(") ");
                        sql.append("AND (jsysReceber.quitado = 0) ");
                        sql.append("AND (jsysReceber.dataCancelar is null) ");
                        sql.append("AND (dbo.setTimeNull(jsysReceber.dataVencimento) <= dbo.setTimeNull('")
                                .append(ManagerData.convertUsDate(ManagerData.getDate()))
                                .append("')) ");
                        orderBy = "dataVencimento";
                    }
                    break;
                case 3: // Todos 3
                    sql.append("WHERE jsysReceber.idCliente = ");
                    sql.append(getuJComboBoxClientes().getIdCliente()).append(" ");
                    orderBy = "dataVencimento";
                    break;
            }
            sql.append("GROUP BY jsysReceber.idReceber ")
                    .append(",jsysReceber.seqReceber ")
                    .append(",jsysReceber.idTitulo ")
                    .append(",dataVencimento ")
                    .append(",valorTitulo ")
                    .append(",jsysReceber.restante ")
                    .append(",Descontos ")
                    .append(",dataEmissao ")
                    .append(",dataCancelar ")
                    .append(",jsysReceber.idloja ")
                    .append(",jsysReceber.idCliente ")
                    .append(",jsysClientes.nomeCorentista ")
                    .append("ORDER BY ").append(orderBy);
            ResultSet x = DADOS.execSQL(sql);
            // Definiรงรฃo do TableModel
            DefaultTableModel aModel = new DefaultTableModel(new Object[][]{}, new String[]{"Cรณdigo",
                "Parcela",
                "Titulo",
                "Vencimento",
                "Valor",
                "Pago",
                "Restante",
                "Descontos",
                "Emissรฃo",
                "Cancelado",
                "Loja",
                "Cliente",
                "Nome Cliente",}) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };
            java.sql.ResultSetMetaData rsmd = x.getMetaData();
            int colNo = rsmd.getColumnCount();
            while (x.next()) {
                Object[] objects = new Object[colNo];
                for (int i = 0; i < colNo; i++) {
                    objects[i] = x.getObject(i + 1);
                }
                aModel.addRow(objects);
            }
            masterTable.setModel(aModel);

            masterTable.getColumnModel().getColumn(3).setCellRenderer(new ColorirGridDebitos());
            masterTable.getColumnModel().getColumn(0).setCellRenderer(new MarcarGridReceber(getTitulosABaixar()));

            masterTable.getColumnModel().getColumn(0).setPreferredWidth(62);
            masterTable.getColumnModel().getColumn(1).setPreferredWidth(51);
            masterTable.getColumnModel().getColumn(2).setPreferredWidth(45);
            masterTable.getColumnModel().getColumn(3).setPreferredWidth(75);
            masterTable.getColumnModel().getColumn(4).setPreferredWidth(85);
            masterTable.getColumnModel().getColumn(5).setPreferredWidth(85);
            masterTable.getColumnModel().getColumn(6).setPreferredWidth(85);
            masterTable.getColumnModel().getColumn(7).setPreferredWidth(85);
            masterTable.getColumnModel().getColumn(8).setPreferredWidth(75);
            masterTable.getColumnModel().getColumn(9).setPreferredWidth(68);
            masterTable.getColumnModel().getColumn(10).setPreferredWidth(68);
            masterTable.getColumnModel().getColumn(11).setPreferredWidth(49);
            masterTable.getColumnModel().getColumn(12).setPreferredWidth(300);
            return null;
        }

        @Override
        protected void done() {
            super.done();
            try {
                calculaTotais();
                calculaResumo();
                p.dispose();
                masterTable.setFocusable(true);
                masterTable.setEnabled(true);
                masterTable.repaint();
                setSelecaoTabela();
            } catch (Exception e) {
                p.dispose();
            }
        }
    }
}
