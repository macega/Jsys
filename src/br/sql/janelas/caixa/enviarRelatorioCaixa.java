/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.sql.janelas.caixa;

import br.sql.acesso.SQLDatabaseConnection;
import br.sql.log.Log;
import br.sql.util.ESCPrinter;
import br.sql.util.ManagerString;
import br.sql.util.ManagerData;
import br.sql.util.Progress;
import br.sql.util.Mail;
import br.sql.util.ManagerDecimal;
import java.io.UnsupportedEncodingException;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.mail.MessagingException;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;

/**
 *
 * @author Juliano Alves Medina
 */
public class enviarRelatorioCaixa extends javax.swing.JDialog {

    private static final SQLDatabaseConnection DADOS = new SQLDatabaseConnection();

    /**
     * Creates new form enviarRelatorioCaixa
     *
     * @param parent
     * @param modal
     */
    public enviarRelatorioCaixa(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jCalendar = new com.toedter.calendar.JCalendar();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        obsjTextArea1 = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Envio de Caixa");
        setResizable(false);

        jButton1.setText("Enviar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Email Caixa");
        jLabel1.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Data"));

        jCalendar.setDate(ManagerData.getDate());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Obs"));

        obsjTextArea1.setColumns(20);
        obsjTextArea1.setRows(5);
        jScrollPane1.setViewportView(obsjTextArea1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jButton3.setText("Imprimir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 233, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        final Progress p = new Progress();
        SwingWorker worker = new SwingWorker() {

            @Override
            protected Void doInBackground() {
                try {
                    Mail correio = new Mail();
                    correio.setDestinatario(br.JavaApplicationJsys.INI.getString("EMAIL", "NOME_EMAIL"), br.JavaApplicationJsys.INI.getString("EMAIL", "DESTINO_CAIXA"));
                    correio.senderMail("Caixa dia: " + ManagerData.convertDate(jCalendar.getDate(), "dd/MM/yyyy"), mensgem());
                } catch (UnsupportedEncodingException | SQLException | MessagingException e) {
                    Log.registraErro(this.getClass().getName(), "jButton1ActionPerformed", e);
                    JOptionPane.showMessageDialog(null, "ERRO Caixa Nao Enviado", "Erro", JOptionPane.ERROR_MESSAGE);
                    return null;
                }
                JOptionPane.showMessageDialog(null, "Caixa Enviado com Sucesso", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                return null;
            }

            @Override
            protected void done() {
                super.done();
                p.dispose();
            }
        };
        worker.execute();
        p.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        final Progress p = new Progress();
        SwingWorker worker = new SwingWorker() {
            @Override
            protected Void doInBackground() throws Exception {
                ESCPrinter p = new ESCPrinter(br.JavaApplicationJsys.INI.getString("LISTA IMP", "IMP1"), true);
                if (p.initialize()) {
                    try {
                        ResultSet rsResumoCaixa = DADOS.execSQL("SELECT id, descricao, data, valor, cor FROM jsysResumoDeCaixa WITH (NOLOCK) "
                                + "WHERE (data = '" + ManagerData.convertUsDate(ManagerData.setHoraInicioDia(jCalendar.getDate())) + "') "
                                + "ORDER BY id ");
                        p.setCharacterSet(ESCPrinter.BRAZIL);
                        p.setTamanhoPapel(33);
                        p.esquerda();
                        p.selectRoman();
                        p.negrito(true);
                        p.print("Caixa Dia: " + ManagerData.convertBrDate(jCalendar.getDate()), true);
                        p.negrito(false);
                        p.print("--------------------------------------------------------", true);
                        p.print("DESCRICAO                          |               VALOR", true);
                        while (rsResumoCaixa.next()) {
                            StringBuilder str = new StringBuilder();
                            str.append(ManagerString.espacosDireita(rsResumoCaixa.getString("descricao"), 35));
                            str.append("|");
                            str.append(ManagerString.espacosEsquerda(
                                    ManagerDecimal.converter(rsResumoCaixa.getDouble("valor"), "#,##0.00"), 20));
                            p.print(str.toString(), true);
                        }

                        ResultSet rsNfce = DADOS.execSQL("select sum(jsysOrcamento.valorLiquido) as total from jsysnfe WITH (NOLOCK) inner join jsysOrcamento WITH (NOLOCK) on jsysOrcamento.idOrcamento = jsysnfe.venda "
                                + "where emitida = 1 and dbo.setTimeNull(dhEmi) between '" + ManagerData.convertUsDate(ManagerData.setHoraInicioDia(jCalendar.getDate())) + "' and '" + ManagerData.convertUsDate(ManagerData.setHoraInicioDia(jCalendar.getDate())) + "'");
                        while (rsNfce.next()) {
                            p.print("NFC-e: " + ManagerDecimal.converter(rsNfce.getDouble("total"), "#,##0.00"), true);
                        }

                        p.print("OBS: " + obsjTextArea1.getText(), true);
                        p.formFeed();
                    } catch (SQLException e) {
                        Log.registraErro(this.getClass().getName(), "imprimir", e);
                        JOptionPane.showMessageDialog(null, "Erro de Impressora");
                    }
                    p.close();
                } else {
                    JOptionPane.showMessageDialog(null, "Não foi possível Conectar a Impressora");
                }
                return null;
            }

            @Override
            protected void done() {
                p.dispose();
            }
        };
        worker.execute();
        p.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private com.toedter.calendar.JCalendar jCalendar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea obsjTextArea1;
    // End of variables declaration//GEN-END:variables

    private String mensgem() throws SQLException {
        StringBuilder valor = new StringBuilder();
        ResultSet rsAvistaEmAberto = DADOS.execSQL("SELECT Venda, Emissao, Valor, Atz FROM jsysCaixa WITH (NOLOCK) WHERE (Tipo = 4)");
        ResultSet rsLiberacao = DADOS.execSQL("SELECT OBS, VENDEDOR, CLIENTE, id, tabelaOrigem, idOrigem, motivo, usuario, data, hora, tipo, usuarioLogado FROM listaLiberacao WITH (NOLOCK) "
                + "WHERE (data = '" + ManagerData.convertUsDate(ManagerData.setHoraInicioDia(jCalendar.getDate())) + "')");
        ResultSet rsRetiradas = DADOS.execSQL("SELECT id, descricao, data, valor, dataRetirada, NomeRetData, cor FROM jsysResumoDeRetiradas WITH (NOLOCK) "
                + "WHERE (data = '" + ManagerData.convertUsDate(ManagerData.setHoraInicioDia(jCalendar.getDate())) + "') "
                + "ORDER BY dataRetirada, valor ");
        ResultSet rsResumoCaixa = DADOS.execSQL("SELECT id, descricao, data, valor, cor FROM jsysResumoDeCaixa WITH (NOLOCK) "
                + "WHERE (data = '" + ManagerData.convertUsDate(ManagerData.setHoraInicioDia(jCalendar.getDate())) + "') "
                + "ORDER BY id ");
        try {
            valor.append("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">")
                    .append("<html>")
                    .append("<head>").append(System.lineSeparator())
                    .append("  <meta name=\"generator\" content=\"HTML Tidy for Windows (vers 18 June 2008), see www.w3.org\">").append(System.lineSeparator())
                    .append("  <title></title>").append(System.lineSeparator())
                    .append("</head>")
                    .append("<body><font color=\"red\" size=\"6\">Caixa dia: ").append(ManagerData.convertDate(jCalendar.getDate(), "dd/MM/yyyy")).append("</font>");
            int contador = 0;
            while (rsAvistaEmAberto.next()) {
                valor.append(contador == 0 ? "<p><font color=\"red\" size=\"6\">Caixa com Erro, (Contem Venda(s) Em Aberto)</font></p>" : "");
                valor.append("<p><font color=\"red\" size=\"6\">").append(rsAvistaEmAberto.getString("Venda"))
                        .append(" - ").append(ManagerData.convertDate(rsAvistaEmAberto.getDate("Emissao"), "dd/MM/yyyy"))
                        .append(" : Valor ").append(ManagerDecimal.converter(rsAvistaEmAberto.getDouble("Valor"), "#,##0.00"))
                        .append("; Dias no Caixa ").append(rsAvistaEmAberto.getString("Atz")).append("</font></p>");
                contador++;
            }
            contador = 0;
            while (rsResumoCaixa.next()) {
                valor.append(contador == 0 ? "<table style=\"background-color:#eee;border:1px solid black;border-collapse:collapse;\">" : "")
                        .append(contador == 0 ? "<th style=\"background-color:#000;color:white;width:50%;\">DESCRIÇÃO</th><th style=\"background-color:#000;color:white;width:50%;\">VALOR</th>" : "");
                valor.append("<tr><td style=\"border:1px solid black;\" valign=\"top\"><font color=\"").append(rsResumoCaixa.getString("cor")).append("\" size=\"5\">")
                        .append(rsResumoCaixa.getString("descricao")).append("</font></td>")
                        .append("<td style=\"border:1px solid black;\" valign=\"top\" align=\"right\"><font color=\"").append(rsResumoCaixa.getString("cor")).append("\" size=\"5\">")
                        .append(ManagerDecimal.converter(rsResumoCaixa.getDouble("valor"), "#,##0.00")).append("</font></td></tr>");
                contador++;
            }
            valor.append("</table>");
            ResultSet rsNfce = DADOS.execSQL("select sum(jsysOrcamento.valorLiquido) as total from jsysnfe WITH (NOLOCK) inner join jsysOrcamento WITH (NOLOCK) on jsysOrcamento.idOrcamento = jsysnfe.venda "
                    + "where emitida = 1 and dbo.setTimeNull(dhEmi) between '" + ManagerData.convertUsDate(ManagerData.setHoraInicioDia(jCalendar.getDate())) + "' and '" + ManagerData.convertUsDate(ManagerData.setHoraInicioDia(jCalendar.getDate())) + "'");
            while (rsNfce.next()) {
                valor.append("<p><font color=\"green\" size=\"6\">NFC-e: ").append(ManagerDecimal.converter(rsNfce.getDouble("total"), "#,##0.00")).append("</font></p>");
            }
            valor.append("<p><font color=\"green\" size=\"6\">OBS: ").append(obsjTextArea1.getText()).append("</font></p>");
            contador = 0;
            while (rsRetiradas.next()) {
                valor.append(contador == 0 ? "<table style=\"background-color:#eee;border:1px solid black;border-collapse:collapse;\">" : "")
                        .append(contador == 0 ? "<th style=\"background-color:#000;color:white;width:50%;\">DESCRIÇÃO</th><th style=\"background-color:#000;color:white;width:50%;\">DATA</th><th style=\"background-color:#000;color:white;width:50%;\">VALOR</th>" : "");
                valor.append("<tr><td style=\"border:1px solid black;\" valign=\"top\" align=\"left\"><font color=\"").append(rsRetiradas.getString("cor")).append("\" size=\"5\">")
                        .append(rsRetiradas.getString("descricao")).append("</font></td>")
                        .append("<td style=\"border:1px solid black;\" valign=\"top\" align=\"left\"><font color=\"").append(rsRetiradas.getString("cor")).append("\" size=\"5\">")
                        .append(ManagerData.convertBrDate(rsRetiradas.getDate("dataRetirada"))).append("</font></td>")
                        .append("<td style=\"border:1px solid black;\" valign=\"top\" align=\"right\"><font color=\"").append(rsRetiradas.getString("cor")).append("\" size=\"5\">")
                        .append(ManagerDecimal.converter(rsRetiradas.getDouble("valor"), "#,##0.00")).append("</font></td></tr>");
                contador++;
            }
            valor.append("</table>");
            contador = 0;
            while (rsLiberacao.next()) {
                valor.append(contador == 0 ? "<table style=\"background-color:#eee;border:1px solid black;border-collapse:collapse;\">" : "")
                        .append(contador == 0 ? "<th style=\"background-color:#000;color:white;width:50%;\">Lista Liberacao</th>" : "");
                valor.append("<tr><td>Liberação de ").append(rsLiberacao.getString("tipo")).append(" - Hora: ").append(ManagerData.convertDate(rsLiberacao.getTime("hora"), "HH:mm:ss"))
                        .append(" - Usuario: ").append(rsLiberacao.getString("usuario")).append("</td></tr>")
                        .append("<tr><td>").append(rsLiberacao.getString("tabelaOrigem")).append(": ").append(rsLiberacao.getString("idOrigem"))
                        .append(" - Vendedor: ").append(rsLiberacao.getString("VENDEDOR")).append("</td></tr>")
                        .append("<tr><td>Obs: ").append(rsLiberacao.getString("OBS")).append("</td></tr>")
                        .append("<tr><td>Motivo: ").append(rsLiberacao.getString("motivo")).append("</td></tr>")
                        .append("<tr><td align=\"center\">--- --- --- --- ---</td></tr>");
                contador++;
            }
            valor.append("</table>");
            valor.append("<p><font color=\"black\" size=\"3\" align=\"center\">Jsys - versão: ").append(br.JavaApplicationJsys.VERSAO_STRING).append("</font></p>");
            valor.append("</body></html>");
            return valor.toString();
        } catch (SQLException e) {
            Log.registraErro(this.getClass().getName(), "mensgem", e);
            JOptionPane.showMessageDialog(null, e.getMessage());
            return null;
        }
    }
}
