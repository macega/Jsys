package br.sql.janelas.ponto;

import br.rel.filtros.FiltroDataInicialFinal;
import br.sql.acesso.ConnectionFactory;
import br.sql.acesso.SQLDatabaseConnection;
import br.sql.bean.FuncionariosPonto;
import br.sql.bean.views.JsysFuncionarios;
import br.sql.log.Log;
import br.sql.defaultTableCellRenderer.ZebradoLocation;
import br.sql.util.ManagerData;
import br.sql.util.Progress;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.RollbackException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.SwingWorker;

/**
 *
 * @author Juliano Alves Medina
 */
public class PontoAjusteJanela extends JPanel {

    private static final SQLDatabaseConnection DADOS = new SQLDatabaseConnection();

    public PontoAjusteJanela() {
        initComponents();
        // permite parar e tirar a seleção de uma célula quando clicar em  
        // qualquer outro componente da janela
        masterTable.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);
        // ************ faz a tecla ENTER se comportar como a tecla TAB  
        masterTable.getInputMap(JTable.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false), "selectNextColumnCell");
        masterTable.setDefaultRenderer(Object.class, new ZebradoLocation());
        masterTable.setDefaultRenderer(java.util.Date.class, new ZebradoLocation());
        masterTable.setDefaultRenderer(Long.class, new ZebradoLocation());
        masterTable.setDefaultRenderer(Boolean.class, new ZebradoLocation());
        // ******* permite mudar para a próxima célula depois de editar a corrente  
//      masterTable.setSurrendersFocusOnKeystroke(true);

        setFiltro();

        final Progress p = new Progress();
        SwingWorker worker = new SwingWorker() {
            @Override
            protected Void doInBackground() throws SQLException {
                DADOS.execProcedure("atulizarFaltas");
                return null;
            }

            @Override
            protected void done() {
                super.done();
                refreshButtonActionPerformed(null);
                p.dispose();
            }
        };
        worker.execute();
        p.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        query = java.beans.Beans.isDesignTime() ? null : ConnectionFactory.getEntityManagerNew().createQuery("SELECT f FROM FuncionariosPonto f WHERE f.id = 0");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        funcionariosQuery = java.beans.Beans.isDesignTime() ? null : ConnectionFactory.getEntityManagerNew().createQuery("SELECT j FROM JsysFuncionarios j");
        funcionariosList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(funcionariosQuery.getResultList());
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        funcionarioJComboBox = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        dataInicioJDC = new com.toedter.calendar.JDateChooser();
        dataFimJDC = new com.toedter.calendar.JDateChooser();
        TodosJCombox = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        FormListener formListener = new FormListener();

        masterTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        masterTable.setColumnSelectionAllowed(true);
        masterTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        masterTable.setSurrendersFocusOnKeystroke(true);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${funcionario.nomeCorentista}"));
        columnBinding.setColumnName("Nome");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${funcionariosPontoPK.data}"));
        columnBinding.setColumnName("Data");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${entrada}"));
        columnBinding.setColumnName("Entrada");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${intervaloInicio}"));
        columnBinding.setColumnName("Intervalo Inicio");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${intervaloFim}"));
        columnBinding.setColumnName("Intervalo Fim");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${saida}"));
        columnBinding.setColumnName("Saida");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${feriado}"));
        columnBinding.setColumnName("Feriado");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${atestado}"));
        columnBinding.setColumnName("Atestado");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${falta}"));
        columnBinding.setColumnName("Falta");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${meiaFalta}"));
        columnBinding.setColumnName("Meia Falta");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${avisoPrevio}"));
        columnBinding.setColumnName("Aviso Previo");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${lactante}"));
        columnBinding.setColumnName("Lactante");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${compensacao}"));
        columnBinding.setColumnName("Compensação");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${verificar}"));
        columnBinding.setColumnName("Verificar");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${ferias}"));
        columnBinding.setColumnName("Ferias");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${outros}"));
        columnBinding.setColumnName("Outros");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${licencaMaternidade}"));
        columnBinding.setColumnName("Licença Maternidade");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${obs}"));
        columnBinding.setColumnName("Obs");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Long.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterScrollPane.setViewportView(masterTable);
        masterTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (masterTable.getColumnModel().getColumnCount() > 0) {
            masterTable.getColumnModel().getColumn(0).setPreferredWidth(225);
            masterTable.getColumnModel().getColumn(1).setPreferredWidth(64);
            masterTable.getColumnModel().getColumn(2).setPreferredWidth(60);
            masterTable.getColumnModel().getColumn(2).setCellEditor(new br.sql.editor.HoraTableCellEditor());
            masterTable.getColumnModel().getColumn(2).setCellRenderer(new br.sql.defaultTableCellRenderer.FormataTime());
            masterTable.getColumnModel().getColumn(3).setPreferredWidth(95);
            masterTable.getColumnModel().getColumn(3).setCellEditor(new br.sql.editor.HoraTableCellEditor());
            masterTable.getColumnModel().getColumn(3).setCellRenderer(new br.sql.defaultTableCellRenderer.FormataTime());
            masterTable.getColumnModel().getColumn(4).setPreferredWidth(86);
            masterTable.getColumnModel().getColumn(4).setCellEditor(new br.sql.editor.HoraTableCellEditor());
            masterTable.getColumnModel().getColumn(4).setCellRenderer(new br.sql.defaultTableCellRenderer.FormataTime());
            masterTable.getColumnModel().getColumn(5).setPreferredWidth(49);
            masterTable.getColumnModel().getColumn(5).setCellEditor(new br.sql.editor.HoraTableCellEditor());
            masterTable.getColumnModel().getColumn(5).setCellRenderer(new br.sql.defaultTableCellRenderer.FormataTime());
            masterTable.getColumnModel().getColumn(6).setPreferredWidth(57);
            masterTable.getColumnModel().getColumn(7).setPreferredWidth(66);
            masterTable.getColumnModel().getColumn(8).setPreferredWidth(44);
            masterTable.getColumnModel().getColumn(10).setPreferredWidth(79);
            masterTable.getColumnModel().getColumn(11).setPreferredWidth(63);
            masterTable.getColumnModel().getColumn(12).setPreferredWidth(87);
            masterTable.getColumnModel().getColumn(13).setPreferredWidth(60);
            masterTable.getColumnModel().getColumn(14).setPreferredWidth(49);
            masterTable.getColumnModel().getColumn(15).setPreferredWidth(54);
            masterTable.getColumnModel().getColumn(16).setPreferredWidth(118);
            masterTable.getColumnModel().getColumn(17).setPreferredWidth(71);
            masterTable.getColumnModel().getColumn(18).setPreferredWidth(50);
        }

        funcionarioJComboBox.setToolTipText("");
        funcionarioJComboBox.setRenderer(new br.sql.defaultListCellRenderer.Funcionarios());

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, funcionariosList, funcionarioJComboBox, "");
        bindingGroup.addBinding(jComboBoxBinding);
        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, TodosJCombox, org.jdesktop.beansbinding.ELProperty.create("${!selected}"), funcionarioJComboBox, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jButton1.setText("Aplicar");
        jButton1.addActionListener(formListener);

        refreshButton.setText("Cancela");
        refreshButton.addActionListener(formListener);

        saveButton.setForeground(new java.awt.Color(0, 153, 0));
        saveButton.setText("Confirma");
        saveButton.addActionListener(formListener);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Data Inicial:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Data Final:");

        dataInicioJDC.setDate(ManagerData.sumDays(ManagerData.getDate(), -1));

        dataFimJDC.setDate(ManagerData.sumDays(ManagerData.getDate(), -1));

        TodosJCombox.setSelected(true);
        TodosJCombox.setText("Todos");

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 255));
        jButton2.setText("Imprimir");
        jButton2.addActionListener(formListener);

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 0, 0));
        jButton3.setText("Ajustes");
        jButton3.addActionListener(formListener);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(TodosJCombox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(funcionarioJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(dataInicioJDC, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dataFimJDC, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 207, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(dataInicioJDC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(dataFimJDC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(funcionarioJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TodosJCombox)
                            .addComponent(saveButton)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(refreshButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Ponto Ajuste ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(masterScrollPane))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                .addGap(11, 11, 11)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == jButton1) {
                PontoAjusteJanela.this.jButton1ActionPerformed(evt);
            }
            else if (evt.getSource() == refreshButton) {
                PontoAjusteJanela.this.refreshButtonActionPerformed(evt);
            }
            else if (evt.getSource() == saveButton) {
                PontoAjusteJanela.this.saveButtonActionPerformed(evt);
            }
            else if (evt.getSource() == jButton2) {
                PontoAjusteJanela.this.jButton2ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton3) {
                PontoAjusteJanela.this.jButton3ActionPerformed(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        final Progress p = new Progress();
        SwingWorker worker = new SwingWorker() {
            @Override
            protected Void doInBackground() throws Exception {
                salva();
                return null;
            }

            @Override
            protected void done() {
                super.done();
                p.dispose();
            }
        };
        worker.execute();
        p.setVisible(true);
    }//GEN-LAST:event_saveButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        setFiltro();
    }//GEN-LAST:event_jButton1ActionPerformed

    @SuppressWarnings("unchecked")
    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        ConnectionFactory.cancelar();
        java.util.Collection data = query.getResultList();
        for (Object entity : data) {
            ConnectionFactory.getEntityManagerNew().refresh(entity);
        }
        list.clear();
        list.addAll(data);
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        FiltroDataInicialFinal filtroDataInicialFinal = new FiltroDataInicialFinal("/br/rel/ponto/cartaoPonto.jasper", FiltroDataInicialFinal.MES);
        filtroDataInicialFinal.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        PontoAjuste dialog = new PontoAjuste(new javax.swing.JFrame(), true);
        dialog.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox TodosJCombox;
    private com.toedter.calendar.JDateChooser dataFimJDC;
    private com.toedter.calendar.JDateChooser dataInicioJDC;
    private javax.swing.JComboBox funcionarioJComboBox;
    private java.util.List<br.sql.bean.views.JsysFuncionarios> funcionariosList;
    private javax.persistence.Query funcionariosQuery;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private java.util.List<br.sql.bean.FuncionariosPonto> list;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private javax.persistence.Query query;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton saveButton;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    @SuppressWarnings("unchecked")
    private void setFiltro() {
        try {
            if (TodosJCombox.isSelected()) {
                query = ConnectionFactory.getEntityManagerNew().createNamedQuery("FuncionariosPonto.findByData");
                query.setParameter("inicio", ManagerData.setHoraInicioDia(dataInicioJDC.getDate()));
                query.setParameter("fim", ManagerData.setHoraFimDia(dataFimJDC.getDate()));
            } else {
                query = ConnectionFactory.getEntityManagerNew().createNamedQuery("FuncionariosPonto.findByIdFuncionarioData");
                query.setParameter("idFuncionario", ((JsysFuncionarios) funcionarioJComboBox.getSelectedItem()).getIdFuncionario());
                query.setParameter("inicio", ManagerData.setHoraInicioDia(dataInicioJDC.getDate()));
                query.setParameter("fim", ManagerData.setHoraFimDia(dataFimJDC.getDate()));
            }
            java.util.Collection rs = query.getResultList();
            list.clear();
            list.addAll(rs);
        } catch (Exception e) {
            Log.registraErro(this.getClass().getName(), "setFiltro", e);
        }
    }

    private void salva() {
        try {
            ConnectionFactory.salvar();
            JOptionPane.showMessageDialog(null, "Salvo com Sucesso", "Mensagem", JOptionPane.INFORMATION_MESSAGE);
        } catch (RollbackException e) {
            JOptionPane.showMessageDialog(null, "Erro ao Tentar Salvar dados", "ERRO", JOptionPane.ERROR_MESSAGE);
            Log.registraErro(this.getClass().getName(), "salva", e);
            ConnectionFactory.iniciaBean();
            List<FuncionariosPonto> merged = new ArrayList<>(list.size());
            for (FuncionariosPonto f : list) {
                merged.add(ConnectionFactory.getEntityManagerNew().merge(f));
            }
            list.clear();
            list.addAll(merged);
        }
    }
}
