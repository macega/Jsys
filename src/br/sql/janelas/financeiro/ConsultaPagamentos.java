package br.sql.janelas.financeiro;

import br.sql.acesso.ConnectionFactory;
import br.sql.bean.JsysClientes;
import br.sql.bean.Liberacao;
import br.sql.bean.Pagamentos;
import br.sql.bean.geral.pagamentosMarcados;
import br.sql.janelas.caixa.PagamentosCaixa;
import br.sql.janelas.liberacoes.LiberacaoGenericaJDialog;
import br.sql.log.Log;
import br.sql.tableCellRenderer.MarcarGridPagamentos;
import br.sql.util.ManagerData;
import br.sql.util.Retorna;
import java.awt.AWTKeyStroke;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import javax.persistence.RollbackException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import jsys.sql.Menu;

/**
 *
 * @author Juliano Alves Medina
 */
public class ConsultaPagamentos extends JPanel {

    private final ArrayList<pagamentosMarcados> listPagamentos = new ArrayList<>();

    @SuppressWarnings("unchecked")
    public ConsultaPagamentos() {
        initComponents();
        HashSet conj = new HashSet(jPanel2.getFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS));
        conj.add(AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_ENTER, 0));
        jPanel2.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, conj);
        List<Object> O = Retorna.findList("JsysClientes.findAllAtivos");
        for (Object o : O) {
            JsysClientes c = (JsysClientes) o;
            uJComboBoxCorentistas.addItem(c.getNomeCorentista() + " - " + c.getIdCliente(), c);
        }
        setFiltro();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        query = java.beans.Beans.isDesignTime() ? null : ConnectionFactory.getEntityManagerNew().createQuery("SELECT p FROM Pagamentos p WHERE p.idPagamentos = 0");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        uJComboBoxCorentistas = new componentes.UJComboBox();
        jLabel2 = new javax.swing.JLabel();
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldOutrosNumeros = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxTipo = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        dataFinaljDateChooser = new com.toedter.calendar.JDateChooser();
        dataInicialjDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jCheckBoxTodos = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        editarJButon = new javax.swing.JButton();
        novaJButon = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldTitulos = new javax.swing.JTextField();
        jTextFieldPagos = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldAPagar = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldRegistros = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        baixarJButton = new javax.swing.JButton();
        cancelarJButon = new javax.swing.JButton();
        reabrirJButton = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();

        FormListener formListener = new FormListener();

        setPreferredSize(new java.awt.Dimension(939, 542));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Consultar Contas รก Pagar");
        jLabel1.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        uJComboBoxCorentistas.setAutocompletar(true);
        uJComboBoxCorentistas.setEnabled(false);

        jLabel2.setText("Corentista:");
        jLabel2.setToolTipText("");

        masterTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        masterTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        masterTable.setRowHeight(18);
        masterTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idPagamentos}"));
        columnBinding.setColumnName("Codigo");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idTitulo}"));
        columnBinding.setColumnName("Titulo");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nomeFornecedor}"));
        columnBinding.setColumnName("Nome Fornecedor");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${quitado}"));
        columnBinding.setColumnName("Quitado");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dataEmissao}"));
        columnBinding.setColumnName("Emissao");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dataVencimento}"));
        columnBinding.setColumnName("Vencimento");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dataPagamento}"));
        columnBinding.setColumnName("Pagamento");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valorTitulo}"));
        columnBinding.setColumnName("Valor Titulo");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valorPago}"));
        columnBinding.setColumnName("Valor Pago");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${restante}"));
        columnBinding.setColumnName("Restante");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valorEstorno}"));
        columnBinding.setColumnName("Valor Estorno");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idBanco}"));
        columnBinding.setColumnName("Id Banco");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${obs}"));
        columnBinding.setColumnName("Obs");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idFornecedor.idCliente}"));
        columnBinding.setColumnName("Codigo Fornecedor");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterTable.addKeyListener(formListener);
        masterScrollPane.setViewportView(masterTable);
        if (masterTable.getColumnModel().getColumnCount() > 0) {
            masterTable.getColumnModel().getColumn(0).setPreferredWidth(80);
            masterTable.getColumnModel().getColumn(0).setCellRenderer(new MarcarGridPagamentos(listPagamentos));
            masterTable.getColumnModel().getColumn(1).setPreferredWidth(50);
            masterTable.getColumnModel().getColumn(2).setPreferredWidth(280);
            masterTable.getColumnModel().getColumn(3).setPreferredWidth(60);
            masterTable.getColumnModel().getColumn(4).setPreferredWidth(85);
            masterTable.getColumnModel().getColumn(5).setPreferredWidth(95);
            masterTable.getColumnModel().getColumn(5).setCellRenderer(new br.sql.defaultTableCellRenderer.ColorirGridDebitos(list));
            masterTable.getColumnModel().getColumn(6).setPreferredWidth(85);
            masterTable.getColumnModel().getColumn(7).setPreferredWidth(100);
            masterTable.getColumnModel().getColumn(8).setPreferredWidth(100);
            masterTable.getColumnModel().getColumn(9).setPreferredWidth(100);
            masterTable.getColumnModel().getColumn(10).setPreferredWidth(100);
            masterTable.getColumnModel().getColumn(11).setPreferredWidth(60);
            masterTable.getColumnModel().getColumn(12).setPreferredWidth(250);
            masterTable.getColumnModel().getColumn(13).setPreferredWidth(60);
        }

        jLabel3.setText("CNPJ/CPF:");
        jLabel3.setToolTipText("");

        jTextField1.setBackground(new java.awt.Color(204, 255, 204));
        jTextField1.setToolTipText("");

        jLabel4.setText("Outros Numeros:");
        jLabel4.setToolTipText("");

        jTextFieldOutrosNumeros.addKeyListener(formListener);

        jLabel5.setText("Tipo:");
        jLabel5.setToolTipText("");

        jComboBoxTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nรฃo Pagos", "Pagos", "Vencidos", "Cancelados", "Todos" }));
        jComboBoxTipo.addPropertyChangeListener(formListener);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(204, 0, 0));
        jButton2.setText("Aplicar");
        jButton2.addActionListener(formListener);

        dataFinaljDateChooser.setDate(ManagerData.getUltimoDiaDoMes(ManagerData.getDate()));

        dataInicialjDateChooser.setDate(ManagerData.getDate());

        jLabel6.setText("รก");

        jLabel7.setText("Data:");

        jCheckBoxTodos.setSelected(true);
        jCheckBoxTodos.setText("Todos");
        jCheckBoxTodos.addItemListener(formListener);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Resumo"));

        editarJButon.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        editarJButon.setForeground(new java.awt.Color(0, 0, 153));
        editarJButon.setText("Editar");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.quitado == false}"), editarJButon, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        editarJButon.addActionListener(formListener);

        novaJButon.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        novaJButon.setForeground(new java.awt.Color(0, 0, 153));
        novaJButon.setText("Nova");
        novaJButon.addActionListener(formListener);

        jLabel8.setText("Tรญtulos");
        jLabel8.setToolTipText("");

        jTextFieldTitulos.setEditable(false);
        jTextFieldTitulos.setBackground(new java.awt.Color(204, 204, 255));
        jTextFieldTitulos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldTitulos.setText("0,00");
        jTextFieldTitulos.setToolTipText("");

        jTextFieldPagos.setEditable(false);
        jTextFieldPagos.setBackground(new java.awt.Color(204, 204, 255));
        jTextFieldPagos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldPagos.setText("0,00");
        jTextFieldPagos.setToolTipText("");

        jLabel9.setText("Pagos");
        jLabel9.setToolTipText("");

        jTextFieldAPagar.setEditable(false);
        jTextFieldAPagar.setBackground(new java.awt.Color(204, 204, 255));
        jTextFieldAPagar.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldAPagar.setText("0,00");
        jTextFieldAPagar.setToolTipText("");

        jLabel10.setText("ร Pagar");
        jLabel10.setToolTipText("");

        jTextFieldRegistros.setEditable(false);
        jTextFieldRegistros.setBackground(new java.awt.Color(204, 255, 204));

        jLabel11.setText("Registros");

        baixarJButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        baixarJButton.setText("Baixar Selecionado");
        baixarJButton.addActionListener(formListener);

        cancelarJButon.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cancelarJButon.setForeground(new java.awt.Color(204, 0, 0));
        cancelarJButon.setText("Cancelar");
        cancelarJButon.addActionListener(formListener);

        reabrirJButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        reabrirJButton.setForeground(new java.awt.Color(204, 0, 0));
        reabrirJButton.setText("Reabrir");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.quitado == true}"), reabrirJButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        reabrirJButton.addActionListener(formListener);

        jButton8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton8.setText("Pagamento Rapido");
        jButton8.addActionListener(formListener);

        jButton9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton9.setText("Parcelamento");
        jButton9.addActionListener(formListener);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(editarJButon, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(novaJButon, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cancelarJButon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(reabrirJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(baixarJButton, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldTitulos, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldPagos, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jTextFieldAPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldTitulos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldPagos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldAPagar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(baixarJButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(novaJButon)
                    .addComponent(cancelarJButon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editarJButon)
                    .addComponent(reabrirJButton)
                    .addComponent(jButton8)
                    .addComponent(jButton9))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 961, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(uJComboBoxCorentistas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jCheckBoxTodos))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jTextFieldOutrosNumeros, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dataInicialjDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dataFinaljDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 154, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(uJComboBoxCorentistas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxTodos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldOutrosNumeros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jComboBoxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addComponent(dataFinaljDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dataInicialjDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel6)))
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("");

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.ItemListener, java.awt.event.KeyListener, java.beans.PropertyChangeListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == jButton2) {
                ConsultaPagamentos.this.jButton2ActionPerformed(evt);
            }
            else if (evt.getSource() == editarJButon) {
                ConsultaPagamentos.this.editarJButonActionPerformed(evt);
            }
            else if (evt.getSource() == novaJButon) {
                ConsultaPagamentos.this.novaJButonActionPerformed(evt);
            }
            else if (evt.getSource() == baixarJButton) {
                ConsultaPagamentos.this.baixarJButtonActionPerformed(evt);
            }
            else if (evt.getSource() == cancelarJButon) {
                ConsultaPagamentos.this.cancelarJButonActionPerformed(evt);
            }
            else if (evt.getSource() == reabrirJButton) {
                ConsultaPagamentos.this.reabrirJButtonActionPerformed(evt);
            }
            else if (evt.getSource() == jButton8) {
                ConsultaPagamentos.this.jButton8ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton9) {
                ConsultaPagamentos.this.jButton9ActionPerformed(evt);
            }
        }

        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            if (evt.getSource() == jCheckBoxTodos) {
                ConsultaPagamentos.this.jCheckBoxTodosItemStateChanged(evt);
            }
        }

        public void keyPressed(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == masterTable) {
                ConsultaPagamentos.this.masterTableKeyPressed(evt);
            }
            else if (evt.getSource() == jTextFieldOutrosNumeros) {
                ConsultaPagamentos.this.jTextFieldOutrosNumerosKeyPressed(evt);
            }
        }

        public void keyReleased(java.awt.event.KeyEvent evt) {
        }

        public void keyTyped(java.awt.event.KeyEvent evt) {
        }

        public void propertyChange(java.beans.PropertyChangeEvent evt) {
            if (evt.getSource() == jComboBoxTipo) {
                ConsultaPagamentos.this.jComboBoxTipoPropertyChange(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        setFiltro();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextFieldOutrosNumerosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldOutrosNumerosKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            setFiltro();
        }
    }//GEN-LAST:event_jTextFieldOutrosNumerosKeyPressed

    private void editarJButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarJButonActionPerformed
        PagamentosEdit pe = new PagamentosEdit(new javax.swing.JFrame(), true, getRegistroSelecionado());
        pe.setVisible(true);
        setFiltro();
    }//GEN-LAST:event_editarJButonActionPerformed

    private void novaJButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novaJButonActionPerformed
        Pagamentos p = new Pagamentos();
        p.setIdTitulo(Retorna.JsysParametros().getIdTituloDinhero());
        p.setIdContabil(Retorna.JsysParametros().getIdGeralPagamento());
        p.setIdLoja(Retorna.getLoja());
        PagamentosEdit pe = new PagamentosEdit(new javax.swing.JFrame(), true, p);
        pe.setVisible(true);
        setFiltro();
    }//GEN-LAST:event_novaJButonActionPerformed

    private void baixarJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baixarJButtonActionPerformed
        if (!listPagamentos.isEmpty()) {
            BaixarPagamento b = new BaixarPagamento(new javax.swing.JFrame(), true);
            b.setListPagamentosMarcados(listPagamentos);
            b.setVisible(true);
            setFiltro();
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um Registro", "Aviso", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_baixarJButtonActionPerformed

    private void cancelarJButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarJButonActionPerformed
        List<String> ids = new ArrayList<>();
        for (pagamentosMarcados p : listPagamentos) {
            ids.add(p.getPag().getIdPagamentos().toString());
        }
        LiberacaoGenericaJDialog L = new LiberacaoGenericaJDialog(
                LiberacaoGenericaJDialog.FINANCEIRO,
                "Pagamentos",
                ids,
                LiberacaoGenericaJDialog.CANCELAMENTO,
                "");
        if (L.isConfirma()) {
            for (pagamentosMarcados p : listPagamentos) {
                p.getPag().setValorEstorno(p.getPag().getValorPago());
                p.getPag().setDataAlteracao(ManagerData.getDate());
                p.getPag().setUsuarioAlteracao(Menu.getNomeUsuario());
                p.getPag().setDataCancelar(ManagerData.getDate());
                p.getPag().setObsCancelamento(L.getMotivo());
                try {
                    ConnectionFactory.update(p.getPag());
                } catch (RollbackException e) {
                    Log.registraErro(this.getClass().getName(), "cancelarJButonActionPerformed", e);
                }
            }
            listPagamentos.clear();
            setFiltro();
            masterTable.repaint();
        }
    }//GEN-LAST:event_cancelarJButonActionPerformed

    private void reabrirJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reabrirJButtonActionPerformed
        String obs = (String) JOptionPane.showInputDialog(null, "Motivo do Reabertura", "Reabertura", JOptionPane.INFORMATION_MESSAGE);
        if (obs != null) {
            Pagamentos p = getRegistroSelecionado();
            Liberacao l = new Liberacao();
            l.setTabelaOrigem("Pagamentos");
            l.setIdOrigem(p.getIdPagamentos().toString());
            l.setMotivo(obs);
            l.setUsuario(Menu.getNomeUsuario());
            l.setData(ManagerData.getDataAtualTypeDate(ManagerData.INICIO));
            l.setHora(ManagerData.getDate());
            l.setTipo(LiberacaoGenericaJDialog.REABERTURA);
            l.setUsuarioLogado(Menu.getNomeUsuario());
            p.setValorEstorno(BigDecimal.ZERO);
            p.setValorPago(BigDecimal.ZERO);
            p.setRestante(BigDecimal.ZERO);
            p.setDataPagamento(null);
            p.setDataAlteracao(ManagerData.getDate());
            p.setUsuarioAlteracao(Menu.getNomeUsuario());
            p.setDataCancelar(null);
            p.setObsCancelamento(null);
            p.setIdTituloBaixa("");
            p.setQuitado(false);
            try {
                ConnectionFactory.insert(l);
                ConnectionFactory.update(p);
            } catch (RollbackException e) {
                Log.registraErro(this.getClass().getName(), "jButton7ActionPerformed", e);
            }
            setFiltro();
        }
    }//GEN-LAST:event_reabrirJButtonActionPerformed

    private void jComboBoxTipoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBoxTipoPropertyChange
        switch (jComboBoxTipo.getSelectedIndex()) {
            case 0:
                ativaDatas(true);
                break;
            case 1:
                ativaDatas(true);
                break;
            case 2:
                ativaDatas(false);
                break;
            case 3:
                ativaDatas(true);
                break;
            case 4:
                ativaDatas(true);
                break;
        }
    }//GEN-LAST:event_jComboBoxTipoPropertyChange

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        new PagamentosCaixa();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        CadastrarParcelamento dialog = new CadastrarParcelamento(new javax.swing.JFrame(), true);
        dialog.setVisible(true);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jCheckBoxTodosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxTodosItemStateChanged
        if (jCheckBoxTodos.isSelected()) {
            uJComboBoxCorentistas.setEnabled(false);
            uJComboBoxCorentistas.setSelectedIndex(0);
        } else {
            uJComboBoxCorentistas.setEnabled(true);
            uJComboBoxCorentistas.setSelectedIndex(0);
        }
    }//GEN-LAST:event_jCheckBoxTodosItemStateChanged

    private void masterTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_masterTableKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            int[] selection = masterTable.getSelectedRows();
            Pagamentos row = null;
            for (int i = 0; i < selection.length; i++) {
                row = list.get(masterTable.convertRowIndexToModel(selection[i]));
            }
            if (row != null) {
                pagamentosMarcados p = new pagamentosMarcados();
                p.setId(row.getIdPagamentos());
                p.setSeq(row.getIdLoja());
                p.setPag(row);
                if (listPagamentos.contains(p)) {
                    listPagamentos.remove(p);
                } else {
                    listPagamentos.add(p);
                }
            }
        }
        masterTable.repaint();
    }//GEN-LAST:event_masterTableKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton baixarJButton;
    private javax.swing.JButton cancelarJButon;
    private com.toedter.calendar.JDateChooser dataFinaljDateChooser;
    private com.toedter.calendar.JDateChooser dataInicialjDateChooser;
    private javax.swing.JButton editarJButon;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBoxTodos;
    private javax.swing.JComboBox jComboBoxTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextFieldAPagar;
    private javax.swing.JTextField jTextFieldOutrosNumeros;
    private javax.swing.JTextField jTextFieldPagos;
    private javax.swing.JTextField jTextFieldRegistros;
    private javax.swing.JTextField jTextFieldTitulos;
    private java.util.List<Pagamentos> list;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private javax.swing.JButton novaJButon;
    private javax.persistence.Query query;
    private javax.swing.JButton reabrirJButton;
    private componentes.UJComboBox uJComboBoxCorentistas;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    /**
     * @return JsysProdutosTFabricantes selecionado
     */
    private JsysClientes getuJComboBoxClientes() {
        try {
            return (JsysClientes) uJComboBoxCorentistas.getSelectedObject();
        } catch (Exception ignore) {
            return null;
        }
    }

    private void setFiltro() {
        Map<Object, Object> filtro = new HashMap<>();
        List<Object> objeto;
        objeto = null;
        Integer t = jCheckBoxTodos.isSelected() ? 0 : 1;
        if (jTextFieldOutrosNumeros.getText().isEmpty()) {
            switch (jComboBoxTipo.getSelectedIndex()) {
                case 0:
                    // nรฃo pagos
                    filtro.clear();
                    filtro.put("dataVencimentoInicial", ManagerData.setHoraInicioDia(dataInicialjDateChooser.getDate()));
                    filtro.put("dataVencimentoFinal", ManagerData.setHoraFimDia(dataFinaljDateChooser.getDate()));
                    filtro.put("quitado", false);
                    filtro.put("idFornecedor", getuJComboBoxClientes());
                    filtro.put("todos", t);
                    objeto = Retorna.findList("Pagamentos.findByDataVencimentoQuitado", filtro);
                    break;
                case 1:
                    // pagos
                    filtro.clear();
                    filtro.put("dataPagamentoInicial", ManagerData.setHoraInicioDia(dataInicialjDateChooser.getDate()));
                    filtro.put("dataPagamentoFinal", ManagerData.setHoraFimDia(dataFinaljDateChooser.getDate()));
                    filtro.put("quitado", true);
                    filtro.put("idFornecedor", getuJComboBoxClientes());
                    filtro.put("todos", t);
                    objeto = Retorna.findList("Pagamentos.findByDataPagamentoQuitado", filtro);
                    break;
                case 2:
                    // vencidos
                    filtro.clear();
                    filtro.put("dataVencimento", ManagerData.setHoraFimDia(ManagerData.getDate()));
                    filtro.put("quitado", false);
                    filtro.put("idFornecedor", getuJComboBoxClientes());
                    filtro.put("todos", t);
                    objeto = Retorna.findList("Pagamentos.findByVencidos", filtro);
                    break;
                case 3:
                    // cancelados
                    filtro.clear();
                    filtro.put("dataVencimentoInicial", ManagerData.setHoraInicioDia(dataInicialjDateChooser.getDate()));
                    filtro.put("dataVencimentoFinal", ManagerData.setHoraFimDia(dataFinaljDateChooser.getDate()));
                    filtro.put("idFornecedor", getuJComboBoxClientes());
                    filtro.put("todos", t);
                    objeto = Retorna.findList("Pagamentos.findByDataVencimentoCancelados", filtro);
                    break;
                case 4:
                    // todos
                    filtro.clear();
                    filtro.put("dataVencimentoInicial", ManagerData.setHoraInicioDia(dataInicialjDateChooser.getDate()));
                    filtro.put("dataVencimentoFinal", ManagerData.setHoraFimDia(dataFinaljDateChooser.getDate()));
                    filtro.put("idFornecedor", getuJComboBoxClientes());
                    filtro.put("todos", t);
                    objeto = Retorna.findList("Pagamentos.findByDataVencimento", filtro);
                    break;
            }
        } else {
            filtro.clear();
            filtro.put("outrosNumeros", jTextFieldOutrosNumeros.getText().trim());
            objeto = Retorna.findList("Pagamentos.findByOutrosNumeros", filtro);
        }
        list.clear();
        listPagamentos.clear();
        for (Object o : objeto) {
            Pagamentos p = (Pagamentos) o;
            list.add(p);
        }
        BigDecimal titulos = BigDecimal.ZERO;
        BigDecimal pagos = BigDecimal.ZERO;

        for (int i = 0; i < masterTable.getRowCount(); i++) {
            titulos = titulos.add((BigDecimal) masterTable.getValueAt(i, 7));
            pagos = pagos.add((BigDecimal) masterTable.getValueAt(i, 8));
        }
        jTextFieldTitulos.setText(br.sql.util.ManagerDecimal.converter(titulos));
        jTextFieldPagos.setText(br.sql.util.ManagerDecimal.converter(pagos));
        jTextFieldAPagar.setText(br.sql.util.ManagerDecimal.converter(titulos.subtract(pagos)));
        jTextFieldRegistros.setText(String.valueOf(masterTable.getRowCount()));
    }

    private void ativaDatas(boolean b) {
        dataInicialjDateChooser.setEnabled(b);
        dataFinaljDateChooser.setEnabled(b);
    }

    private Pagamentos getRegistroSelecionado() {
        int[] selected = masterTable.getSelectedRows();
        Pagamentos pagamento = null;
        for (int idx = 0; idx < selected.length; idx++) {
            Map<Object, Object> filtro = new HashMap<>();
            filtro.put("idPagamentos", (Integer) masterTable.getValueAt(selected[idx], 0));
            pagamento = (Pagamentos) br.sql.util.Retorna.findOneResult("Pagamentos.findByIdPagamentos", filtro);
        }
        return pagamento;
    }
}
